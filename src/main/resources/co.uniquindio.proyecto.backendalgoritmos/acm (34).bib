@inproceedings{10.1145/3059009.3059017,
author = {Lamprou, Anna and Repenning, Alexander and Escherle, Nora A.},
title = {The Solothurn Project: Bringing Computer Science Education to Primary Schools in Switzerland},
year = {2017},
isbn = {9781450347044},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3059009.3059017},
doi = {10.1145/3059009.3059017},
abstract = {Currently Switzerland is going through a major reform in its education system. One of its most ambitious and important goals is the inclusion of Computer Science Education already on the primary school level, an important measure in achieving the establishment of an information society. Such a reform raises questions about the appropriate types of approaches to be developed and employed for an effective implementation of Computer Science Education concepts in Swiss primary schools. To this end, the project "Scalable Game Design Solothurn" was developed and evaluated. This project both trained teachers and exposed students to Computational Thinking concepts through the two Computational Thinking Tools AgentSheets and AgentCubes online. Results show that teaching Computational Thinking through Scalable Game Design is not only feasible on the primary school level but also enjoyable, with AgentSheets and AgentCubes online proving to be sustainable and effective tools for the implementation of Computer Science Education on this school level. Further analysis of the data enables us to make recommendations regarding optimal ways of implementation for the Swiss reality and point towards new research directions.},
booktitle = {Proceedings of the 2017 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {218–223},
numpages = {6},
keywords = {professional teacher development, primary schools, experience repor, computer science education, computational thinking},
location = {Bologna, Italy},
series = {ITiCSE '17}
}

@inproceedings{10.1145/3585088.3589357,
author = {Chen, John and Zhao, Lexie and Horn, Mike and Wilensky, Uri},
title = {The Pocketworld Playground: Engaging Online, Out-of-School Learners with Agent-based Programming},
year = {2023},
isbn = {9798400701313},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3585088.3589357},
doi = {10.1145/3585088.3589357},
abstract = {Agent-based modeling (ABM) has become a major approach to promote computational thinking and complex systems thinking in K-12 education. However, agent-based programming (ABP), the computational foundation of ABM, is less defined and discussed in previous literature. Summarizing previous studies around ABP from computer science and education, we argued for the potential benefits of introducing ABP to youth. Rooted in the interest development theory, we presented the design of a scaffolded agent-based programming space, the Pocketworld Playground (POP), that aims to engage out-of-school online young learners through developing their interest in ABP. The POP was built in Turtle Universe (TU), the mobile incarnation of NetLogo. Using a mixed-methods approach to analyze log data and artifacts created by learners, we found that POP successfully engaged learners with ABP practices; helped develop situational and individual interest; and contributed to TU’s emerging online community. Finally, we discussed design lessons that could benefit other online learning designers.},
booktitle = {Proceedings of the 22nd Annual ACM Interaction Design and Children Conference},
pages = {267–277},
numpages = {11},
keywords = {Agent-based Programming, Agent-based modeling, Computational Literacy, Constructionism, Informal Learning},
location = {Chicago, IL, USA},
series = {IDC '23}
}

@inproceedings{10.1145/3361721.3362116,
author = {Twigg, Sarah and Blair, Lynne and Winter, Emily},
title = {Using children's literature to introduce computing principles and concepts in primary schools: work in progress},
year = {2019},
isbn = {9781450377041},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3361721.3362116},
doi = {10.1145/3361721.3362116},
abstract = {With the recent paradigm shift in the teaching of computing and computational thinking skills, schools are engaging pupils as young as five in learning principles and concepts of programming. However, there are still many challenges within primary computing education, including the cost and availability of resources, and teachers' familiarity and/or confidence with these resources. In this paper, we offer an approach that develops a creative story-based pedagogy to address constraints such as these and facilitate the development of lesson plans supporting scaffolding and differentiation. Children's literature is used to introduce concepts such as pattern matching, abstraction and algorithms, along with the three main programming constructs of sequencing, repetition and selection. Through four stages of Read-Act-Model-Program (RAMP), we present a set of unplugged and Scratch-based activities and reflect on the potential impact of this educational opportunity to inspire an early interest in computing.},
booktitle = {Proceedings of the 14th Workshop in Primary and Secondary Computing Education},
articleno = {23},
numpages = {4},
keywords = {Programming, Primary, Pedagogy, Computational Thinking, Children's Literature},
location = {Glasgow, Scotland, Uk},
series = {WiPSCE '19}
}

@inproceedings{10.1145/3631802.3631819,
author = {Johnson, Michael J. and Baker-Ramos, Rachel and Hovey, Christopher Lynnly and DiSalvo, Betsy},
title = {Keeping Mindful of Modality: A Comparison of Computer Science Education Resources for Learning},
year = {2024},
isbn = {9798400716539},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3631802.3631819},
doi = {10.1145/3631802.3631819},
abstract = {Educators often use computer science education resources to enhance the learning process, which come with a variety of output modalities (e.g., audiovisual, tangible) and coding modalities (e.g., block-based, text-based). While these resources are typically evaluated for their applicability and impact on young populations, they are not often analyzed through a comparison of their coding and output modalities, nor as a whole to each other. In this paper, we conducted BridgeUP STEM, an afterschool CS course for high school women and gender non-conforming individuals aimed at developing their computational thinking skills and exposing them to coding and CS. We collected and analyzed interview data for 16 participants on their experiences within the course and attitudes towards various output and coding modalities. Throughout the study, the students’ reflections on their own learning revealed the affordances and drawbacks of each resource in terms of outputs the resources provided, feedback the students received, and how both affected the students’ troubleshooting. We present these findings and use them to provide recommendations for approaches to teaching computer science.},
booktitle = {Proceedings of the 23rd Koli Calling International Conference on Computing Education Research},
articleno = {18},
numpages = {14},
keywords = {afterschool, computer science education, modality, physical computing, screen-based computing},
location = {Koli, Finland},
series = {Koli Calling '23}
}

@article{10.1145/3579365,
author = {V\'{a}squez, Francisco and Calder\'{o}n, Juan Felipe and Meza, Federico and V\'{a}squez, Andrea},
title = {Validation of a Spanish-language Version of a Computer Programming Aptitude Test for First-year University Students},
year = {2023},
issue_date = {June 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {23},
number = {2},
url = {https://doi.org/10.1145/3579365},
doi = {10.1145/3579365},
abstract = {There is increasing interest in computer science and computing bachelor programs due to the growing importance of technology in the globalized world. Thus, as higher education institutions strive to serve a diverse student demographic, it is salient to gauge their programming abilities to improve guidance on learning processes regarding their initial knowledge state. Despite the availability of certain instruments to measure student programming skills, these are traditionally aimed at younger populations and do not accurately discriminate the different levels of ability among university students. This article introduces a translation into Spanish and validation of an existing English-language aptitude test for computing jobs that can be used to measure the programming abilities of students with no prior experience in the field. Following a cyclic research methodology, two iterations were carried out in this article. First, the aforementioned test was translated and validated via expert judgment and focus groups, in which certain items were removed subsequent to a quantitative analysis. The resultant instrument underwent a second validation using a larger population of students. Analysis conducted after the second iteration showed this instrument to deliver good internal consistency, good difficulty and discrimination indices, and a moderate correlation with the grades of the midterm exam of a programming course undertaken by first year engineering students. This work contributes to both increasing the number of tests available in the Spanish language with which to assess programming abilities, as well as to the broader literature regarding test adaptation, translation and validation.},
journal = {ACM Trans. Comput. Educ.},
month = mar,
articleno = {21},
numpages = {20},
keywords = {quantitative research, cs1, validation, programming aptitude, assessment, Programming assessment}
}

@inproceedings{10.1145/3502717.3532127,
author = {Kirwan, Colette and Connolly, Cornelia},
title = {Computer Science Education in Ireland: Capacity, Access and Participation},
year = {2022},
isbn = {9781450392006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3502717.3532127},
doi = {10.1145/3502717.3532127},
abstract = {Our world is both physical and digital. Students would benefit from understanding how this digital world works, and how algorithms drive it [2]. Students would also benefit from learning computational thinking, and becoming creators and designers of computer systems and applications. These are invaluable skills; not just a means to ensure a skilled workforce [1]. However, diversity, gender balance, and equality are recognized globally as challenges in this field. Looking through a lens filtered on four components: diversity, inclusion, teacher education and professional development, this study will evaluate current Computer Science (CS) learning opportunities in the Irish primary and post-primary curriculum. It aims to identify the opportunities and key factors for the growth and development of CS in Ireland. This research is divided into three phases, influenced by the three components of the CAPE model [3] that underpins this study: Capacity for, Access to, and Participation in CS education. Data will be gathered using various means: focus groups (students, teachers, principals and policymakers), and student questionnaires. The analytic approach is mixed, it involves document, thematic and content analysis. Findings from this study will provide a detailed view of the current landscape relating to CS education in Ireland, particularly its diversity and inclusion. Recommendations on the equitable integration of Computational Thinking/Coding/CS education across the formal education system in Ireland will be provided. This will have implications for educational policy, initial teacher education, and second-level teaching practice in Ireland and beyond.},
booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 2},
pages = {610},
numpages = {1},
keywords = {cape model, computer science landscape, diversity, equity., inclusion},
location = {Dublin, Ireland},
series = {ITiCSE '22}
}

@inproceedings{10.1145/3582580.3582637,
author = {Tang, Wenlu and Cheng, Yun and Ai, Mingying and Yi, Xinyu},
title = {Case Study on a High-quality Information Technology Lesson Based on iFIAS},
year = {2023},
isbn = {9781450398015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3582580.3582637},
doi = {10.1145/3582580.3582637},
abstract = {With the rapid development of artificial intelligence, big data, and education informatization, information technology education has been playing an important role in improving student's information competences and cultivating student's computational thinking. Information technology teachers can develop professional skills by the observation and analysis of high-quality information technology lessons. Therefore, this study selects a high-quality information technology lesson from the campaign which is held by Ministry of Education, analyzes its teaching behaviors based on improved Flanders Interaction Analysis System(iFIAS), as well as summarizes the key characteristics and problems, aiming to provide references for information technology teachers to improve teaching quality.},
booktitle = {Proceedings of the 2022 5th International Conference on Education Technology Management},
pages = {327–332},
numpages = {6},
keywords = {iFIAS, high-quality lesson, analysis of teaching Behavior, Information technology},
location = {Lincoln, United Kingdom},
series = {ICETM '22}
}

@inproceedings{10.1145/3626253.3635617,
author = {Berner, Maverick and Berner, Maximus and Ronan, Darcy and Brylow, Dennis},
title = {Co-Designing Integrated CS Curriculum Artifacts with K-5 Classroom Teachers},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635617},
doi = {10.1145/3626253.3635617},
abstract = {What would happen if generalist K-5 teachers had the technical support to build custom digital tools integrating computing concepts across other fields of study? This could open new avenues for students to learn computational thinking, without compromising time spent in other important subject areas. Furthermore, it could grant teachers the same level of creativity in developing computing resources that they have in other curriculum areas, rather than being limited by available resources or by their own lack of expertise. With this poster, we will cover our approach to co-designing digital tools with K-5 teachers for the primary goal of integrating computing concepts into a variety of other subject areas. We reflect on the observations we made throughout the collaboration and how they impacted our approach moving forward. Additionally, we will highlight some of the tools that came out of the collaboration and how co-designing a specialized digital tool from the ground up granted teachers the flexibility to explore ideas beyond integrating computer science concepts, including student accessibility, engagement, and social emotional learning (SEL).},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1570–1571},
numpages = {2},
keywords = {accessibility, k-12 computing education, professional development},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3178158.3178175,
author = {Wen, Xinxiu and Yang, Zeping and Wang, Zhanquan},
title = {Research on enhancing non-major students' abilities based on constructivism},
year = {2018},
isbn = {9781450353595},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3178158.3178175},
doi = {10.1145/3178158.3178175},
abstract = {Improving students' abilities of computational thinking and professional problems solving is an urgent issue for non-major students who live in the information age. This paper first analyzes the reasons of the above issue from time gap and guide absence. Constructivism learning theory is then introduced as the guiding principle, and its four core characteristics are elaborated by the computer innovative practice base of East China University of Science and Technology (ECUST). Furthermore, the project based collaborative learning process is illustrated step by step to solve the existed problem. In the end, four years' experimental result shows the method is effective in improving students' abilities of analyzing professional problems, solving professional problem and cultivating computational thinking.},
booktitle = {Proceedings of the 6th International Conference on Information and Education Technology},
pages = {139–143},
numpages = {5},
keywords = {project based collaborative learning, professional problems solving, constructivism, computational thinking},
location = {Osaka, Japan},
series = {ICIET '18}
}

@inproceedings{10.1145/3593663.3593666,
author = {D\"{u}mmel, Nikita and Westfechtel, Bernhard and Ehmann, Matthias},
title = {A Multi-Paradigm Programming Language for Education},
year = {2023},
isbn = {9781450399562},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3593663.3593666},
doi = {10.1145/3593663.3593666},
abstract = {An introductory CS1 course at universities has to meet different requirements. In addition to computational thinking, students have to learn a programming language and its underlying concepts. Furthermore, they should be educated in different paradigms such as procedural, object-oriented, and functional programming. Industrial-strength languages are optimized towards the requirements of professional software developers and tend to offer an overwhelming and complex set of language constructs. Using such a language in a CS1 course, students find themselves mainly struggling with learning the language, being primarily exposed to simple programs for demonstrating its constructs. In contrast, MuLE is an educational language that supports multiple paradigms with a small set of carefully designed constructs. Using MuLE, beginners may develop programming skills more easily, while they still learn underlying concepts systematically that may be transferred to other languages in their further education.},
booktitle = {Proceedings of the 5th European Conference on Software Engineering Education},
pages = {236–245},
numpages = {10},
keywords = {programming paradigm, programming language, CS1 course},
location = {Seeon/Bavaria, Germany},
series = {ECSEE '23}
}

@inproceedings{10.1145/3311790.3396620,
author = {S. Sinkovits, Robert and D. Soto, Osvaldo},
title = {Introducing Computing and Technology through Problem-Solving in Discrete Mathematics},
year = {2020},
isbn = {9781450366892},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3311790.3396620},
doi = {10.1145/3311790.3396620},
abstract = {Mathematics is usually taught using a traditional pencil-and-paper approach and frequently lacks real-world contextual referents, leading to a sense of alienation among secondary students and missed opportunities to advance students’ mathematical and computational thinking. In contrast, many real-world problems require mathematical solutions that are often of such a scale that they can only be solved using computational techniques, but require powerful ways of thinking that span the Common Core State Standards (CCSS) for Mathematical Practices (MP) and Computer Science Principles (CSP). We describe here our program that aims at advancing both MPs and CSPs through the introduction of technology and computing into the high school discrete mathematics curriculum. Our goal in the first two years of this new program is to reach a cohort of 40 teachers and 72 students. Using lessons learned from this pilot, we will consider how our program can be scaled up to reach a much larger audience.},
booktitle = {Practice and Experience in Advanced Research Computing 2020: Catch the Wave},
pages = {429–435},
numpages = {7},
keywords = {Computational thinking, Jupyter notebooks, STEM education, discrete math, secondary education},
location = {Portland, OR, USA},
series = {PEARC '20}
}

@inproceedings{10.1145/3141880.3143780,
author = {von Hausswolff, Kristina},
title = {Practical thinking in programming education},
year = {2017},
isbn = {9781450353014},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3141880.3143780},
doi = {10.1145/3141880.3143780},
abstract = {Students are nowadays being introduced to the digital age as part of their formal education. This includes practical programming skills as well as more conceptual thinking tools developed in the discipline of computer science, sometimes denoted Computational Thinking (CT). The connection between CT and doing programming is sometimes thought of as the connection between theory and practice. The pragmatic thinker Dewey embraced practice in learning and argued that learning and knowing always come from experiencing the world. According to this view, there are no epistemological differences between theory and practice. In computer programming the student's active learning in the form of physical motor movement is important. Using the pragmatic way of analyzing learning to program puts a focus on the situated thinking during the practical programming, which relates to theories about CT. This research is focusing on the practical hands-on part of novice programming and in this aims at getting insights about factors important when learning to program that could inform teachers in the Computer Science classroom.},
booktitle = {Proceedings of the 17th Koli Calling International Conference on Computing Education Research},
pages = {203–204},
numpages = {2},
keywords = {pragmatism, practice, novice programming, computer science education, computational thinking},
location = {Koli, Finland},
series = {Koli Calling '17}
}

@inproceedings{10.1145/3545945.3569736,
author = {Friend, Michelle and Swift, Andrew W. and Love, Betty and Winter, Victor},
title = {A Wolf in Lamb's Clothing: Computer Science in a Mathematics Course},
year = {2023},
isbn = {9781450394314},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545945.3569736},
doi = {10.1145/3545945.3569736},
abstract = {If computer science programs face a challenge of convincing students that programming is fun and achievable, they have nothing on mathematics departments who face societal beliefs that math is hard and scary. Several movements in computer science education have focused on broadening participation within computer science and across disciplines. The "CS + X" efforts have focused on helping computer science integrate into other disciplines. The "CS For All" movement has highlighted the importance of providing high quality computing education for all students. Simultaneously, there is increasing attention to the need to provide general education alternatives to college algebra. This paper describes a course designed to combine these goals: a course that uses programming to introduce students to functions, patterns, and spatial and computational thinking in order to meet quantitative reasoning goals set by the university. The course initially used Bricklayer as the programming environment, then transitioned to Processing. Students were successful in writing programs that created art, demonstrated mastery of quantitative literacy, and had improved attitudes following the course. This project suggests that in addition to the creation of introductory computer science classes, courses which embed computer science into disciplinary requirements can be a successful pathway to expand opportunities for students to learn computing.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
pages = {256–262},
numpages = {7},
keywords = {cs+x, interdisciplinary, mathematics},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3372782.3406268,
author = {Gendreau Chakarov, Alexandra and Biddy, Quentin and Jacobs, Jennifer and Recker, Mimi and Sumner, Tamara},
title = {Opening the Black Box: Investigating Student Understanding of Data Displays Using Programmable Sensor Technology},
year = {2020},
isbn = {9781450370929},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3372782.3406268},
doi = {10.1145/3372782.3406268},
abstract = {This paper describes the design and classroom implementation of a week-long unit that aims to integrate computational thinking (CT) into middle school science classes using programmable sensor technology. The goals of this sensor immersion unit are to help students understand why and how to use sensor and visualization technology as a powerful data-driven tool for scientific inquiry in ways that align with modern scientific practice. The sensor immersion unit is anchored in the investigation of classroom data where students engage with the sensor technology to ask questions about and design displays of the collected data. Students first generate questions about how data data displays work and then proceed through a set of programming exercises to help them understand how to collect and display data collected from their classrooms by building their own mini data displays. Throughout the unit students draw and update their hand drawn models representing their current understanding of how the data displays work. The sensor immersion unit was implemented by ten middle school science teachers during the 2019/2020 school year. Student drawn models of the classroom data displays from four of these teachers were analyzed to examine students' understandings in four areas: function of sensor components, process models of data flow, design of data displays, and control of the display. Students showed the best understanding when describing sensor components. Students exhibited greater confusion when describing the process of how data streams moved through displays and how programming controlled the data displays.},
booktitle = {Proceedings of the 2020 ACM Conference on International Computing Education Research},
pages = {291–301},
numpages = {11},
keywords = {sensors, middle school science, micro:bit, computational thinking},
location = {Virtual Event, New Zealand},
series = {ICER '20}
}

@inproceedings{10.1145/3372782.3406257,
author = {Franklin, Diana and Salac, Jean and Crenshaw, Zachary and Turimella, Saranya and Klain, Zipporah and Anaya, Marco and Thomas, Cathy},
title = {Exploring Student Behavior Using the TIPP&amp;SEE Learning Strategy},
year = {2020},
isbn = {9781450370929},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3372782.3406257},
doi = {10.1145/3372782.3406257},
abstract = {With the rise of Computational Thinking (CT) instruction at the elementary level, it is imperative for elementary computing instruction to support a variety of learners. TIPP&amp;SEE is a meta-cognitive learning strategy that scaffolds student learning when learning from example code. Results from a previous study show statistically-significant performance differences favoring students using the TIPP&amp;SEE strategy on a written assessment. In this work, our goal is gain insight as to it why such dramatic learning differences may have occurred. We analyze the students' computational artifacts and TIPP&amp;SEE worksheets. Artifact analysis reveals that students in the TIPP&amp;SEE group are more thorough in their work, completing more elements of the required tasks. In addition, they build open-ended projects with longer scripts that utilize more learned blocks. Worksheet analysis shows that students were highly accurate on some types of questions but largely skipped others. Despite these positive behaviors, there was little statistical correlation between student worksheet correctness, project completion, and written assessment performance. Therefore, while students in the TIPP&amp;SEE group performed actions we believe lead to more success, no individual actions directly explain the results. Like other meta-cognitive strategies, the value of TIPP&amp;SEE may lie in cognitive processes not directly observable, and may vary based upon individual student differences.},
booktitle = {Proceedings of the 2020 ACM Conference on International Computing Education Research},
pages = {91–101},
numpages = {11},
keywords = {scratch, learning strategy, elementary education, computational thinking},
location = {Virtual Event, New Zealand},
series = {ICER '20}
}

@inproceedings{10.1145/3386392.3399326,
author = {Delzanno, Giorgio and Guerrini, Giovanna and Perotto, Simone and Traverso, Flavio and Mammoliti, Sofia and Staglian\`{o}, Susanna},
title = {Codinji: Welcome to the Coding Jungle!},
year = {2020},
isbn = {9781450379502},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3386392.3399326},
doi = {10.1145/3386392.3399326},
abstract = {In this paper we discuss design principles, educational goals, implementation issues and practical results of the Codinj laboratory organized at the Genova Science Festival to promote computational thinking to a broad audience via a novel combination of the Pocket Code App and the Scratch 3.0 tool. Inspired by the original Jumanji movie, the entire activity is based on the idea of using coding to help participants in being part, conceptually and physically, of a video game. From an educational perspective, the proposed exercises are aimed at introducing, with a clear goal in mind, basic computational thinking concepts such as the notion of state, instructions, executions, events and concurrency.},
booktitle = {Adjunct Publication of the 28th ACM Conference on User Modeling, Adaptation and Personalization},
pages = {151–154},
numpages = {4},
keywords = {personalization, computer science education, adaptation},
location = {Genoa, Italy},
series = {UMAP '20 Adjunct}
}

@inproceedings{10.1145/3328778.3367003,
author = {Soh, Leen-Kiat and Peteranetz, Markeya S. and Glebova, Olga},
title = {Adopting, Integrating, and Evaluating Computational Creativity Exercises and an Experience Report},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3367003},
doi = {10.1145/3328778.3367003},
abstract = {In this workshop, participants will learn how to integrate into their classes computational thinking and creative thinking activities that have been shown via rigorous research to significantly improve student learning and performance. Specifically, participants will be familiarized with the suite of Computational Creativity Exercises (non-programming-based, group-based, active learning exercises), take part in completing one of the exercises, learn how to integrate and adapt them into their courses, and be exposed to the educational research studies behind the development, design, and administration of these exercises. Participants will also learn how to conduct evidence-based, educational research studies. Workshop sessions will include presentations, an experience report, breakout group discussions, and hands-on activities. More information can be found at cse.unl.edu/agents/ic2think/CCEWorkshop},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1392},
numpages = {1},
keywords = {exercises, creative thinking, computational thinking},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/2839509.2844656,
author = {Horn, Britton and Clark, Christopher and Strom, Oskar and Chao, Hilery and Stahl, Amy J. and Harteveld, Casper and Smith, Gillian},
title = {Design Insights into the Creation and Evaluation of a Computer Science Educational Game},
year = {2016},
isbn = {9781450336857},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2839509.2844656},
doi = {10.1145/2839509.2844656},
abstract = {Computer Science (CS) education at the middle school level using educational games has seen recent growth and shown promising results. Typically these games teach the craft of programming and not the perspectives required for computational thinking, such as abstraction and algorithm design, characteristic of a CS curriculum. This research presents a game designed to teach computational thinking via the problem of minimum spanning trees to middle school students, a set of evaluation instruments, and the results of an experimental pilot study. Results show a moderate increase in minimum spanning tree performance; however, differences between gender, collaboration method, and game genre preference are apparent. Based on these results, we discuss design considerations for future CS educational games focused on computational thinking.},
booktitle = {Proceedings of the 47th ACM Technical Symposium on Computing Science Education},
pages = {576–581},
numpages = {6},
keywords = {game design, educational games, computational thinking},
location = {Memphis, Tennessee, USA},
series = {SIGCSE '16}
}

@inproceedings{10.1145/3421590.3421619,
author = {Benvenuti, Martina and Chioccariello, Augusto},
title = {Programming an educational robot with 5-6 year-old children},
year = {2020},
isbn = {9781450387590},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3421590.3421619},
doi = {10.1145/3421590.3421619},
abstract = {Computational Thinking is currently being introduced into formal education in many European countries. This has stimulated research on how to introduce computational thinking and programming in primary school and in early childhood education. This study describes a work in progress that aims to verify the potential of a programmable educational robot, Cubetto, for 5-6 year-old children in enhancing their classroom activities. The study was carried out in two Italian kindergartens (42 children) and one primary school (21 children). Preliminary results show that the efficacy of Cubetto is strongly dependent on the context of use during classroom activities. The degree of children's attention (in terms of duration) depends on the teacher's ability in involving and supporting children during tasks performed with Cubetto.},
booktitle = {Proceedings of the 15th Workshop on Primary and Secondary Computing Education},
articleno = {31},
numpages = {2},
keywords = {programming, primary school, kindergarten, educational robot},
location = {Virtual Event, Germany},
series = {WiPSCE '20}
}

@inproceedings{10.1145/3328778.3366878,
author = {Yett, Bernard and Hutchins, Nicole and Stein, Gordon and Zare, Hamid and Snyder, Caitlin and Biswas, Gautam and Metelko, Mary and L\'{e}deczi, \'{A}kos},
title = {A Hands-On Cybersecurity Curriculum Using a Robotics Platform},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366878},
doi = {10.1145/3328778.3366878},
abstract = {This paper presents a study using a robotics platform for teaching computing and cybersecurity concepts to high school students. 38 students attended a week-long camp, starting with projects such as a simulation-only game and a simple autonomous driving program for the robots in order to learn and apply computational thinking (CT) and networking skills. They were then assigned a series of challenges that required developing progressively more advanced cybersecurity measures to protect their robots. This culminated in a final challenge that required implementing defensive measures such as encryption, secure key exchange and sequence numbers. We used an evidence-centered design framework to construct rubrics for grading student work. The pre- and post-test results show that the interventions helped students learn cybersecurity and CT concepts, but they had difficulties with networking concepts. These results correlate with scores from the game and the final challenge. Overall, surveys show that the competition-based robotics learning framework engaged students and supported their overall learning, but our intervention needs to be modified to help students learn networking concepts},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1040–1046},
numpages = {7},
keywords = {robotics, networking, cybersecurity, computer science education, computational thinking, block-based programming},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

