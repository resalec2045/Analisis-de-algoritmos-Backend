@inproceedings{10.1145/3159450.3159529,
author = {McGee, Steven and McGee-Tekula, Randi and Duck, Jennifer and McGee, Catherine and Dettori, Lucia and Greenberg, Ronald I. and Snow, Eric and Rutstein, Daisy and Reed, Dale and Wilkerson, Brenda and Yanek, Don and Rasmussen, Andrew M. and Brylow, Dennis},
title = {Equal Outcomes 4 All: A Study of Student Learning in ECS},
year = {2018},
isbn = {9781450351034},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3159450.3159529},
doi = {10.1145/3159450.3159529},
abstract = {This study investigated patterns in the development of computational thinking practices in the context of the Exploring Computer Science (ECS) program, a high school introductory CS course and professional development program designed to foster deep engagement through equitable inquiry around CS concepts. Past research indicates that the personal relevance of the ECS experience influences students' expectancy-value towards computer science. Expectancy-value is a construct that is predictive of career choices. We extended our research to examine whether expectancy-value influences the development of computational thinking practices. This study took place in the context of two ECS implementation projects across two states. Twenty teachers, who implemented ECS in 2016-17, participated in the research. There were 906 students who completed beginning and end of year surveys and assessments. The surveys included demographic questions, a validated expectancy-value scale, and questions about students' course experiences. The assessments were developed and validated by SRI International as a companion to the ECS course. Overall, student performance statistically increased from pretest to posttest with effect size of 0.74. There were no statistically significant differences in performance by gender or race/ethnicity. These results are consistent with earlier findings that a personally relevant course experience positively influences students' expectancy for success. These results expanded on prior research by indicating that students' expectancy-value for computer science positively influenced student learning.},
booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
pages = {50–55},
numpages = {6},
keywords = {computer science assessment, computer science attitudes, computer science teaching practices, expectancy-value-cost, exploring computer science, high school computer science},
location = {Baltimore, Maryland, USA},
series = {SIGCSE '18}
}

@inproceedings{10.1145/3078072.3091990,
author = {Koracharkornradt, Chonnuttida},
title = {Tuk Tuk: A Block-Based Programming Game},
year = {2017},
isbn = {9781450349215},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3078072.3091990},
doi = {10.1145/3078072.3091990},
abstract = {Studying computer programming helps children develop computational thinking, a problem-solving methodology that can be transferred to solve everyday problems. Additionally, exposing children to an advanced computational concept of search algorithm allows them to see how different problem-solving techniques are designed to tackle more challenging tasks, and improve their ability to solve problems. We present a block-based programming game called Tuk Tuk for children in kindergarten level (junior version), and elementary and middle school level (standard version). With Tuk Tuk, learners create a computer program in a block-based language to control a car to complete a given task, earn money, reach the next level, and unlock new coding blocks. By completing each task, learners will learn important computational concepts and algorithms, a basis of computational thinking, such as conditionals, iterations, depth-first search (DFS) and breadth-first search (BFS).},
booktitle = {Proceedings of the 2017 Conference on Interaction Design and Children},
pages = {725–728},
numpages = {4},
keywords = {block-based programming, game},
location = {Stanford, California, USA},
series = {IDC '17}
}

@inproceedings{10.1145/3287324.3287552,
author = {Freese, Joan and Benedict, Heather and Carter, Sarah and Hessen, Katie and Karl, Rita and Peterson, Karen and Scharber, Cassandra},
title = {SciGirls Code: Creative Robotics for Tween Girls in Out of School Time},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3287552},
doi = {10.1145/3287324.3287552},
abstract = {This workshop introduces participants to SciGirls Code, a unique, connected learning model for engaging middle school girls in computer science (CS) in out of school time. The pilot project, which ran nationally at 16 sites across the United States in 2017-18, included: three curriculum strands (mobile apps, robotics, and e-textiles); role model training for female technology professionals; professional development for informal STEM educators; and a research study that investigates the ways in which learning experiences impact the development of girls' computational thinking as well as their interest and attitudes toward computer science. Workshop participants will learn best strategies for engaging girls in CS and see how those strategies play out in a creative robotics activity using Hummingbird robots. (See https://sites.google.com/tpt.org/scigirlscode/robotics/12-hummingbird-art-bot.)},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {1238},
numpages = {1},
keywords = {app development, broadening participation, computational thinking, connected learning, curriculum, e-textiles, gender equity, middle school, professional development, robotics, role models},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3545945.3569883,
author = {Parham-Mocello, Jennifer and Erwig, Martin and Niess, Margaret and Weber, Jason and Smith, Madelyn and Berliner, Garrett},
title = {Putting Computing on the Table: Using Physical Games to Teach Computer Science},
year = {2023},
isbn = {9781450394314},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545945.3569883},
doi = {10.1145/3545945.3569883},
abstract = {We describe a new introductory CS curriculum for middle schools that focuses on teaching CS concepts using the instructions and rules for playing simple, physical games. We deliberately avoid the use of technology and, in particular, programming, and we focus on games, such as tossing a coin to see who goes first and playing Tic-Tac-Toe. We report on middle-school students' understanding of basic CS concepts and their experiences with the curriculum.After piloting the curriculum in 6th and 7th grade electives, we found that students liked the curriculum and using games, while some other students reported struggling with the technical content in the algorithm unit and vocabulary across the curriculum. Overall, students gained an understanding of abstraction and representation, and most students could define an algorithm and recognize a condition. However, they could not correctly organize the instructions of an algorithm. Our results suggest that the non-coding, game-based curriculum engaged middle school students in basic CS concepts at the middle school level, but we believe there is room for improvement in delivering technical content and vocabulary related to algorithms.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
pages = {444–450},
numpages = {7},
keywords = {computational thinking, cs education, games, middle school, unplugged},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/2069618.2069694,
author = {Koh, Kyu Han and Bennett, Vicki and Repenning, Alexander},
title = {Computing indicators of creativity},
year = {2011},
isbn = {9781450308205},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2069618.2069694},
doi = {10.1145/2069618.2069694},
abstract = {Divergent thinking has been linked to creative processes leading to innovative artifacts. Measuring creative divergence can be difficult. Across the USA, the Scalable Game Design (SGD) Project includes thousands of student participants building their own games through learning computational thinking (CT). To evaluate these games, a technique, the Computational Thinking Pattern Analysis (CTPA) [1], was developed, refined and used successfully. Under three different learning conditions, divergence was computed through CTPA, and then analyzed and explored as an indication of creativity.},
booktitle = {Proceedings of the 8th ACM Conference on Creativity and Cognition},
pages = {357–358},
numpages = {2},
keywords = {computational thinking, computational thinking pattern analysis., creativity measurement, game design},
location = {Atlanta, Georgia, USA},
series = {C&amp;C '11}
}

@inproceedings{10.1145/3373625.3417998,
author = {Mountapmbeme, Aboubakar and Ludi, Stephanie},
title = {Investigating Challenges Faced by Learners with Visual Impairments using Block-Based Programming/Hybrid Environments},
year = {2020},
isbn = {9781450371032},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3373625.3417998},
doi = {10.1145/3373625.3417998},
abstract = {With an increase in the use of block-based programming environments in k-12 curriculum, the need for accessibility exists in order to serve all students. Accessible block-based systems are in their infancy. Such systems would provide students with visual impairments the opportunity to learn programming and take part in computational thinking activities using the same systems that are found appealing to most sighted learners. However, with the presence of these systems little is known about their long-term use in the educational milieu. As a result, we conducted a survey with twelve teachers of students with visual impairments to learn about the use of these systems in teaching their students and to understand the barriers that students face in the learning process. Our study reveals that only one block-based programming environment is common among teachers and that several challenges exist. These challenges range from limited learners’ preparedness through difficulties editing and navigating code, to ineffective system feedback.},
booktitle = {Proceedings of the 22nd International ACM SIGACCESS Conference on Computers and Accessibility},
articleno = {73},
numpages = {4},
keywords = {Block-based programming, challenges, programming, visually impaired},
location = {Virtual Event, Greece},
series = {ASSETS '20}
}

@inproceedings{10.1145/3328778.3372632,
author = {Greenwald, Eric and Krakowski, Ari},
title = {Coding Science Internships: Broadening Participation in Computer Science by Positioning Coding as a Tool for Doing Science},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3372632},
doi = {10.1145/3328778.3372632},
abstract = {Computational tools, and the computational thinking (CT) involved in their use, are pervasive in science, supporting and often transforming scientific understanding. Yet, longstanding disparities in access to learning opportunities means that CT's growing role risks deepening persistent inequities in STEM [2]. To address this problem, our team developed and studied two 10-lesson instructional units for middle school science classrooms, each designed to challenge persistent barriers to equitable participation in STEM. The units aim to position coding as a tool for doing science, and ultimately, encourage a broader range of students, and females in particular, to identify as programmers. Students who participated (n=391) in a recent study of the units demonstrated statistically significant learning gains, as measured on an external assessment of CT. Learning gains were particularly pronounced for female students. Findings suggest that students can develop CT through instruction that foregrounds science, and in ways that lead to more equitable outcomes.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1336},
numpages = {1},
keywords = {broadening participation, coding to learn, computational science},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3362789.3362910,
author = {Gon\c{c}alves, Jos\'{e} and Lima, Jos\'{e} and Brito, Thadeu and Brancali\~{a}o, Laiany and Camargo, Caio and Oliveira, Vitor and Conde, Miguel \'{A}.},
title = {Educational Robotics Summer Camp at IPB: A Challenge based learning case study},
year = {2019},
isbn = {9781450371919},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3362789.3362910},
doi = {10.1145/3362789.3362910},
abstract = {Robotics in education has special relevance in current digital society where students should know how to deal with technology. In this paper, it is presented an educational experiment in the mobile robotics domain. The referred experiment was part of a summer camp, which took place at the Polytechnic Institute of Bragan\c{c}a Portugal, being its technological aspects related with mobile robotics. Other than the technological aspects, the students participated in many different cultural and social activities, having the opportunity to know the city of Bragan\c{c}a and also to know different persons, mainly students, professors, researchers and laboratory technicians. The applied approach in the summer camp was a challenge based learning methodology, being involved in the experiment 3 professors, 4 monitors, working with a group of 16 secondary school students. The described experiment was planned as an activity of the RoboSTEAM - Integrating STEAM and Computational Thinking development by using robotics and physical devices ERASMUS+ Project.},
booktitle = {Proceedings of the Seventh International Conference on Technological Ecosystems for Enhancing Multiculturality},
pages = {36–43},
numpages = {8},
keywords = {Challenge Based Learning, Erasmus, Robotics, Summer camp},
location = {Le\'{o}n, Spain},
series = {TEEM'19}
}

@article{10.1145/2535915,
author = {Denning, Peter J.},
title = {Design thinking},
year = {2013},
issue_date = {December 2013},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {56},
number = {12},
issn = {0001-0782},
url = {https://doi.org/10.1145/2535915},
doi = {10.1145/2535915},
abstract = {Design thinking is the newest fashion for finding better solutions to problems. Combining it with computational thinking offers some real possibilities for improving software design.},
journal = {Commun. ACM},
month = dec,
pages = {29–31},
numpages = {3}
}

@inproceedings{10.1145/3159450.3159537,
author = {Meysenburg, Mark and Durham Brooks, Tessa and Burks, Raychelle and Doyle, Erin and Frey, Timothy},
title = {DIVAS: Outreach to the Natural Sciences through Image Processing},
year = {2018},
isbn = {9781450351034},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3159450.3159537},
doi = {10.1145/3159450.3159537},
abstract = {The DIVAS (Digital Imaging and Vision Applications in Science) project addresses workforce challenges in science, technology, engineering, and mathematics by creating a pedagogical and programmatic "on-ramp" that empowers natural science majors to engage in authentic computational problems as members of skilled, professional teams. We are developing and testing institutional practices and curricular innovations that engage and train STEM undergraduate students to use Python programming, and image processing in particular, in their undergraduate research projects. Students are recruited into the DIVAS program in the first semester of their first year. DIVAS scholars and other participating students can experience a variety of interventions including: 1) a one-credit DIVAS seminar exploring several imaging and computing topics; 2) image capture and analysis modules in introductory- or upper-level biology and chemistry courses; 3) a week-long, intensive coding bootcamp that introduces bash, git, Python programming, and the OpenCV image processing library; 4) pair programming exercises to solve genuine morphometric and colorimetric problems; 5) an extended summer research project involving image processing; and 6) weekly code reviews to check on progress and provide guidance. The DIVAS projects measures the impact of these interventions on students' self-reported efficacy in using computation to solve problems, their attitudes towards computation, and their computational thinking skills, using both established and newly developed instruments. Our first year results show that multiple interventions have had significant positive impact on students' self-efficacy and interest in using computing in their future careers, and certain computational thinking skills.},
booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
pages = {777–782},
numpages = {6},
keywords = {assessment, outreach, undergraduate instruction},
location = {Baltimore, Maryland, USA},
series = {SIGCSE '18}
}

@inproceedings{10.1145/3313831.3376130,
author = {Yu, Junnan and Bai, Chenke and Roque, Ricarose},
title = {Considering Parents in Coding Kit Design: Understanding Parents' Perspectives and Roles},
year = {2020},
isbn = {9781450367080},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3313831.3376130},
doi = {10.1145/3313831.3376130},
abstract = {As education researchers, policymakers, and industry leaders recognize the importance of computing, many coding kits (toys and apps) have emerged to help young children learn to code at home. However, how parents perceive and support their children's use of the kits at home are less understood. In this study, we performed semi-structured interviews with eighteen parents who obtained coding kits for their young children for home use. The results show parents expected their kids to have fun and meaningful interactions with the kits. In supporting the play, parents took on various roles, mostly acting as spectator, scaffolder, and teacher. While parents perceived benefits of coding kits like a changed perspective on coding, they also reported concerns, such as their limited programming knowledge to provide help. Finally, we reflect on design and research implications to develop coding kits that consider parents' perspectives and important roles in supporting young children's exploration with computational thinking.},
booktitle = {Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems},
pages = {1–14},
numpages = {14},
keywords = {coding toys and kits, educational technology, informal learning, parent roles, parents' perspectives, young children},
location = {Honolulu, HI, USA},
series = {CHI '20}
}

@inproceedings{10.1145/3287324.3293800,
author = {Scharber, Cassandra and Chang, Yu-Hui and Barksdale, Sarah and Peterson, Lana and Constantine, Angelina and Sivaraj, Ramya and Englund, Jennifer},
title = {SciGirls Code: Computational Participation for Middle School Girls},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3293800},
doi = {10.1145/3287324.3293800},
abstract = {SciGirls Code is a project which used the principles of connected learning with 16 STEM outreach partners to provide 160+ middle school girls with computational thinking (CT) and coding skills within informal education spaces. Programs completed 3 curricular strands (Mobile Apps, Robotics, E-Textiles) between September 2017-May 2018. SciGirls Code integrates a computational participation framework with connected learning. The research study investigates the ways in which computational learning experiences impact girls' development of CT; interest and attitudes toward computer science; and their understanding of how participation in technology creation impacts themselves and the world around them. This study utilizes an interpretive multi-site case study design. There are multiple data sources with different data collected at focal and participating sites. The seven (7) focal cases represent an array of settings (rural, suburban, urban) as well as a variety of programming contexts (museums, community centers, after school). The remaining nine (9) sites comprise the participating cases. Notably, interviews (in-person) from focal sites and shorts (videos) from participating sites were collected at three moments in the programming (beginning, middle, end) to document changes in understandings and skills. Content analysis was conducted, and further triangulated in teams, to develop themes for each case and cross-case comparison. Thus far, the study has found that a connected learning approach boosted the development of middle school girls' CT skills, positively impacted attitudes towards computing pathways/careers, and increased understandings of computational participation.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {1273},
numpages = {1},
keywords = {case studies, computational participation, computational thinking, connected learning, gender},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3572549.3572558,
author = {Wang, Meijuan and Wang, Yibin and Li, Hui},
title = {Exploration of a Blended Teaching Mode for the Cultivation of High-Order Computing Ability},
year = {2023},
isbn = {9781450397766},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3572549.3572558},
doi = {10.1145/3572549.3572558},
abstract = {The rapid development of information technology has a great influence on the future society. Future talents should have high-order thinking skills, such as adaptability, competence, and innovation, suitable for specific positions. Military universities undertake the important task of cultivating military talent. This work highlights the cultivation of students’ computing thinking ability in the course “The Fundamentals of Computer.” By carefully planning teaching time and content and using modern information technology and rich network teaching resources, the reform of online–offline blended teaching is practiced. The new teaching mode features high-order thinking skills training for students and realizes the transformation of the curriculum from knowledge output to high-order thinking ability orientation.},
booktitle = {Proceedings of the 14th International Conference on Education Technology and Computers},
pages = {51–57},
numpages = {7},
keywords = {The fundamentals of computer, blended teaching, computational thinking, high-order thinking skills},
location = {Barcelona, Spain},
series = {ICETC '22}
}

@inproceedings{10.1145/3368308.3415446,
author = {Sherwin, Kate and Winter, Victor},
title = {Filling an Educational Void with Spatial Thinking in the Online Age of Pandemics},
year = {2020},
isbn = {9781450370455},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3368308.3415446},
doi = {10.1145/3368308.3415446},
abstract = {COVID-19 has created challenges and opportunities for K-12 education. Advances in technology and changes to the delivery mode of educational content has provided opportunities to better integrate spatial thinking into curriculums. Such integration is of enormous value due to the centrality of spatial thinking within the STEM disciplines.},
booktitle = {Proceedings of the 21st Annual Conference on Information Technology Education},
pages = {350},
numpages = {1},
keywords = {computational thinking, mathematical thinking, spatial reasoning},
location = {Virtual Event, USA},
series = {SIGITE '20}
}

@inproceedings{10.1145/2513456.2513500,
author = {Trimble, John and Keeling, Harry},
title = {Comparative paradigms in the examination of software production},
year = {2013},
isbn = {9781450321129},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2513456.2513500},
doi = {10.1145/2513456.2513500},
abstract = {Different paradigms are used to study socioeconomic dynamics of the software development process. The study seeks to examine the software development process at the project, firm national, and international level. Three paradigms are selected to pursue this examination: 1) dialectical and historical materialism; 2) computational thinking; and 3) system dynamics. This approach of employing multiple paradigms is designed to develop a comprehensive but cohesive presentation of possible software production scenarios.},
booktitle = {Proceedings of the South African Institute for Computer Scientists and Information Technologists Conference},
pages = {341–346},
numpages = {6},
keywords = {computational thinking, information systems, materialism, software development, system dynamics},
location = {East London, South Africa},
series = {SAICSIT '13}
}

@inproceedings{10.1145/3627217.3627232,
author = {Murali, Ritwik and Sukumar, Rajkumar and Sanjana Gali, Mary and Avudaiappan, Veeramanohar},
title = {Empowering Novice Programmers with Visual Problem Solving tools},
year = {2023},
isbn = {9798400708404},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3627217.3627232},
doi = {10.1145/3627217.3627232},
abstract = {Learning one’s first programming language includes challenges of syntax, surplus code and semantics. The learning can be easy or quite hard for a novice programmer depending on the programming language. Even the small “Hello World” program code contains semantic and syntactic complexity. This paper discusses the pros and cons of multiple tools that may be used for syntax independent implementation of solutions. Based on the shortcomings of existing tools, Flowgramming – a platform independent flowcharting software for the novice programmer / problem solver and their instructor, is also proposed in the paper. Flowcharts developed using Flowgramming can be executed by the built-in interpreter which helps the novice programmer focus on understanding the problem solving strategy in a visually appealing manner and also allows for a language independent learning of solution strategies.},
booktitle = {Proceedings of the 16th Annual ACM India Compute Conference},
pages = {100–103},
numpages = {4},
keywords = {Computational Thinking, Education Technologies, Flowchart, Introductory Programming, Problem Solving, Visual Learning},
location = {Hyderabad, India},
series = {COMPUTE '23}
}

@article{10.5555/3280489.3280532,
author = {Kafura, Dennis and Erlinger, Michael},
title = {National science foundation - NSF},
year = {2018},
issue_date = {October 2018},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {34},
number = {1},
issn = {1937-4771},
abstract = {Dennis Kafura will describe his experience in obtaining NSF funding to support the development and improvement of a general education Computational Thinking course. The funding was from NSF's TUES/EAGER and IUSE programs. The research developed technology for a scaffolded data science context, an infrastructure for feedback directed at student misconceptions, and interactive visualizations. A variety of assessment techniques were used including ethnographic studies, surveys, interviews, and a three-semester quasi-experiment.},
journal = {J. Comput. Sci. Coll.},
month = oct,
pages = {262},
numpages = {1}
}

@inproceedings{10.1145/3556787.3556860,
author = {Greifenstein, Luisa and Gra\ss{}l, Isabella and Heuer, Ute and Fraser, Gordon},
title = {Common Problems and Effects of Feedback on Fun When Programming Ozobots in Primary School},
year = {2022},
isbn = {9781450398534},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3556787.3556860},
doi = {10.1145/3556787.3556860},
abstract = {Computational thinking is increasingly introduced at primary school level, usually with some form of programming activity. In particular, educational robots provide an opportunity for engaging students with programming through hands-on experiences. However, primary school teachers might not be adequately prepared for teaching computer science related topics, and giving feedback to students can often be challenging: Besides the content of the feedback (e.g., what problems have to be handled), the way the feedback is given is also important, as it can lead to negative emotional effects. To support teachers with the way of giving feedback on common problems when teaching programming with robotics, we conducted a study consisting of seven workshops with three third and four fourth grade primary school classes. Within seven different activities, the 116 primary school children first programmed the Ozobot Evo robot in the pen-and-paper mode and then on a digital device. Throughout these activities we collected data on the problems the students encountered, the feedback given, and the fun they experienced. Our analysis reveals eight categories of problems, which we summarise in this paper together with corresponding possible feedback. We observed that problems that are urgent or can harm the students’ self-efficacy have a negative impact on how enjoyable an activity is perceived. While direct instruction significantly decreased the experienced fun, hints had a positive effect. Generally, we found programming the Ozobot Evo to be encouraging for both girls and boys. To support teachers, we discuss ideas for giving encouraging feedback on common problems of Ozobot Evo programming activities and how our findings transfer to other robots.},
booktitle = {Proceedings of the 17th Workshop in Primary and Secondary Computing Education},
articleno = {5},
numpages = {10},
keywords = {Block-based programming, Feedback, Fun, Interest, Motivation, Ozobot Evo, Physical Programming, Primary Education, Robotics},
location = {Morschach, Switzerland},
series = {WiPSCE '22}
}

@article{10.5555/3417699.3417702,
author = {Russell, Ingrid and Rosiene, Carolyn Pe and Gold, Aaron},
title = {Incorporating Arduino labs into a CS0 course},
year = {2020},
issue_date = {April 2020},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {35},
number = {10},
issn = {1937-4771},
abstract = {As part of our University's efforts to integrate high impact practices into the undergraduate curriculum, the Computing Sciences Department developed a model for revitalizing an introductory computer science course for non-majors. The overarching goal of our efforts is to enhance the learning experiences in the course by applying and relating fundamental computational thinking concepts of algorithmic reasoning, data representation, and computational efficiency to real-world problems in the context of an embedded system, the Arduino. The Arduino platform provides a rich opportunity to engage students by showing broad applications of computing in domains that are part of their daily lives, thus introducing computing in a way that may improve student retention rates and encourage broader participation in computer science and engineering. Using this Arduino module in the course, we address two of the five main course objectives set forth for the course. Assessment results show that the approach has been effective. We present our experiences using the curricular material, as well as assessment results.},
journal = {J. Comput. Sci. Coll.},
month = apr,
pages = {21–26},
numpages = {6}
}

@inproceedings{10.1145/3017680.3017765,
author = {Butler, Zack and Bezakova, Ivona and Fluet, Kimberly},
title = {Pencil Puzzles for Introductory Computer Science: an Experience- and Gender-Neutral Context},
year = {2017},
isbn = {9781450346986},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3017680.3017765},
doi = {10.1145/3017680.3017765},
abstract = {The teaching of introductory computer science can benefit from the use of real-world context to ground the abstract programming concepts. We present the domain of pencil puzzles as a context for a variety of introductory CS topics. Pencil puzzles are puzzles typically found in newspapers and magazines, intended to be solved by the reader through the means of deduction, using only a pencil. A well-known example of a pencil puzzle is Sudoku, which has been widely used as a typical backtracking assignment. However, there are dozens of other well-tried and liked pencil puzzles available that naturally induce computational thinking and can be used as context for many CS topics such as arrays, loops, recursion, GUIs, inheritance and graph traversal. Our contributions in this paper are two-fold. First, we present a few pencil puzzles and map them to introductory CS concepts that the puzzles can target in an assignment, and point the reader to other puzzle repositories which provide the potential to lead to an almost limitless set of introductory CS assignments. Second, we have formally evaluated the effectiveness of such assignments used at our institution over the past three years. Students reported that they have learned the material, believe they can tackle similar problems, and have improved their coding skills. The assignments also led to a significantly higher proportion of unsolicited statements of enjoyment, as well as metacognition, when compared to a traditional assignment for the same topic. Lastly, for all but one assignment, the student's gender or prior programming experience was independent of their grade, their perceptions of and reflection on the assignment.},
booktitle = {Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education},
pages = {93–98},
numpages = {6},
keywords = {computational thinking, introductory cs concepts, learning in context, pencil puzzles},
location = {Seattle, Washington, USA},
series = {SIGCSE '17}
}

