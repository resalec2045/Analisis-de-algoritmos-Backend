@inproceedings{10.1145/3576882.3617928,
author = {Ikeda, Bryce and Hoelscher, Janine and Alterovitz, Ron and Szafir, Daniel},
title = {Guiding the Development of Undergraduate Educational Robotics},
year = {2023},
isbn = {9798400700484},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3576882.3617928},
doi = {10.1145/3576882.3617928},
abstract = {Educational robotics, in which students program a physical robot to interact with the real world, can provide tangible active learning opportunities that are often linked to increases in student computational thinking, creativity, and motivation. To date, ER has focused on the use of robots to augment learning of adjacent fields (e.g., mathematics, programming, digital media) for K--12 students. As a result, we lack ER guidelines for: (1) supporting college robotics students learning the discipline of robotics itself and (2) college robotics students, who may possess distinct abilities and needs compared to K--12 students. To address this gap, we present a semester-long exploration of a college-levelIntroduction to Robotics course. Through student feedback, we identified three themes: (1) Positive learning opportunities, (2) Dealing with uncertainty, and (3) Successful results with simple solutions. and provide guidelines for improving ER in the context of college students learning to program and debug robots for the first time. We detail these themes and provide guidelines for improving ER in the context of college students learning to program and debug robots for the first time.},
booktitle = {Proceedings of the ACM Conference on Global Computing Education Vol 1},
pages = {71–77},
numpages = {7},
keywords = {educational robotics (ER), undergraduate introduction to robotics},
location = {Hyderabad, India},
series = {CompEd 2023}
}

@inproceedings{10.1145/3626253.3631663,
author = {White, Shana V. and Scott, Allison and Yadav, Aman and Levitt, Diane},
title = {Equitable Professional Learning for K12 Computer Science Teachers},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3631663},
doi = {10.1145/3626253.3631663},
abstract = {To address racial and gender inequality in K12 STEM and computer science education, there needs to be mutli-pronged approach. In addition to the needed work for curricula that is culturally responsive and sustaining, inclusive of all student group, and positively welcomes the identities of historically marginalized people groups, K12 computer science teachers need to be equipped with the training and tools to implement the curricula, pedagogy, and instruction to mitigate the racial and gender gaps in K12 computer science education.  To address racial and gender inequality in K12 STEM and computer science education, there needs to be a multi-pronged approach. In addition to the needed work for curricula that is culturally responsive and sustaining, inclusive of all student groups, and positively welcome the identities of historically marginalized people groups, K12 computer science teachers need to be equipped with the training and tools to implement the curriculum, pedagogy, and instruction to mitigate the racial and gender gaps in K12 computer science education. Professional learning is an oft-used medium by curriculum providers as a means for teachers to adequately use boxed computer science curricula on computer science topics and content only. The panel proposes and will share how to implement culturally responsivesustaining pedagogy within K12 teacher professional learning, the importance of the integration of culturally relevant computational thinking and computer science strategies for K12 teachers, improved understanding of instructional practices that benefit all students in the CS classroom, and equity centered instructional coaching can all greatly improve chances of decreasing racial and gender equity gaps at the K12 level for historically marginalized student groups. Much of the presentation will share current tools and programming available to K12 teachers as well as propose scalable and replicable models for use in in-service teacher education broadly, and in-service computer science and STEM teacher professional learning across the nation.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1543–1545},
numpages = {3},
keywords = {culturally-responsive computing, equity, k12 computing education, k12 prefessional development, k12 professional learning, k12 pedagogy and instructional strategies},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3689050.3706008,
author = {Matthews, Sarah and Nicholas, Maria and Paatsch, Louise and Kervin, Lisa and Wyeth, Peta},
title = {Embeddables: Designing Physical-Digital Manipulatives for Young Children},
year = {2025},
isbn = {9798400711978},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3689050.3706008},
doi = {10.1145/3689050.3706008},
abstract = {Introducing digital literacy to young children develops foundational skills in problem-solving and supports their cognitive development, including critical thinking. However, physical manipulatives for digital literacy are not always designed for early-year environments or specifically for young children. Physical manipulatives can offer developmentally appropriate tools to introduce foundational digital literacy through dynamic system knowledge before children become developmentally ready for more formalised coding activities. This paper presents an initial study in a preschool environment with children (ages 3 – 5 years) using novel physical manipulatives, Embeddables (Fig. 1), in child-led free and guided play activities in a preschool. From our initial analysis of the types of activities the children engaged in, we identify how, firstly, children used the proximal relations to undertake experimental understanding of the devices, which secondly led to using the proximal relationships in their social play, further supported by the scale and feedback of the toys.},
booktitle = {Proceedings of the Nineteenth International Conference on Tangible, Embedded, and Embodied Interaction},
articleno = {69},
numpages = {7},
keywords = {Computational Thinking, Early Years, Interaction Design, Tangible},
location = {
},
series = {TEI '25}
}

@inproceedings{10.1145/3545945.3569763,
author = {Charitsis, Charis and Piech, Chris and Mitchell, John C.},
title = {Detecting the Reasons for Program Decomposition in CS1 and Evaluating Their Impact},
year = {2023},
isbn = {9781450394314},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545945.3569763},
doi = {10.1145/3545945.3569763},
abstract = {Decomposition is considered one of the four cornerstones of computational thinking, which is essential to software development [36]. It requires the ability to assess a problem at a high level, develop a strategy to combat it, and then design a solution. Our study focuses on the metacognitive aspect of decomposition. We try to understand the learner's thought process and, specifically, what makes the novice programmer decide to break down a function.Researchers have studied decomposition in introductory programming courses through guided experiments, case studies, and surveys[23,37]. In this work, we follow a different, more scalable approach. We develop an automated system to analyze 45,000 code snapshots from 168 students for a challenging CS1 programming assignment, detect the pivotal moments when they decide to decompose their programs, and identify what drives their decisions from the code. We then classify the students and study the relationship between the different categories, the code complexity, and the time to derive the final solution. We evaluate the impact of decomposition on the student's performance in the assignment and the course exams. Finally, we discuss the implications of our results for computing education.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
pages = {1014–1020},
numpages = {7},
keywords = {complexity, computing education, cs1, function decomposition, metacognition, program decomposition, student performance},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3502434.3502439,
author = {Xie, Songhua and Hu, Changkui and Wu, Wei and Fan, Lili and Xiong, Yao and Tao, Jun},
title = {Blended Practical Teaching of Object Oriented Programming Based on PBL and Task Driven},
year = {2022},
isbn = {9781450385749},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3502434.3502439},
doi = {10.1145/3502434.3502439},
abstract = {According to the characteristics of equal emphasis on both theoretical knowledge and practical technology, this paper discusses the reform of experiment teaching mode in object-oriented programming course. Based on the support of the China University MOOC and PTA platform for program design experiments, a blended teaching mode combined with PBL (Problem-Based Learning), flipped classroom, task driven and online evaluation OJ (Online Judgement) is designed to explore the application of the new practice teaching mode in the course. The course is aiming to develop students' computational thinking skills, which has been proved by practice that the reform has achieved good teaching results. Correspondingly, students' ability of autonomous learning, cooperation, problem solving and creativity have been simultaneously improved.},
booktitle = {Proceedings of the 2021 5th International Conference on Education and E-Learning},
pages = {125–128},
numpages = {4},
keywords = {Task driven, PBL, Flipped classroom, Blended teaching},
location = {Virtual Event, Japan},
series = {ICEEL '21}
}

@inproceedings{10.1145/3502717.3532150,
author = {Spieler, Bernadette and Schifferle, Tobias M. and Dahinden, Manuela},
title = {The "Making at School" Project: Planning Interdisciplinary Activities},
year = {2022},
isbn = {9781450392006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3502717.3532150},
doi = {10.1145/3502717.3532150},
abstract = {"Making" as a "do-it-yourself" and tinker mentality provides motivating and interdisciplinary ways to experiment and fosters transversal competences such as computational thinking skills. The joint innovation project "Making at School" (https://explore-making.ch; 10/2021 - 9/2023) of the Zurich University of Teacher Education (PHZH), the University of Zurich, and the CreativeLab Zurich is developing various interdisciplinary teacher training courses on Maker-Education for K12-teachers. In addition to a first basic module in spring 2022, advanced modules will be offered in autumn 2022, e.g., Digital Fabrication I (lasercutter, 3D printing) or BioTinkering. Preliminary cardboard and digital versions of a Making planning framework to support teachers in Making are already in development, evaluated, and will be improved using a design research approach together with teachers and (inter-)national experts.},
booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 2},
pages = {624},
numpages = {1},
keywords = {interdisciplinary teacher training, maker-education, making, steam},
location = {Dublin, Ireland},
series = {ITiCSE '22}
}

@inproceedings{10.1145/3568739.3568796,
author = {Zhou, Yujun and Zhan, Zehui and Liu, Lu and Wan, Jiayi and Liu, Simai and Zou, Xuanxuan},
title = {International Prospects and Trends of Artificial Intelligence Education: A Content Analysis of Top-level AI Curriculum across Countries},
year = {2023},
isbn = {9781450398091},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3568739.3568796},
doi = {10.1145/3568739.3568796},
abstract = {This study intends to investigate the present situation of AI curriculum offered for grades K-12. We screened 11 representative countries and areas from six continents and assessed the content of their top K-12 AI courses in terms of teaching content and teaching implementation in order to comprehend the current state of K-12 AI courses in diverse nations. Provide some ideas and suggestions for the development of AI courses for students in grades K-12. (1) Countries may choose AI applications, AI influences in various aspects, AI ethics, machine learning, data, classification, reasoning, Identify, and other content to establish independent AI teaching content standards; or choose programming as the core teaching content/starting point; or integrate programming, data, AI, and other content related to improving students' computational thinking into computer/science/technology courses. (2) Project-based learning is still the primary way of instruction, along with a range of other approaches. There are four categories of available instructional resources, and there is an abundance of them. Most countries emphasize the evaluation of students' abilities and the results achieved in the learning process.},
booktitle = {Proceedings of the 6th International Conference on Digital Technology in Education},
pages = {337–343},
numpages = {7},
location = {Hangzhou, China},
series = {ICDTE '22}
}

@inproceedings{10.1145/3105726.3105728,
author = {Hickmott, Daniel},
title = {Developing Teachers as Computational Participants},
year = {2017},
isbn = {9781450349680},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3105726.3105728},
doi = {10.1145/3105726.3105728},
abstract = {This document briefly explains the context, motivations, background and research design of a PhD project titled "Developing Teachers as Computational Participants". This PhD project will explore how Australian Primary School teachers learn and teach the core CS skills (computational thinking, computer programming and systems thinking), their experiences implementing lessons that impart these skills and the challenges they encounter when implementing these lessons.},
booktitle = {Proceedings of the 2017 ACM Conference on International Computing Education Research},
pages = {265–266},
numpages = {2},
keywords = {teacher professional development, primary school, constructionism, computational participation},
location = {Tacoma, Washington, USA},
series = {ICER '17}
}

@inproceedings{10.1145/3545947.3576306,
author = {Menier, Amanda and Moore, Paula and Boisvert, Deborah and Peterfreund, Alan and Sexton, Stacey and Xavier, Jeffrey and Johnston, Brianna},
title = {Intro to CS for Educators: A Pre-Curricula PD Workshop},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3576306},
doi = {10.1145/3545947.3576306},
abstract = {Many K-12 educators who are new to computer science (CS) may have a lack of confidence or sense of intimidation when starting their CS teaching journey. To mitigate this, Massachusetts DESE contracted CSforMA to create a three-day "Introduction to Computer Science for Educators" workshop (ICSW) focused on CS fundamentals. The ICSW covered grade-level CS terminology and concepts including computational thinking, physical computing, and programming. Evaluation of the ICSW showed 98\% of respondents reported increased knowledge of CS. In a survey administered later that summer, 100\% of respondents who took the ICSW reported that it helped them better understand curriculum materials. This replicable, scalable, and successful ICSW model could benefit other State DoEs and CS professional development coordinators. This work also shows the benefits of using an external evaluator.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1362},
numpages = {1},
keywords = {professional development, k-12 education, education},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3287324.3287396,
author = {Rich, Kathryn M. and Strickland, Carla and Binkowski, T. Andrew and Franklin, Diana},
title = {A K-8 Debugging Learning Trajectory Derived from Research Literature},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3287396},
doi = {10.1145/3287324.3287396},
abstract = {Curriculum development is dependent on the following question: What are the learning goals for a specific topic, and what are reasonable ways to organize and order those goals? Learning trajectories (LTs) for computational thinking (CT) topics will help to guide emerging curriculum development efforts for computer science in elementary school. This study describes the development of an LT for Debugging. We conducted a rigorous analysis of scholarly research on K-8 computer science education to extract what concepts in debugging students should and are capable of learning. The concepts were organized into the LT presented within. In this paper, we describe the three dimensions of debugging that emerged during the creation of the trajectory: (1) strategies for finding and fixing errors, (2) types of errors, and (3) the role of errors in problem solving. In doing so, we go beyond identification of specific debugging strategies to further articulate knowledge that would help students understand when to use those techniques and why they are successful. Finally, we illustrate how the Debugging LT has guided our efforts to develop an integrated mathematics and CT curriculum for grades 3-5.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {745–751},
numpages = {7},
keywords = {learning trajectory, k-8, debugging, computational thinking},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3287324.3287529,
author = {Soh, Leen-Kiat and Peteranetz, Markeya S.},
title = {Adopting, Integrating, and Evaluating Computational Creativity Exercises to Improve Student Learning},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3287529},
doi = {10.1145/3287324.3287529},
abstract = {In this workshop, participants will learn how to integrate in their classes computational thinking and creative thinking activities that have been shown via rigorous research to significantly improve student learning and performance. Specifically, participants will be familiarized with the suite of Computational Creativity Exercises (non-programming-based, group-based, active learning exercises), take part in completing two of the exercises, learn how to integrate and adapt them into their courses, and be exposed to the educational research studies behind the development, design, and administration of these exercises. Participants will also learn how to conduct evidence-based, educational research studies. Workshop sessions will include presentations, panel-based Q&amp;A, breakout group discussions, and hands-on activities. More information can be found at cse.unl.edu/agents/ic2think/CCEWorkshop},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {1237},
numpages = {1},
keywords = {creativity, computational thinking, computational creativity},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3290607.3298820,
author = {Kristensson, Per Ola and Banovic, Nikola and Oulasvirta, Antti and Williamson, John},
title = {Computational Interaction with Bayesian Methods},
year = {2019},
isbn = {9781450359719},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3290607.3298820},
doi = {10.1145/3290607.3298820},
abstract = {This course introduces computational methods in human--computer interaction. Computational interaction methods use computational thinking---abstraction, automation, and analysis---to explain and enhance interaction. This course introduces the theory of practice of computational interaction by teaching Bayesian methods for interaction across four wide areas of interest when designing computationally-driven user interfaces: decoding, adaptation, learning and optimization. The lectures center on hands-on Python programming interleaved with theory and practical examples grounded in problems of wide interest in human-computer interaction.},
booktitle = {Extended Abstracts of the 2019 CHI Conference on Human Factors in Computing Systems},
pages = {1–6},
numpages = {6},
keywords = {optimization, machine learning, inference, computational interaction},
location = {Glasgow, Scotland Uk},
series = {CHI EA '19}
}

@inproceedings{10.1145/3641555.3705275,
author = {Manesh, Daniel and Jelson, Andrew and Altland, Emily and Freeman, Jason and Lee, Sang Won},
title = {Understanding the Effects of Integrating Music Programming and Web Development in a Summer Camp for High School Students},
year = {2025},
isbn = {9798400705328},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641555.3705275},
doi = {10.1145/3641555.3705275},
abstract = {This poster presents the development and implementation of a 10-day remix-based summer camp curriculum designed to introduce high school students, particularly a multinational cohort of young women, to programming through creative coding. The curriculum integrates music composition using EarSketch and web development with HTML and CSS. The camp aims to inspire participants to gain self-efficacy in programming and motivate them to explore STEM/computing careers. Preliminary results from surveys and interviews indicate increased confidence in programming skills. This ongoing research explores the impact of remixing as a gateway for transitioning into more general-purpose computing domains such as web development.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1535–1536},
numpages = {2},
keywords = {computational thinking, computer science education},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@inproceedings{10.1145/3322385.3322399,
author = {Hampton, Lelia and Cummings, Robert and Gosha, Kinnis},
title = {Improving Computer Science Instruction and Computer Use for African American Secondary School Students: A Focus Group Exploration of Computer Science Identity of African American Teachers},
year = {2019},
isbn = {9781450360883},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3322385.3322399},
doi = {10.1145/3322385.3322399},
abstract = {As the demand for computing careers increases, it is important to implement strategies to broaden the participation in computer science for African Americans. Computer science courses and academic pathways are not always offered in secondary schools. Many teachers are not trained in computer science, yet are pushed to incorporate more computing, computational thinking, and computer usage. A qualitative focus group study was implemented to assess the computer science identities of African American teachers and of their respective urban secondary schools serving African American students. Three major codes were identified: district administration of computer and computing implementation, teacher attitudes towards computer science instruction, and teachers' recommendations to improve computer science and computational thinking instruction and outreach for African American secondary school students. Findings can be used to improve computer science and technology rollout programs from county and district administrations, teacher instruction with digital tools, and computer science outreach for African American secondary school students.},
booktitle = {Proceedings of the 2019 on Computers and People Research Conference},
pages = {78–84},
numpages = {7},
keywords = {underrepresented minorities, sense of belonging, self-efficacy, k-12 education, computing identity, computing education},
location = {Nashville, TN, USA},
series = {SIGMIS-CPR '19}
}

@inproceedings{10.1145/3408877.3432570,
author = {Garcia, Daniel D. and Rogers, Michael P. and Stefik, Andreas},
title = {Fun and Engaging Pre-CS1 Programming Languages},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432570},
doi = {10.1145/3408877.3432570},
abstract = {The CSforALL movement to bring computational thinking to K-12 has been a boon for practitioners and language developers. This panel features three educators passionate about a particular lan- guage that has been successful with K-12 audiences. Each will demonstrate their language, describe what makes it unique, and share some of the fun and engaging projects students have created.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {760–761},
numpages = {2},
keywords = {pre-cs1, outreach, languages, k-12 cs education, cs0},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3170427.3170654,
author = {Williamson, John and Oulasvirta, Antti and Hilliges, Otmar and Kristensson, Per Ola},
title = {Computational Interaction: Theory and Practice},
year = {2018},
isbn = {9781450356213},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3170427.3170654},
doi = {10.1145/3170427.3170654},
abstract = {This course introduces computational methods in human--computer interaction. Computational interaction methods use computational thinking -- abstraction, automation, and analysis -- to explain and enhance interaction. This course introduces optimization and probabilistic inference as principled methods. Lectures center on hands-on Python programming, interleaving theory and practical examples.},
booktitle = {Extended Abstracts of the 2018 CHI Conference on Human Factors in Computing Systems},
pages = {1–4},
numpages = {4},
keywords = {computational interaction, inference, machine learning, optimization},
location = {Montreal QC, Canada},
series = {CHI EA '18}
}

@inproceedings{10.1145/2787622.2787751,
author = {Van Wart, Sarah Jane},
title = {Computer Science Meets Social Studies: Embedding CS in the Study of Locally Grounded Civic Issues},
year = {2015},
isbn = {9781450336307},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2787622.2787751},
doi = {10.1145/2787622.2787751},
abstract = {Data science is an emerging 21st century literacy that promises to support learning in a wide variety of disciplines, from science, to social science, to the humanities. It also provides an engaging context in which to learn computational thinking skills in existing classroom contexts. For my dissertation research, I will explore whether and how data science can support inquiry-based learning in social studies. I conjecture that data science could provide students with an opportunity to use computational thinking to better understand their social world, while also allowing students to draw from and make sense of their own experiences. I plan to explore this idea by enhancing and evaluating a software tool, Local Ground, and creating a curriculum that helps young people identify and describe salient characteristics of their lived realities, moving from unstructured to structured data representations (e.g., photos to tags to databases). This process may generate a rich, motivating data source to explore subsequent ideas in computational thinking and social science.},
booktitle = {Proceedings of the Eleventh Annual International Conference on International Computing Education Research},
pages = {281–282},
numpages = {2},
keywords = {interdisciplinary approaches, data science education, computational thinking, broadening participation},
location = {Omaha, Nebraska, USA},
series = {ICER '15}
}

@inproceedings{10.1145/3173225.3173275,
author = {Maquil, Val\'{e}rie and Moll, Christian and Schwartz, Lou and Hermen, Johannes},
title = {Kniwwelino: A Lightweight and WiFi Enabled Prototyping Platform for Children},
year = {2018},
isbn = {9781450355681},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3173225.3173275},
doi = {10.1145/3173225.3173275},
abstract = {Nowadays, computational thinking skills are considered as fundamental for our future daily life and many initiatives and tools are created to foster these skills. In this paper, we present the Kniwwelino, a new platform for prototyping physical computing projects based on WiFi. The novelty of our solution lies in the use of a WiFi chip on a small, extendable board, programmable via a block based visual programming language, making the platform compact, low-cost, WiFi enabled, and accessible to children. This paper presents the design rationale and implementation of the platform as well as two simple, example projects making use of the new WiFi-based functionalities.},
booktitle = {Proceedings of the Twelfth International Conference on Tangible, Embedded, and Embodied Interaction},
pages = {94–100},
numpages = {7},
keywords = {prototyping, physical computing, digital skills, computational thinking, children.},
location = {Stockholm, Sweden},
series = {TEI '18}
}

@inproceedings{10.1145/3605468.3609778,
author = {Bahr, Tobias},
title = {Developing a Computer Science Content Knowledge Test for 10th Grade Students},
year = {2023},
isbn = {9798400708510},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3605468.3609778},
doi = {10.1145/3605468.3609778},
abstract = {Computer Science competencies are becoming increasingly important in our current digitised society. To foster students in Computer Science, different countries have introduced subjects with new educational plans based on Computer Science frameworks, such as the K-12 CS Framework and the Informatics Reference Framework for Schools. Those include, in one way or another, four content areas: data and coding (including data structures and their applications), algorithms (involving variables, loops, and software projects), computers and networks (emphasizing the role of computers in a network and data transmission) and information society and data security (covering topics like asymmetric encryption and personal data protection). Various tests have been developed in the field of Computer Science Education for different age groups, primarily at university level for introductory Computer Science courses, and some for upper secondary school level and below, particularly for Computational Thinking. Given the research context, the objective of this study is to develop a set of items that measures the content knowledge in the four aforementioned areas. Specifically, the study focuses on the educational plan of the Computer Science subject called IMP, which is taught from the 8th to the 10th grade in secondary schools in Baden-W\"{u}rttemberg, Germany. In total, 155 items were evaluated by experts, resulting in a test consisting of 68 items. This poster abstract presents the ongoing progress of the test development.},
booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
articleno = {31},
numpages = {2},
keywords = {Competency, Computer Science, Content Knowledge, Expert Rating},
location = {Cambridge, United Kingdom},
series = {WiPSCE '23}
}

@article{10.5555/3381631.3381649,
author = {Jenkins, Janet T. and Terwilliger, Mark G.},
title = {Examining strategies to improve student success in CS1},
year = {2019},
issue_date = {October 2019},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {35},
number = {4},
issn = {1937-4771},
abstract = {With the pervasiveness of the necessity of computational thinking across fields, more universities are requiring courses that build students' ability to think computationally. Computer Science 1 (CS1) is one such course where computational thinking is required This paper summarizes the work of two CS faculty who co-taught separate sections of CS1 for five semesters. Course modifications were made to augment CS1 with support inside and outside of the classroom for students to be successful. The use of in class tutors and requiring design documents were two of the primary modifications made to the course. A variety of data was collected in areas such as student planning, program design, frustration, and resources used to determine what relationships impact student success. One of the main benefits observed was an increase in the student pass rate.},
journal = {J. Comput. Sci. Coll.},
month = oct,
pages = {124–132},
numpages = {9}
}

