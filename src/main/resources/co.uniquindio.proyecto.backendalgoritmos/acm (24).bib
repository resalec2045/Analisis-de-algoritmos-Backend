@inproceedings{10.1145/2851581.2851589,
author = {Lin, Veronica and Shaer, Orit},
title = {Beyond the Lab: Using Technology Toys to Engage South African Youth in Computational Thinking},
year = {2016},
isbn = {9781450340823},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2851581.2851589},
doi = {10.1145/2851581.2851589},
abstract = {We present a two-part case study to explore how technology toys can promote computational thinking for young children. First, we conducted a formal study using littleBits, a commercially available technology toy, to explore its potential as a learning tool for computational thinking in three different educational settings. Our findings revealed differences in learning indicators across settings. We applied these insights during a teaching project in Cape Town, South Africa, where we partnered with an educational NGO, ORT SA CAPE, to offer enriching learning opportunities for both privileged and impoverished children. We describe our methods, observations, and lessons learned using littleBits to teach computational thinking to children in early elementary school, and discuss how our lab study informed practical work in the developing world.},
booktitle = {Proceedings of the 2016 CHI Conference Extended Abstracts on Human Factors in Computing Systems},
pages = {655–661},
numpages = {7},
keywords = {youth, tangible user interfaces., education, computational thinking, child-computer interaction},
location = {San Jose, California, USA},
series = {CHI EA '16}
}

@inproceedings{10.1145/3141880.3143781,
author = {Spangsberg, Thomas Hvid},
title = {Teaching programming to non-STEM novices: a didactical study of computational thinking and non-STEM computing education},
year = {2017},
isbn = {9781450353014},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3141880.3143781},
doi = {10.1145/3141880.3143781},
abstract = {The PhD project presented here is concerned with teaching introductory programming to non-STEM students. Particularly students in the field of Information Studies and HCI. The research is carried out through three Teaching and Learning Explorations (TLE - I-III) which are set in an inductive action research approach. Computational thinking plays a significant role in computing education but it is still unclear how it should be interpreted to best serve its purpose. Constructionism and Computational Making seems to be promising frameworks to do this. In regards to specific teaching activities, the translation-grammar method of a structural approach to natural language teaching shows promising results when actualized in a concrete exercise named code-labelling.},
booktitle = {Proceedings of the 17th Koli Calling International Conference on Computing Education Research},
pages = {201–202},
numpages = {2},
keywords = {non-STEM computing education, constructionism, computational thinking, computational making},
location = {Koli, Finland},
series = {Koli Calling '17}
}

@inproceedings{10.1145/2676723.2691876,
author = {Boyer, Kristy and Buffum, Philip Sheridan and Culbertson, Kirby and Frankosky, Megan and Lester, James and Martinez-Arocho, Allison and Min, Wookhee and Mott, Bradford and Rodriguez, Fernando and Wiebe, Eric},
title = {ENGAGE: A Game-based Learning Environment for Middle School Computational Thinking},
year = {2015},
isbn = {9781450329668},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2676723.2691876},
doi = {10.1145/2676723.2691876},
abstract = {We present ENGAGE, a game-based learning environment for teaching computational thinking to middle school students. This project has dual aims: introducing computational thinking practices to students at a young age, and improving computational thinking attitudes among underrepresented students. In pursuit of these two goals, the ENGAGE team has mapped the learning objectives of the AP CS Principles course to the middle school level, and then built an immersive game experience upon that foundation. Students choose computer scientist avatars to represent themselves, and then play in pairs as they investigate a data-related mystery in an underwater research station, solving computational thinking challenges along the way. ENGAGE is currently being implemented as part of a quarterly elective in four middle schools in North Carolina. During the elective, students spend a total of ten classroom sessions playing the game, supplemented by "unplugged" activities that reinforce concepts learned in the game environment. We plan to expand to more middle schools in the 2015-2016 school year. In this demo, members of the SIGCSE community will be able to experience the ENGAGE game for themselves and learn more about its development and future directions. We will also discuss our success in recruiting and teaching the ENGAGE curriculum to middle school teachers who had no prior computer science experience, and the success of those middle school teachers in implementing ENGAGE within their classrooms.},
booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
pages = {440},
numpages = {1},
keywords = {middle school, game-based learning, computational thinking},
location = {Kansas City, Missouri, USA},
series = {SIGCSE '15}
}

@inproceedings{10.1145/2593968.2610489,
author = {Apostolellis, Panagiotis and Stewart, Michael and Frisina, Chris and Kafura, Dennis},
title = {RaBit EscAPE: a board game for computational thinking},
year = {2014},
isbn = {9781450322720},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2593968.2610489},
doi = {10.1145/2593968.2610489},
abstract = {Computational thinking (CT) is increasingly seen as a core literacy skill for the modern world on par with the longestablished skills of reading, writing, and arithmetic. To promote the learning of CT at a young age we capitalized on children's interest in play. We designed RabBit EscApe, a board game that challenges children, ages 610, to orient tangible, magnetized manipulatives to complete or create paths. We also ran an informal study to investigate the effectiveness of the game in fostering children's problemsolving capacity during collaborative game play. We used the results to inform our instructional interaction design that we think will better support the learning activities and help children hone the involved CT skills. Overall, we believe in the power of such games to challenge children to grow their understanding of CT in a focused and engaging activity.},
booktitle = {Proceedings of the 2014 Conference on Interaction Design and Children},
pages = {349–352},
numpages = {4},
keywords = {tangible games, education, computational thinking},
location = {Aarhus, Denmark},
series = {IDC '14}
}

@inproceedings{10.1145/2670757.2670778,
author = {Sabitzer, Barbara and Antonitsch, Peter K. and Pasterk, Stefan},
title = {Informatics concepts for primary education: preparing children for computational thinking},
year = {2014},
isbn = {9781450332507},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2670757.2670778},
doi = {10.1145/2670757.2670778},
abstract = {In Austria Informatics is not taught in primary schools, but the curriculum includes some issues in several subjects that are related to computational thinking. Teachers are not aware that they already teach and use informatics concepts in their daily lessons. Informatics didactics experts and teacher trainers have to inform them and reveal connections between their primary school contents and different informatics concepts. Furthermore, one general educational aim of the curriculum is the acquisition of elementary cultural techniques including a child-friendly approach to modern information and communication technologies (ICT). The aim of this paper is to show how this is possible in practice and lists informatics concepts already "hidden" in the primary school curriculum. It reports on different initiatives that aim at introducing informatics in primary schools as well as a sample project on computational thinking funded by the regional teacher support program Teaching Informatics creatively. The qualitative results of this and other primary school projects show that it is possible and worth integrating informatics already at this early stage.},
booktitle = {Proceedings of the 9th Workshop in Primary and Secondary Computing Education},
pages = {108–111},
numpages = {4},
keywords = {computational thinking, informatics, primary education},
location = {Berlin, Germany},
series = {WiPSCE '14}
}

@article{10.1145/3243138,
author = {Richard, Gabriela T. and Giri, Sagun},
title = {Digital and Physical Fabrication as Multimodal Learning: Understanding Youth Computational Thinking When Making Integrated Systems Through Bidirectionally Responsive Design},
year = {2019},
issue_date = {September 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {19},
number = {3},
url = {https://doi.org/10.1145/3243138},
doi = {10.1145/3243138},
abstract = {This article proposes and explores the kinds of computational thinking, creative practices, design activities, and inclusive learning opportunities provided to diverse high school youth when designing integrated systems through simultaneously physically and digitally responsive wearable games and systems. Previous work in this area, conducted by Richard, coined the term “bidirectionally responsive design” (BRD) to describe the design of dual-feedback systems using multiple digital and physical interfaces. BRD also emphasizes using simplified fabrication tools, media and coding platforms, and microcontrollers common in youth content creation communities and makerspaces. This study provides a framework to analyze computational concepts, practices, and perspectives that leverage an integrated systems and multimodal learning approach, such as BRD, adding to, building on, and integrating previous analytic approaches to looking at Scratch coding, media design, physical computing and e-textiles. Using a detailed case study of one team during one of the early workshop iterations, we conduct a multimodal analysis of bidirectionally responsive making activities and discuss the ways that they present novel understanding of integrating diverse interests and encouraging collaborative and distributed computational thinking. We further examine how BRD operationalizes and extends multimodal learning theory by adding tangible and integrative dimensions as additional modalities learners can leverage to facilitate meaning making, metacognition, and agency. We also discuss how designing integrated systems, as facilitated through BRD, provides an opportunity to engage in authentic practices around the design of complex systems.},
journal = {ACM Trans. Comput. Educ.},
month = jan,
articleno = {17},
numpages = {35},
keywords = {Education/learning, collaboration, content analysis, creativity support, design research methods, embodied interaction, fashion/clothing, games/play, interview, participatory design, schools/educational setting, sensors, tangible, teens, wearable computers}
}

@inproceedings{10.1145/3159450.3162285,
author = {Dickes, Amanda and Metcalf, Shari and Kamarainen, Amy and Reilly, Joe and Brennan, Karen and Grotzer, Tina and Dede, Chris},
title = {EcoMOD: Integrating Computational Thinking into Ecosystems Science Education via Modeling in Immersive Virtual Worlds (Abstract Only)},
year = {2018},
isbn = {9781450351034},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3159450.3162285},
doi = {10.1145/3159450.3162285},
abstract = {In recent years, the field of education has challenged researchers and practitioners to incorporate computing as an essential focus of K12 STEM education. Widely recognized as a "basic skill" necessary for economic opportunity and social mobility, integrating computing within K12 STEM supports learners of all ages in applying computational thinking within established and accessible contexts while co-developing practices essential to mathematical and scientific expertise. The EcoMOD project is an example of such an integration. In EcoMOD, immersive virtual environments are blended with interactive computational modeling tools designed specifically for younger children in an attempt to support ecological knowledge, complex causal reasoning and computational creation in third grade students. Our curricular design is grounded in the Science-as-Practice perspective and literature on young children's computing. In this proposal, we present outcomes from early pilot work with 35 third graders across the greater Boston area. This work has implications for designers of educational technologies by illuminating aspects of children's understanding that researchers and designers can leverage to support deeper and earlier understandings of ecological dynamics and computational practices.},
booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
pages = {1076},
numpages = {1},
keywords = {science education, programming, modeling, computational thinking, computational literacy},
location = {Baltimore, Maryland, USA},
series = {SIGCSE '18}
}

@inproceedings{10.1145/2978192.2978220,
author = {Fronza, Ilenia and El Ioini, Nabil and Corral, Luis},
title = {Teaching Software Design Engineering Across the K-12 Curriculum: Using Visual Thinking and Computational Thinking},
year = {2016},
isbn = {9781450344524},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2978192.2978220},
doi = {10.1145/2978192.2978220},
abstract = {Over the years a number of methodologies have been proposed in Software Engineering to deal with systems design. High among them is visual thinking (VT). VT is a well known strategy to foster more ideas and generate consensus within a group. In this paper, we propose the application of VT in the design phase of computational thinking in the K-12 curriculum. The goal is to facilitate the interchange of ideas in a team of students, and assist on orchestrating an all-hands, brainstorming working strategy that ensures that all the participants speak and are listened, and that all the viewpoints are taken into account. We describe the results of an experience of visual thinking applied in the design phase across the K-12 curriculum.},
booktitle = {Proceedings of the 17th Annual Conference on Information Technology Education},
pages = {97–101},
numpages = {5},
keywords = {visual thinking, software design, computational thinking},
location = {Boston, Massachusetts, USA},
series = {SIGITE '16}
}

@inproceedings{10.1145/2445196.2445430,
author = {Weintrop, David and Wilensky, Uri},
title = {Robobuilder: a computational thinking game (abstract only)},
year = {2013},
isbn = {9781450318686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2445196.2445430},
doi = {10.1145/2445196.2445430},
abstract = {RoboBuilder is a blocks-based, program-to-play game designed to introduce students to core aspects of computational thinking in a fun and engaging environment. The game employs a constructionist design to challenge players to invent and implement strategies to control an on-screen robot using a specially designed visual programming language. During the game, players' robots compete against a series of progressively more challenging opponents in one-on-one battles. Through playing the game, players construct working programs, providing learners with the experience of reifying their own ideas using a computational medium, a practice central to our notion of computational thinking. This poster presents the design rationale for RoboBuilder and discusses key aspects of the game that contribute to giving learners a positive, hands-on introduction to core computational thinking skills including computationally expressing ideas, algorithmic thinking, and debugging.},
booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
pages = {736},
numpages = {1},
keywords = {computational thinking, design, game-based learning, novice programming environments},
location = {Denver, Colorado, USA},
series = {SIGCSE '13}
}

@inproceedings{10.1145/2771839.2771894,
author = {Portelance, Dylan J. and Bers, Marina Umaschi},
title = {Code and tell: assessing young children's learning of computational thinking using peer video interviews with ScratchJr},
year = {2015},
isbn = {9781450335904},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2771839.2771894},
doi = {10.1145/2771839.2771894},
abstract = {In this paper, we present a novel technique for assessing the learning of computational thinking in the early childhood classroom. Students in three second grade classrooms learned foundational computational thinking concepts using ScratchJr and applied what they learned to creating animated collages, stories, and games. They then conducted artifact-based video interviews with each other in pairs using their iPad cameras. As discussed in the results, this technique can show a broad range of what young children learn about computational thinking in classroom interventions using ScratchJr than more traditional assessment techniques. It simultaneously provides a developmentally appropriate educational activity (i.e. peer interviews) for early childhood classrooms.},
booktitle = {Proceedings of the 14th International Conference on Interaction Design and Children},
pages = {271–274},
numpages = {4},
keywords = {programming, iPad, education, early childhood, computational thinking, coding, assessments, artifact-based interviews, ScratchJr},
location = {Boston, Massachusetts},
series = {IDC '15}
}

@inproceedings{10.1145/2445196.2445323,
author = {Bort, Heather and Brylow, Dennis},
title = {CS4Impact: measuring computational thinking concepts present in CS4HS participant lesson plans},
year = {2013},
isbn = {9781450318686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2445196.2445323},
doi = {10.1145/2445196.2445323},
abstract = {In this paper, we aim to directly measure a CS4HS workshop's participating teachers' ability to synthesize CSTA computational thinking core concepts into actionable lesson plans for courses in their current teaching repertoire. Participants were expected to present a lesson plan on the final day of the workshop, highlighting the integration of their classroom curriculum with computing and computational thinking skills. We present our evaluation rubric, used to rate the teachers effective use of the computational thinking core concepts in their lesson plans, and describe how our method of evaluation may more accurately gauge the overall impact that CS4HS workshops have on their participants.},
booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
pages = {427–432},
numpages = {6},
keywords = {CS4HS, K-12 outreach, computational thinking, lesson planning},
location = {Denver, Colorado, USA},
series = {SIGCSE '13}
}

@inproceedings{10.1145/2808006.2808033,
author = {Fronza, Ilenia and El Ioini, Nabil and Corral, Luis},
title = {Students Want to Create Apps: Leveraging Computational Thinking to Teach Mobile Software Development},
year = {2015},
isbn = {9781450338356},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2808006.2808033},
doi = {10.1145/2808006.2808033},
abstract = {Computational Thinking (CT) is recognised as one of the fundamental skills of all graduates. Nevertheless, some issues can emerge when trying to introduce CT into schools; for example, teachers might not be willing to add topics to their intensive syllabi. Therefore, out-of-school venues such as summer schools can be considered a great opportunity for exposure to CT. Moreover, summer schools allow students to meet first hand researchers and help them pursue their interest far from the regular school climate. High school students in general are very curious for the creation of mobile apps; however, most of them get discouraged because they perceive this activity as a very difficult task. Here we describe the MobileDev summer school, a one-week training and hands-on experience in current topics of software development for mobile devices. The curiosity of the students for developing mobile apps is used to introduce and train CT via programming mobile applications through exercises (also with "pen and paper'") of increasing difficulty. The school was repeated twice at our university and was targeted to a reduced class of students concluding the third and the fourth year of high school. Participants were in total 19 and coming from different types of schools. This paper describes the structure of MobileDev and discusses the results to provide directions for further research.},
booktitle = {Proceedings of the 16th Annual Conference on Information Technology Education},
pages = {21–26},
numpages = {6},
keywords = {computational thinking, mobile development, summer school},
location = {Chicago, Illinois, USA},
series = {SIGITE '15}
}

@inbook{10.1145/3507951.3519284,
author = {Bofferding, Laura and Kocabas, Sezai and Aqazade, Mahtob and Haiduc, Ana-Maria and Chen, Lizhen},
title = {The effect of play and worked examples on first and third graders' creating and debugging of programming algorithms},
year = {2022},
isbn = {9781450396158},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3507951.3519284},
abstract = {Although learning to program can improve students' computational thinking skills---specifically, creating and debugging algorithms---we need to determine instructional strategies that foster such skills in young students. We investigated the role of analyzing worked examples that focused on creating and debugging programming algorithms with 28 first and 27 third graders. Students played a tangible, block-based programming game, Coding Awbie, across six, 20-minute sessions and were randomly assigned to also analyze programming worked examples during sessions one to three (immediate group) or sessions four to six (delayed group). To measure changes in creating and debugging algorithms before and after their worked example intervention, students completed a pretest, midtest (after session three), and a posttest. By midtest, students who were in the immediate group wrote significantly more accurate programs, although both groups had similar accuracy when given the chance to debug their programs. By posttest, both groups made significant gains in accuracy of their programs. Overall, analyzing worked examples proved to be a powerful support for students' programming skills in creating and debugging algorithms. However, students' common bugs indicate that additional worked examples should focus on double-counting errors.},
booktitle = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
pages = {19–29},
numpages = {11}
}

@inproceedings{10.1145/2481449.2481487,
author = {Gallenbacher, Jens},
title = {Abenteuer informatik: hands-on exhibits for learning about computational thinking},
year = {2012},
isbn = {9781450317870},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2481449.2481487},
doi = {10.1145/2481449.2481487},
abstract = {Computational thinking is one of the pillars of the ACM-CSTA standards for teaching computer science from kindergarten to college. Our approaches Abenteuer Informatik -- Informatik begreifen (adventures in informatics -- hands on computer science) and Abenteuer Technik are well established in the german-speaking community as means to connect computer science with other subjects and as means of clarifying some prejudices against computer science, especially problematic for establishing computer science as subject in schools.},
booktitle = {Proceedings of the 7th Workshop in Primary and Secondary Computing Education},
pages = {149–150},
numpages = {2},
keywords = {abenteuer informatik, computational thinking, computer science education, computer science unplugged, curriculum},
location = {Hamburg, Germany},
series = {WiPSCE '12}
}

@inproceedings{10.1145/2380552.2380606,
author = {L'Heureux, Jaime and Boisvert, Deborah and Cohen, Robert and Sanghera, Kamaljeet},
title = {IT problem solving: an implementation of computational thinking in information technology},
year = {2012},
isbn = {9781450314640},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2380552.2380606},
doi = {10.1145/2380552.2380606},
abstract = {This paper describes the implementation of information technology problem-solving constructs and scenarios designed to cultivate computational thinking in information technology education at the college level via a course entitled "IT Problem Solving." A project of Broadening Advanced Technological Connections (BATEC), these scenarios were developed by a team of researchers under the auspices of an NSF CPATH grant focusing on adapting Computational Thinking as defined by Jeanette Wing into a more applied framework in partnership with and validated by a broad set of Information Technology (IT) professionals. The methodologies used within this highly successful course at Bunker Hill Community College may be of interest to other departments with existing IT programs that would like to take advantage of the strengths of the problem solving approach.},
booktitle = {Proceedings of the 13th Annual Conference on Information Technology Education},
pages = {183–188},
numpages = {6},
keywords = {computational thinking, cpath, curriculum development, education, information technology (it), problem solving},
location = {Calgary, Alberta, Canada},
series = {SIGITE '12}
}

@inproceedings{10.1145/1734263.1734276,
author = {Freudenthal, Eric Andrew and Roy, Mary K. and Ogrey, Alexandria Nicole and Magoc, Tanja and Siegel, Alan},
title = {MPCT: media propelled computational thinking},
year = {2010},
isbn = {9781450300063},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1734263.1734276},
doi = {10.1145/1734263.1734276},
abstract = {Media-Propelled Computational Thinking (MPCT - pronounced impact) is a course designed to introduce programming in the context of engaging problems in media computation, math, and physics. Programming concepts are introduced as incremental steps needed to solve pragmatic problems students already understand. The problems, graphical API, and hands-on program features are intended to expose fundamental concepts in mathematics and quantitative science.MPCT is offered in an entering students program for freshmen who plan to specialize in a variety of STEM (science, technology, engineering and math) and non-STEM subjects. The curriculum is intended to strengthen student intuition and interest in mathematical modeling and programming by engaging students in the direct manipulation of simple mathematical systems that model and display familiar physical phenomena. MPCT uses programs as concrete and manipulatable examples of fundamental concepts to engage a diverse range of students including women and underrepresented minorities.Variants of MPCT are being developed for high schools, and as a means to introduce computational science to upper division undergraduates studying non-computational STEM disciplines. This paper provides an overview of MPCT and representative problem studies including models of ballistics and resonant systems. The evaluation plan is described and very preliminary results are presented.},
booktitle = {Proceedings of the 41st ACM Technical Symposium on Computer Science Education},
pages = {37–41},
numpages = {5},
keywords = {first year programs, cs-zero, computational thinking},
location = {Milwaukee, Wisconsin, USA},
series = {SIGCSE '10}
}

@inproceedings{10.1145/2538862.2538950,
author = {Basawapatna, Ashok Ram and Repenning, Alexander and Koh, Kyu Han and Savignano, Mark},
title = {The consume - create spectrum: balancing convenience and computational thinking in stem learning},
year = {2014},
isbn = {9781450326056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2538862.2538950},
doi = {10.1145/2538862.2538950},
abstract = {Future school science standards, such as the Next Generation Science Standards (NGSS), emphasize the integration of simulation and modeling activities in the classroom environment. The extremes of these activities have two vastly different implementations. On one hand, a teacher can have students experiment on a pre-made simulation associated with the material. On the other hand, students can use, for example, an end-user programming tool to create the simulation from scratch. This allows students to not only experiment on, but also, to model the real world phenomenon being studied- a key component of computational thinking. However, the greater amount of time necessary for student authoring of simulations can make such an approach infeasible in the classroom environment. This paper presents a spectrum of strategies for integrating simulations into class- rooms emphasizing our research at the Scalable Game Design Lab, University of Colorado Boulder as well as research from other entities. Starting at consuming simulations and adding more user interaction and authoring elements begins to provide a gentle slope from consumption towards simulation creation. Results indicate that many of these strategies are quite effective.},
booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
pages = {659–664},
numpages = {6},
keywords = {simulation and modeling, next generation science standards, middle school computer education, high school computer education, computational thinking},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '14}
}

@inproceedings{10.1145/2462476.2462511,
author = {Settle, Amber and Goldberg, Debra S. and Barr, Valerie},
title = {Beyond computer science: computational thinking across disciplines},
year = {2013},
isbn = {9781450320788},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2462476.2462511},
doi = {10.1145/2462476.2462511},
booktitle = {Proceedings of the 18th ACM Conference on Innovation and Technology in Computer Science Education},
pages = {311–312},
numpages = {2},
keywords = {visual arts, undergraduate, science, language arts, k-12, humanities, english, economics, computational thinking, biology},
location = {Canterbury, England, UK},
series = {ITiCSE '13}
}

@article{10.1145/3381887,
author = {Kafai, Yasmin and Proctor, Chris and Lui, Debora},
title = {From theory bias to theory dialogue: embracing cognitive, situated, and critical framings of computational thinking in K-12 CS education},
year = {2020},
issue_date = {March 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {11},
number = {1},
issn = {2153-2184},
url = {https://doi.org/10.1145/3381887},
doi = {10.1145/3381887},
journal = {ACM Inroads},
month = feb,
pages = {44–53},
numpages = {10}
}

@inproceedings{10.1145/2445196.2445346,
author = {Basawapatna, Ashok Ram and Repenning, Alexander and Lewis, Clayton H.},
title = {The simulation creation toolkit: an initial exploration into making programming accessible while preserving computational thinking},
year = {2013},
isbn = {9781450318686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2445196.2445346},
doi = {10.1145/2445196.2445346},
abstract = {Computational thinking aims to outline fundamental skills from computer science that everyone should learn. These skills include problem formulation, logically organizing data, automating solutions through algorithmic thinking, and representing data through abstraction. One aim of the NSF is to integrate these and other computational thinking concepts into the classroom. This paper introduces a tool called the Simulation Creation Toolkit wherein users apply high-level agent interactions called Computational Thinking Patterns (CTPs) to create simulations. Programming at the Computational Thinking Pattern level allows users to directly create agent interactions in a simulation by employing generic icons acting out a scientific phenomenon they are trying to represent. The Simulation Creation Toolkit aims to preserve the computational thinking benefits of simulation creation while enabling higher-level implementation of agent behaviors. Initial study data collected from sixth grade students with no prior programming experience indicates that students can work the mechanics necessary to create simulations in the classroom environment using the Simulation Creation Toolkit.},
booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
pages = {501–506},
numpages = {6},
keywords = {middle school computer education, computational thinking patterns, computational thinking, university programming education, student observation, scalable game design},
location = {Denver, Colorado, USA},
series = {SIGCSE '13}
}

