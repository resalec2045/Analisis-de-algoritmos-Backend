@inproceedings{10.1145/3587103.3594181,
author = {Monahan, Robert and Vandenberg, Jessica and Gupta, Anisha and Smith, Andy and Elsayed, Rasha and Fox, Kimkinyona and Hubbard Cheuoua, Aleata and Ringstaff, Cathy and Minogue, James and Oliver, Kevin and Mott, Bradford},
title = {Multimodal CS Education Using a Scaffolded CSCL Environment},
year = {2023},
isbn = {9798400701399},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3587103.3594181},
doi = {10.1145/3587103.3594181},
abstract = {There is a growing need for 21st-century workers to be digitally literate and to possess computational thinking and collaborative problem-solving skills. Computer-supported collaborative learning (CSCL) focused on computational thinking can guide students toward the co-development of these skills. In this work, we present our approach to integrating virtual and physical learning modalities into InfuseCS, a CSCL environment. InfuseCS uses problem-based learning scenarios to situate upper elementary school students (ages 8 to 11) in a CSCL setting to foster their computational thinking and science knowledge construction as they collaborate to create digital narratives.},
booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
pages = {645},
numpages = {1},
keywords = {CSCL, collaboration, digital narrative, elementary, makerspace},
location = {Turku, Finland},
series = {ITiCSE 2023}
}

@inproceedings{10.1145/3605468.3609772,
author = {Vielsack, Annika and Klein, Miriam and Niesenhaus, Thomas and Ulbrich, Mattias},
title = {The ’Choc-Machine’ - an Introduction to Algorithmic Thinking using Finite State Machines},
year = {2023},
isbn = {9798400708510},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3605468.3609772},
doi = {10.1145/3605468.3609772},
abstract = {Computational thinking, in particular its central component algorithmic thinking, is one of the more important skills in the 21st century. Therefore it should be taught at school. This work proposes a low-threshold course to introduce algorithmic thinking to students in lower secondary education using the concept of finite state machines. The course is action-based and transitions from unplugged to plugged and even into the real world while sticking to the same topic and using the same visualisations throughout the entire course. It revolves around a chocolate vending machine, the Choc-Machine, which teaches the basics of finite state machines and eventually enables the students to design and formulate their own algorithms that then drive a physical hardware machine.},
booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
articleno = {25},
numpages = {2},
keywords = {algorithmic thinking, automata, chocolate, education, finite state machines, modeling and design, teaching concept},
location = {Cambridge, United Kingdom},
series = {WiPSCE '23}
}

@inproceedings{10.1145/3545947.3576357,
author = {Gardner-McCune, Christina and Jimenez, Yerika and Magda, David and Kulkarni, Abhishek and Chu, Sharon},
title = {Towards an Adaptable Curriculum-Driven Block-based Learning Environment},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3576357},
doi = {10.1145/3545947.3576357},
abstract = {In this poster, we present the design of a browser-based Arduino programming tool, CASMM, to support computational thinking and making in science classrooms. This tool allows for unique integration of research tools, lesson planning, and scaffolding for learning computational thinking concepts and block-based programming. This poster will describe four key features of a block-based LMS: (1) reduced-scoped programming toolbox, (2) block locking, (3) lesson plans and starter code templates; and (4) low-tech code replay for researchers. Through discussion of this tool, we aim to catalyze conversations about integrating new scaffolding techniques into block-based programming environments to better support classroom use and research.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1414},
numpages = {1},
keywords = {arduino, block-based programming environment, computational thinking, computing education, k-12, learning mangement system (lms), programming, scaffolding, science integration},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3627217.3631584,
author = {Yadav, Aman},
title = {Computing Education for Primary Schooling: Developing Teacher Knowledge},
year = {2023},
isbn = {9798400708404},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3627217.3631584},
doi = {10.1145/3627217.3631584},
abstract = {The push for computer science education to primary schooling requires training teachers and developing their knowledge to teach computing. However, computing goals within primary schooling need to move away from teaching coding to curricular and pedagogical goals teachers have. In this talk, Dr. Aman Yadav will discuss how to support teachers to see the relevance of computing to their core curriculum and how teachers take advantage of computation to support their core instruction. Using classroom examples from his work with elementary teachers, he will share evidence-based ways to develop teachers’ competencies and skills to integrate computational thinking in their classrooms. Dr. Yadav will also discuss how teachers use computational thinking as a way to explicitly teach metacognitive strategies to their students and improve their core learning outcomes.},
booktitle = {Proceedings of the 16th Annual ACM India Compute Conference},
pages = {3},
numpages = {1},
location = {Hyderabad, India},
series = {COMPUTE '23}
}

@inproceedings{10.1145/3649405.3659515,
author = {Nolan, Keith and O'Farrell, Amanda and Quille, Keith and Nolan, Karen and Faherty, Roisin and Jaiswal, Rajesh and Hensman, Svetlana and Collins, Michael and Harte, Miriam and Becker, Brett A.},
title = {Enabling Digital Technology in Primary Schools},
year = {2024},
isbn = {9798400706035},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3649405.3659515},
doi = {10.1145/3649405.3659515},
abstract = {In 2024, the National Council for Curriculum and Assessment (NCCA) in Ireland released a draft curriculum which intends to introduce Digital Technology (DT) into the Primary School Curriculum. While this is a positive step in terms of Computer Science education pipeline, the teachers who will be charged with delivering this are, for the most part, completely out-of-field and anecdotally are lacking in confidence in delivering DT in the classroom. We are proposing a project to enhance teachers competencies around DT concepts (skills, processes and dispositions). The project plans to develop targeted activities for teachers to deliver DT. These activities will incorporate real-world applications of DT, computational thinking, problem-solving, and creative skills all delivered through play-based pedagogies. To ensure that no teacher or school will be negatively impacted due to technological requirements, AWS In Communities are going to send every Primary School in Ireland a Digital Technology kit comprising of a plugged device and an unplugged computational thinking game.},
booktitle = {Proceedings of the 2024 on Innovation and Technology in Computer Science Education V. 2},
pages = {823},
numpages = {1},
keywords = {curriculum change, digital technology, teacher professional development},
location = {Milan, Italy},
series = {ITiCSE 2024}
}

@inproceedings{10.1145/3661904.3661925,
author = {Zhao, Chenguang and Fang, Qizhi and Sun, Yanpeng},
title = {Research and Design of Blended Learning of EDA Technology Course Based on CDIO},
year = {2024},
isbn = {9798400717895},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3661904.3661925},
doi = {10.1145/3661904.3661925},
abstract = {In view of the strong practical characteristics of EDA(Electronic Design Automation) technology and the insufficient integration between courses, the concept and method of CDIO(Conceive, Design, Implement, Operate) are introduced to deepen the reform of blended learning in EDA course . Taking students as the main body to seek solutions to the problem, improve students' ability to solve complex engineering problems. Designing the teaching means of the "EDA Technology" course, and explore its implementation process, teaching measures and evaluation methods. The case study of CDIO teaching shows that the blended teaching method trained the computational thinking, which integrates the dual experience of traditional classroom and online resource, has reasonable assessment standard, and better teaching objectives than the original teaching method, achieving good teaching results, and continuously improving the blended learning effect of EDA technology course. Besides, in the teaching of undergraduate professional courses, teachers can use information technology to reconstruct the precision teaching process, obtain real-time data of the teaching process through the classification and decomposition of teaching objectives, the classification and construction of teaching resources, and the continuous evaluation of learning objects, and implement precise teaching intervention according to the data processing results, so as to maximize the learning effect of students.},
booktitle = {Proceedings of the 2024 10th International Conference on Education and Training Technologies},
pages = {16–21},
numpages = {6},
keywords = {Blended Learning, CDIO, Computational Thinking, EDA technology},
location = {Macau, China},
series = {ICETT '24}
}

@inproceedings{10.1145/3287324.3287346,
author = {Peteranetz, Markeya S. and Soh, Leen-Kiat and Ingraham, Elizabeth},
title = {Building Computational Creativity in an Online Course for Non-Majors},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3287346},
doi = {10.1145/3287324.3287346},
abstract = {In recent years, a growing number of universities have begun to offer specialized courses as a way to make computer science (CS) more accessible to students with little or no prior CS or programming experience, especially non-CS majors. One of the ways courses have been modified for these students is by supplementing the core problem solving and coding aspects of the curriculum with explicit instruction on computational thinking principles. These "computational thinking" courses are promising in that they ground computational thinking in discipline-specific contexts and emphasize application of computational principles. However, there is little empirical research evaluating the extent to which students learn computational thinking from these courses. The purpose of this study was to evaluate the impact of an online Computational Creativity course on students' computational thinking skills, creative competencies, and self-efficacy. Students in the Computational Creativity course were predominantly non-CS majors, and they completed four Computational Creativity Exercises (CCEs) that have previously been shown to improve learning and achievement. Results indicate that the Computational Creativity course was effective in increasing students' computational thinking knowledge and self-efficacy for applying computational thinking in their fields, but it did not have an impact on students' creative competencies. Additionally, students' reactions to the course and the CCEs were mostly positive. Thus, this study provides initial evidence that non-CS majors can learn computational thinking through the online Computational Creativity course.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {442–448},
numpages = {7},
keywords = {collaborative learning, computational creativity, computational thinking, creativity, non-majors},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3544548.3580981,
author = {Dietz, Griffin and Tamer, Nadin and Ly, Carina and Le, Jimmy K and Landay, James A.},
title = {Visual StoryCoder: A Multimodal Programming Environment for Children’s Creation of Stories},
year = {2023},
isbn = {9781450394215},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3544548.3580981},
doi = {10.1145/3544548.3580981},
abstract = {Computational thinking (CT) education reaches only a fraction of young children, in part because CT learning tools often require expensive hardware or fluent literacy. Block-based programming environments address these challenges through symbolic graphical interfaces, but users often need instructor support to advance. Alternatively, voice-based tools provide direct instruction on CT concepts but can present memory and navigation challenges to users. In this work, we present Visual StoryCoder, a multimodal tablet application that combines the strengths of each of these approaches to overcome their respective weaknesses. Visual StoryCoder introduces children ages 5–8 to CT through creative storytelling, offers direct instruction via a pedagogical voice agent, and eases use through a block-like graphical interface. In a between-subjects evaluation comparing Visual StoryCoder to a leading block-based programming app for this age group (N = 24), we show that Visual StoryCoder is more understandable to independent learners, leads to higher-quality code after app familiarization, and encourages personally meaningful projects.},
booktitle = {Proceedings of the 2023 CHI Conference on Human Factors in Computing Systems},
articleno = {96},
numpages = {16},
keywords = {children, computational thinking, multimodal interface, storytelling},
location = {Hamburg, Germany},
series = {CHI '23}
}

@inproceedings{10.1145/3628516.3659855,
author = {Liu, Yu-Yu},
title = {Computational Empowerment in K-12 Education: Formative Assessment Strategies for Educational and Design Practices through Dialogic Learning Approaches},
year = {2024},
isbn = {9798400704420},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3628516.3659855},
doi = {10.1145/3628516.3659855},
abstract = {In response to the evolving digitized society, it is crucial to equip children with essential skills for critically and reflectively navigating this environment. Child-Computer Interaction (CCI) researchers have established rich research to advance educational practices and technology development for computational thinking education and introduced a new concept of computational empowerment. However, the absence of effective formative assessment in the research and practices within computational education hinders the facilitation of continuous learning and the enhancement of computational empowerment. Considering this, this doctoral study will explore the core research question of how to develop formative assessment strategies for computational empowerment through the lens of dialogic learning. The research aims to conceptualize a research-based formative assessment model for educators, formative assessment design principles for computational education toolkits and provide instances through illustrative case studies. The study includes literature reviews, learning intervention case studies and participatory design workshops, stimulating discussions and innovative formative assessment strategies for computational empowerment within the CCI community and among practitioners. This doctoral study addresses the need for effective formative assessment in computational education to understand learning, foster learning and enhance computational empowerment in wider implementation. The practical research outcomes will benefit toolkit designers and educators, while the theoretical contributions aim to fill gaps of formative assessment in CCI research and pedagogies, advancing the broader landscape of computational education.},
booktitle = {Proceedings of the 23rd Annual ACM Interaction Design and Children Conference},
pages = {976–979},
numpages = {4},
keywords = {Computational empowerment, K-12 education, computing education, formative assessment},
location = {Delft, Netherlands},
series = {IDC '24}
}

@article{10.5555/1791129.1791164,
author = {Morreale, Patricia and Joiner, David and Chang, George},
title = {Connecting undergraduate programs to high school students: teacher workshops on computational thinking and computer science},
year = {2010},
issue_date = {June 2010},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {25},
number = {6},
issn = {1937-4771},
abstract = {The high school preparation of future computer science undergraduates can be varied and depends strongly on the experiences and subject knowledge of their high school teachers. In an effort to connect undergraduate computer science programs to high schools for future student success in college, a public comprehensive university is hosting high school teacher workshops to help teachers enhance their teaching effectiveness. This has established a pathway from the university to the high school. Pre- and post- workshop surveys show that these teacher workshops have changed the perceptions high school teachers had regarding careers in computer science.},
journal = {J. Comput. Sci. Coll.},
month = jun,
pages = {191–197},
numpages = {7}
}

@inproceedings{10.1145/3626253.3635569,
author = {Burke, Quinn and Coenraad, Merijke and Rangel, Alessandra and Dunbar, Kyle and Mills, Kelly},
title = {Integrating \&amp; Implementing K-12 Computing Pathways across Six School Districts-Challenges \&amp; Opportunities},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635569},
doi = {10.1145/3626253.3635569},
abstract = {This SIGCSE poster presents a landscape study of six school districts across six different states in terms of their individual teachers' and administrators' capacity to integrate and implement computational thinking (CT) into their own schools and classrooms. This landscape evaluation represents the baseline start of a wider, four-year national study around district capacity to collaboratively develop consistent and comprehensive K-12 computing pathways for their students and schools. The early landscape work we present here not only represents a starting point for comparing district educators' comprehension of CT (and computer science [CS]), but also acts as an early indicator as to what extent K-12 computing is a school and district-based priority, and to what degree teachers feel they have the capacity to meaningfully implement it. This poster relies on two data sources in a mixed-methods design: Districtwide surveys of teachers and administrators on their familiarity and prioritization of CT, coupled with subsequent hour-long focus group discussions with educators to expand upon their respective district landscape survey responses. Results point to all districts perceiving the broad applicability of CT as a skill set and its integrative potential in a range of subjects. Yet in terms of classroom implementation, teachers find such CT integration decidedly less clear, recognizing it to be a priority but also reporting as less confident about creating their own curricular materials, where CT situates with their district's ongoing initiatives, and where they can find curricular resources and tools specific to their own areas of curricular integration.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1582–1583},
numpages = {2},
keywords = {computational thinking, computing pathways, k-12 education},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3408877.3432444,
author = {Repenning, Alexander and Basawapatna, Ashok},
title = {Smacking Screws with Hammers: Experiencing Affordances of Block-based Programming through the Hourglass Challenge},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432444},
doi = {10.1145/3408877.3432444},
abstract = {Block-based programming languages effectively address syntactic difficulties allowing users to more easily create code. Syntactic code support is no doubt a crucial step in enabling the next generation of programmers. However, in what other ways do these tools support the computational thinking (CT) process? For example, how is CT supported in both the semantic and pragmatic levels? Most users do not just want to write code?they want to create interesting artifacts such as video games, simulations, stories and robots. No doubt that users must code to build these artifacts, but just as important, though often overlooked, is that users must also have an understanding of tool affordances to effectively build these artifacts. The position presented in this paper is that the comprehension of affordances is essential to each stage of the computational thinking process. To that end, we introduce the Hourglass Challenge as a way for students to experience affordances through a programming challenge based on mis-aligned tools and problems. The results from a study, with 54 preservice elementary school teachers, indicate that the affordances of tools can have profound consequences on computational thinking. For instance, the affordances various tools provide can be the difference between creating a simulation versus an animation. But just as hammers are not intrinsically better tools than screwdrivers, the contribution of this position paper is not to compare tools, but to promote efforts that enable learners to develop a better understanding of computational thinking tool affordances as essential mediators between problems and tools.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {267–273},
numpages = {7},
keywords = {affordances, animations, block-based programming, computational thinking, computational thinking tools, simulations},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3478432.3499076,
author = {Coenraad, Merijke and Burke, Quinn and Ruiz, Pati and Mills, Kelly and Roschelle, Jeremy},
title = {Developing Inclusive Computing with the CT Pathways Toolkit},
year = {2022},
isbn = {9781450390712},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3478432.3499076},
doi = {10.1145/3478432.3499076},
abstract = {To promote inclusion of students with marginalized identities, districts need to develop comprehensive inclusive computing pathways across grade levels. Working in a Research Practice Partnership (RPP), we have co-designed a district-facing toolkit to support the creation of these pathways. In this poster, we present both the CT Pathways Toolkit and results from four districts piloting it. We examine the experiences of the pilot districts and analyze trends in the toolkit's use. This work expands knowledge about building inclusive computing pathways and computational thinking (CT) integration within K-12 schools.},
booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
pages = {1089},
numpages = {1},
keywords = {computational thinking, computing pathways, k-12 education},
location = {Providence, RI, USA},
series = {SIGCSE 2022}
}

@inproceedings{10.1145/3699538.3699588,
author = {Pereira Cipriano, Bruno and Silva, Miguel and Correia, Rodrigo and Alves, Pedro},
title = {Towards the Integration of Large Language Models and Automatic Assessment Tools: Enhancing Student Support in Programming Assignments},
year = {2024},
isbn = {9798400710384},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3699538.3699588},
doi = {10.1145/3699538.3699588},
abstract = {The rise of Large Language Models (LLMs) has sparked discussion in Computer Science Education (CSE) due to their ability to generate code from text prompts. Students may rely on these tools, neglecting core skills like computational thinking and program design. Thus, it’s crucial to responsibly integrate them into computer science courses.To address this, we integrated an open-source Automatic Assessment Tool with GPT, enabling students to receive LLM assistance on their programming assignments. This tool can be adopted and improved by educators, promoting more responsible integration of LLMs in CSE.},
booktitle = {Proceedings of the 24th Koli Calling International Conference on Computing Education Research},
articleno = {52},
numpages = {2},
keywords = {large language models, automatic assessment tools, feedback},
location = {
},
series = {Koli Calling '24}
}

@inproceedings{10.1145/3529372.3530976,
author = {Barboza, Luiz},
title = {Thesis plan: the effect of data science teaching for non-STEM students},
year = {2022},
isbn = {9781450393454},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3529372.3530976},
doi = {10.1145/3529372.3530976},
abstract = {In recent years, the interest in Data Science has increased in both industry and academia. Historically, access to this discipline has been redirected to STEM professionals. However, the ubiquity of cloud computing and the simplicity of modern programming languages such as Python and R have enabled non-STEM students and professionals to leverage it especially to analyze data. Similarly, with what has been conveyed with computational thinking in terms of enabling non-STEM students with com technological competencies, this article aims to present a proposal for improving the teaching of data science specifically to non-stem students.},
booktitle = {Proceedings of the 22nd ACM/IEEE Joint Conference on Digital Libraries},
articleno = {48},
numpages = {2},
keywords = {computational thinking, data science, non-STEM},
location = {Cologne, Germany},
series = {JCDL '22}
}

@inproceedings{10.1145/3459990.3460706,
author = {Grizioti, Marianthi and Kynigos, Chronis},
title = {Children as players, modders, and creators of simulation games: A design for making sense of complex real-world problems: Children as players, modders and creators of simulation games},
year = {2021},
isbn = {9781450384520},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3459990.3460706},
doi = {10.1145/3459990.3460706},
abstract = {Could computational thinking be a strong tool for children to understand complex 21st-century issues? Our knowledge is limited since most designs focus on sequential programming and on the cognitive aspects of computational thinking. This paper discusses a design that integrates ill-structured socio-scientific issues with programming and other computational concepts, in a playful and meaningful context. The design, called ChoiCo (Choices with Consequences), builds on the idea of "integrated affordances" that enables layered computational access, allowing children to be players and designers of choice-driven simulation games. We elaborate on a design-based research that studied children's activity, who progressively played, modified and co-created games that simulated real-world issues. We describe four strategies developed by the children to make sense of the simulated problems through a systems thinking approach. We also discuss how they formulated these strategies by utilizing the affordances of map design, data manipulation and coding.},
booktitle = {Proceedings of the 20th Annual ACM Interaction Design and Children Conference},
pages = {363–374},
numpages = {12},
keywords = {block-based programming, computational thinking, game-based learning, real-world problems, simulation games, systems thinking},
location = {Athens, Greece},
series = {IDC '21}
}

@inproceedings{10.1145/3626253.3635547,
author = {Bumbacher, Engin and Brender, J\'{e}r\^{o}me and Davis, Richard Lee},
title = {A Comparative Analysis of Tools \&amp; Task Types for Measuring Computational Problem-Solving},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635547},
doi = {10.1145/3626253.3635547},
abstract = {How to measure students' Computational Problem-Solving (CPS) competencies is an ongoing research topic. Prevalent approaches vary by measurement tools (e.g., interactive programming, multiple-choice tests, or programming-independent tests) and task types (e.g., debugging problems or Parson problems). However, few studies have examined the measurement tools of CPS competencies themselves: affordances and limitations of the measurement tools and how they compare, or whether different task types might elicit CPS competencies differently. Research needs to address these questions in order to better understand how to design robust, generalizable, and effective measurement tools for CPS competencies. This paper presents an exploratory study that contributes to this research direction. It is part of a larger international project to develop an open-access formative assessment platform for CPS, which includes a novel authoring tool for a wide range of task types for interactive block-based programming. We used the tool to create an interactive programming experience with multiple task types and gave it to more than 300 secondary school students from different countries. We also administered a validated multiple-choice measurement of Computational Thinking with block-based programs. We focused on task complexity as a characteristic of task type, using a classification scheme based on task design features. Comparing students' performances on tasks of different complexity and using two distinct measurement tools, we found that the multiple-choice measurement only partially predicts performance in the interactive programming task. Additionally, its predictive capacity varies significantly between task types of differing complexity.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1580–1581},
numpages = {2},
keywords = {block-based programming, computational thinking and problem-solving, interactive assessment, k-12 education, mixed-effects models},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3430665.3456361,
author = {Billingsley, William and Vitale, Jonathan},
title = {An Accelerated CS0 for Online Mature-Age Part-Time Students},
year = {2021},
isbn = {9781450382144},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3430665.3456361},
doi = {10.1145/3430665.3456361},
abstract = {In this paper, we present the design of a "CS0" Computational Thinking course at an Australian regional university, that is also offered to non-enrolled students via the Open Universities Australia network. Unlike many CS0 courses, this targets a predominantly mature age and part-time demographic, although high school leavers are also included. Our design attempts to recognise that computational thinking experiences are increasingly incorporated into school experiences, both through curricula and outreach. Consequently, a CS0 course no longer has the sole purpose of introducing students to computing. It also serves a bridging role, giving a compressed form of outreach and school experiences to adult learners who might have missed them. It also brings brings opportunities to compress the introduction of programming, so that more time can be spent in challenges that stretch students' experience, and in demonstrating its application to areas such as robotics and social AI.},
booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
pages = {526–532},
numpages = {7},
keywords = {computational thinking, cs0, online education},
location = {Virtual Event, Germany},
series = {ITiCSE '21}
}

@inproceedings{10.1145/3641555.3705267,
author = {Zabir, Zubair and Tisha, Sirazum Munira},
title = {The Role of Virtual Reality in Enhancing Computer Science Education},
year = {2025},
isbn = {9798400705328},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641555.3705267},
doi = {10.1145/3641555.3705267},
abstract = {This paper examines the application of Virtual Reality (VR) in com- puter science education through a review of 28 academic papers. The study investigates VR's effectiveness in teaching complex topics such as finite state machines, computational thinking, and algo- rithms. The authors highlight VR's advantages, including immersive learning experiences and intuitive visualization of abstract concepts, while also noting challenges such as high costs and limited acces- sibility. The analysis reveals critical research gaps, including the need to evaluate VR's cost-effectiveness, scalability, integration with AI for adaptive learning, and support for diverse learners. To address these gaps, the paper proposes research questions for future investigations. While underscoring VR's potential to revolutionize computer science education, the study emphasizes the need for further research to optimize its implementation and effectiveness.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1673–1674},
numpages = {2},
keywords = {artificial intelligence, computer science education, immersive learning, virtual reality},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@inproceedings{10.1145/3629296.3629358,
author = {Schwinghammer, Michaela and Milisic, Daniela and Schmidthaler, Eva and Sabitzer, Barbara},
title = {"The \"COOL Clubs\": Supporting gifted primary school students in STEAM"},
year = {2024},
isbn = {9798400709111},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3629296.3629358},
doi = {10.1145/3629296.3629358},
abstract = {The rapid rise of computational technologies has heightened the demand for proficient computer scientists. A strong foundation in Computer Science (CS) and Digital Education (German: Digitale Grundbildung DGB) has become crucial, even for young learners. Despite the growing importance of CS and DGB in Austria, a gap remains in comprehensive understanding among students and educators. This study aims to bridge this gap by making CS accessible to primary school students and teachers. The solution, COOL Lab, is an active learning center offering diverse STEAM (Science, Technology, Engineering, Arts, and Mathematics) programs. These programs facilitate cross-disciplinary education, supported by innovative CS technologies, nurturing computational thinking (CT) as a problem-solving tool, and enhancing digital skills. Focusing on COOL Lab Clubs, tailored for gifted primary school students, specifically the 'Girls* Only IT-Club' and 'Mini Club', this research first introduces these clubs and then presents insights from four club activities, along with methodologies enhancing CS and CT comprehension. Early results from a questionnaire involving 20 participants aged 9-10 were analyzed. At the outset, almost half of the participants, particularly girls, lacked exposure to CT and CS yet showed eagerness to learn. Initial findings of the club evaluations indicate a strong interest in STEM (Science, Technology, Engineering, and Mathematics) as well as CS and a positive response to the COOL Clubs.},
booktitle = {Proceedings of the 15th International Conference on Education Technology and Computers},
pages = {384–390},
numpages = {7},
keywords = {Computer science, STEAM, computational thinking, creativity, digital education, gifted education, primary education},
location = {Barcelona, Spain},
series = {ICETC '23}
}

