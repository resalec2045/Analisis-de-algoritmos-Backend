@inproceedings{10.1145/3287324.3287353,
author = {Salac, Jean and White, Max and Wang, Ashley and Franklin, Diana},
title = {An Analysis through an Equity Lens of the Implementation of Computer Science in K-8 Classrooms in a Large, Urban School District},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3287353},
doi = {10.1145/3287324.3287353},
abstract = {Major metropolitan school districts around the United States are implementing computer science in elementary school classrooms as part of the CS for All (CS4All) initiative. Little is known, however, about the success of such a large-scale rollout, especially in terms of equity. In this study we analyze the performance of 4th grade classrooms completing three modules of an introductory computational thinking curriculum, looking at not only overall results but also the variance in performance between high-, mid-, and low-performing schools (as identified by their school report cards). We find that all classrooms are benefiting from the computational thinking (CT) curriculum, making great strides in providing equitable access to CT education. However, statistically-significant differences in performance are present, especially between the high- and low-performing schools, showing that there is still room for improvement in developing strategies and curricula for struggling learners.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {1150–1156},
numpages = {7},
keywords = {scratch, k-8 education, diversity},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3450337.3483472,
author = {Higashi, Ross and Harpstead, Erik and Solyst, Jaemarie and Kemper, Jonaya and Odili Uchidiuno, Judith and Hammer, Jessica},
title = {The Design of Co-Robotic Games for Computer Science Education},
year = {2021},
isbn = {9781450383561},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3450337.3483472},
doi = {10.1145/3450337.3483472},
abstract = {Digital games featuring programmable agents are popular tools for teaching coding and computational thinking skills. However, today's games perpetuate an arguably obsolete relationship between programmable agents and human operators. Borrowing from the field of human-robotics interaction, we argue that collaborative robots, or cobots, are a better model for thinking about computational agents, working directly with humans rather than in place of or at arm's length from them. In this paper, we describe an initial design inquiry into the design of “cobot games”, programmable agent scenarios in which players program an in-game ally to assist them in accomplishing gameplay objectives. We detail three questions that emerged out of this exploration, our present thinking on them, and plans for deepening inquiry into cobot game design moving forward.},
booktitle = {Extended Abstracts of the 2021 Annual Symposium on Computer-Human Interaction in Play},
pages = {111–116},
numpages = {6},
keywords = {Robotics education, Games-based learning, Cobots, Co-robotic games},
location = {Virtual Event, Austria},
series = {CHI PLAY '21}
}

@inproceedings{10.1145/3372782.3407114,
author = {Shaw, Mia S.},
title = {Restorying through Computational Quilts: A Critical Approach Towards Reimagining Computer Science},
year = {2020},
isbn = {9781450370929},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3372782.3407114},
doi = {10.1145/3372782.3407114},
abstract = {While much attention has focused on promoting computational thinking in K-12 CS education, much less attention has been paid to the equally significant dimension of what it means to identify with the discipline. Previous approaches to CS identity have mostly focused on getting students to reveal their identifications in the form of drawings or survey responses, while more recent approaches have started to examine narratives in a field that historically has marginalized women and students of color. My dissertation seeks to broaden participation in computing by creating access for groups who have historically and structurally been excluded from CS. While learning computational skills and designing interactive paper quilts, high school students of color will draw upon their lived experiences to reimagine new connections and stories about CS. Using video observations and field notes, students' reflective worksheets and artifacts, and student interviews, I will explore what happens when youth of color use CS skills and digital technologies to "restory" their CS identities, the kinds of metanarratives about CS and computer scientists youth identify, and what the process of restorying looks like in practice.},
booktitle = {Proceedings of the 2020 ACM Conference on International Computing Education Research},
pages = {344–345},
numpages = {2},
keywords = {identity, equity, counter-narratives, computer science},
location = {Virtual Event, New Zealand},
series = {ICER '20}
}

@inproceedings{10.1145/3626253.3635336,
author = {Popov, Aleksandr},
title = {Simulating Election Votes},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635336},
doi = {10.1145/3626253.3635336},
abstract = {CS0 and CS1 courses are becoming an essential part of many social science programs, including sociology and political science. This particular assignment was designed as part of the 'Basics of Programming in Python' course for undergraduate political science students. The course aims not only to prepare students for the unified programming exam, but also to apply concepts of computational thinking in the context of political science problems. By linking these fields, students learn to overcome inner barriers in coding and explore the potential of computational social science methods for both academic path and career.  This project seeks such a connection between subjects of political science major as Comparative Electoral Systems and Quantitative Methods of Political Research, and concepts of computer science. Students process the generated votes, applying critical thinking to identify spoilt ballots, and then formulate rules for counting votes (First-past-the-post, Borda count, Condorcet winner criterion) in algorithmic form. Optionally, a short essay can be added in which students are asked to speculate about political leanings, the transitivity of preferences and the advantages/disadvantages of particular electoral systems based on analyses of the data in the assignment. As the result, students not only develop hard skills in programming, but most importantly conceptualize complicated topics through the prism of their specialization, fostering the ability to see the connections between these fields and understand how they can work together to address complex real-world scenarios.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1915},
numpages = {1},
keywords = {computational social science, teaching computational thinking},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3466725.3466737,
author = {Lemonica Rosa, Rodrigo},
title = {Social Necklace Project: A student-made gadget to help people during the COVID19 pandemic},
year = {2021},
isbn = {9781450389891},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3466725.3466737},
doi = {10.1145/3466725.3466737},
abstract = {This paper presents the Y9 (9th-grade level) project from Beacon School, S\~{a}o Paulo - Brazil, entitled Social Necklace. The main scope was to bring for students’ maker learning, programming literacy, and computational thinking. Through hands-on activities, all students could think, experiment, create, and learn. Fundamental premises to transform them into producers instead of simple technology consumers. During classes, the STEAM and PBL (Project Based Learning) approaches were the basis, which allowed students to choose the theme COVID-19, the driving question: Can technology contribute to helping in the control and prevention of pandemics? And coding and setting a gadget using the BBC Micro:bit, as an answer to the question. The work carried out with the students enabled many dialogues between the different fields of knowledge. Through maker education, it was possible to engage students in learning activities very distinct from traditional education.},
booktitle = {FabLearn Europe / MakeEd 2021 - An International Conference on Computing, Design and Making in Education},
articleno = {12},
numpages = {5},
keywords = {bit, Social Necklace Project, Programming Literacy},
location = {St. Gallen, Switzerland},
series = {FabLearn Europe / MakeEd 2021}
}

@inproceedings{10.1145/3328778.3366902,
author = {Liesaputra, Veronica and Ramirez-Prado, Guillermo and Barmada, Bashar and Song, Lei},
title = {Future-Proofing Kiwi Kids Through the Use of Digital Technology},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366902},
doi = {10.1145/3328778.3366902},
abstract = {The common approach for introducing middle school and high school students to computational thinking and engineering is through programming or robotics activities that were designed without much social context. Therefore, one of the challenges such outreach programs pose is further stereotyping of students who are interested in computer science, by presenting them as people who ought to be hyper-intelligent and very much focused on computers with no social skills. Realizing the above, and wanting to attract a diverse audience to study computer science, we developed a one-day workshop which showcases the interdisciplinary nature of computer science and the various ways computing can help students discover and solve societal problems. We chose multiculturalism, cyber security and air pollution as the context of our computational thinking activities. This paper describes our experiences in developing and teaching the workshops that runs three to five times a year, hosted either in our institute or at local schools. Regardless of students' previous STEM experiences and socioeconomic statuses, both students and teachers reported that the knowledge gained enabled them to either create a computer program or a robot and also led to a better understanding of how computers can be used in daily life. In other words, the workshop successfully opened the minds and perspectives of the middle school and high school students on computer science. Additionally, over time, we also observed an increased number of students and schools participating in such workshops.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {507–513},
numpages = {7},
keywords = {social good, raspberry pi, outreach, multiculturalism, middle school, k-12 education, introduction to computer science, cyber security, air pollution},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3287324.3293757,
author = {Biswas, Gautam and Hutchins, Nicole and L\'{e}deczi, \'{A}kos and Grover, Shuchi and Basu, Satabdi},
title = {Integrating Computational Modeling in K-12 STEM Classrooms},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3293757},
doi = {10.1145/3287324.3293757},
abstract = {C2STEM is a web-based learning environment founded on a novel paradigm that combines block-structured, visual programming with the concept of domain specific modeling languages (DSMLs) to promote the synergistic learning of discipline-specific and computational thinking (CT) concepts and practices. Our design-based, collaborative learning environment aims to provide students in K-12 classrooms with immersive experiences in CT through computational modeling in realistic scenarios (e.g., building models of scientific phenomena). The goal is to increase student engagement and include inclusive opportunities for developing key computational skills needed for the 21st century workforce. Research implementations that include a semester-long high school physics classroom study have demonstrated the effectiveness of our approach in supporting synergistic learning of STEM and CS/CT concepts and practices, especially when compared to a traditional classroom approach. This technology demonstration will showcase our CS+X (X = physics, marine biology, or earth science) learning environment and associated curricula. Participants can engage in our design process and learn how to develop curricular modules that cover STEM and CS/CT concepts and practices. Our work is supported by an NSF STEM+C grant and involves a multi-institutional team comprising Vanderbilt University, SRI International, Looking Glass Ventures, Stanford University, Salem State University, and ETR. More information, including example computational modeling tasks, can be found at C2STEM.org.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {1288},
numpages = {1},
keywords = {modeling, k12, cs+x, computational thinking},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3649217.3653586,
author = {Pozzan, Gabriele and Padova, Costanza and Montuori, Chiara and Arf\'{e}, Barbara and Vardanega, Tullio},
title = {Experimental Analysis of First-Grade Students' Block-Based Programming Problem Solving Processes},
year = {2024},
isbn = {9798400706004},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3649217.3653586},
doi = {10.1145/3649217.3653586},
abstract = {This work presents an experimental analysis of first-grade students' block-based programming trajectories. These trajectories consist of edit-level program snapshots that capture learners' problem-solving processes in a navigational microworld. Our results highlight the potential of this fine-grained data capture. Snapshot frequencies in trajectories collected before and after a coding intervention showcase the collective progress of the learners. Graph visualizations, in which nodes represent snapshots and directed edges code edits, highlight strategies, pitfalls and debugging procedures. Individual programming trajectories shed light on details of learners' problem-solving processes that less granular analysis would conceal. Various works in the field of Learning Analytics research show the usefulness of collecting fine-grained process data that proceed from programming activities. However, how to analyze this data is still an open question and research on the subject is in an experimental phase. We contribute to this experimentation by analyzing and discussing results collected from 30 first-grade students in a pretest-posttest study.},
booktitle = {Proceedings of the 2024 on Innovation and Technology in Computer Science Education V. 1},
pages = {143–149},
numpages = {7},
keywords = {block-based programming, computational thinking, learning analytics, programming trajectories},
location = {Milan, Italy},
series = {ITiCSE 2024}
}

@inproceedings{10.1145/3486011.3486418,
author = {Lozano-Arias, Jes\'{u}s and Rodr\'{\i}guez-Sedano, Francisco J. and Gonz\'{a}lez-Alonso, Mar\'{\i}a-Inmaculada and Conde, Miguel \'{A}ngel},
title = {Using Educational Robotic Exoskeleton for the Acquisition of Cross-Curricular Competences in Higher Education},
year = {2021},
isbn = {9781450390668},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3486011.3486418},
doi = {10.1145/3486011.3486418},
abstract = {Today, Spanish universities are already adapted to the Common European Higher Education Area, which is based on the acquisition of competences by the student. Nevertheless, while the acquisition of specific competences is well assumed by the different subjects of each degree, the same is not true for cross-curricular competences. More specifically, in most engineering studies, these competences are developed indirectly through elective subjects or other complementary training activities. The main objective of this work is to design a prototype of a low-cost and open-access exoskeleton that can be used in different engineering degrees for the acquisition of cross-curricular competences. Once this prototype has been designed, we propose to use it in a practice to be carried out in the laboratory following the project-based learning methodology from a STEAM approach. With the use of a robotics kit and a project-based learning methodology, we achieve the goals of educational robotics and computational thinking in a higher education environment.},
booktitle = {Ninth International Conference on Technological Ecosystems for Enhancing Multiculturality (TEEM'21)},
pages = {51–57},
numpages = {7},
keywords = {exoskeleton, engineering education, STEAM education, Cross-curricular competences},
location = {Barcelona, Spain},
series = {TEEM'21}
}

@inproceedings{10.1145/3545945.3569823,
author = {Denny, Paul and Kumar, Viraj and Giacaman, Nasser},
title = {Conversing with Copilot: Exploring Prompt Engineering for Solving CS1 Problems Using Natural Language},
year = {2023},
isbn = {9781450394314},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545945.3569823},
doi = {10.1145/3545945.3569823},
abstract = {GitHub Copilot is an artificial intelligence tool for automatically generating source code from natural language problem descriptions. Since June 2022, Copilot has officially been available for free to all students as a plug-in to development environments like Visual Studio Code. Prior work exploring OpenAI Codex, the underlying model that powers Copilot, has shown it performs well on typical CS1 problems thus raising concerns about its potential impact on how introductory programming courses are taught. However, little is known about the types of problems for which Copilot does not perform well, or about the natural language interactions that a student might have with Copilot when resolving errors. We explore these questions by evaluating the performance of Copilot on a publicly available dataset of 166 programming problems. We find that it successfully solves around half of these problems on its very first attempt, and that it solves 60\% of the remaining problems using only natural language changes to the problem description. We argue that this type of prompt engineering, which we believe will become a standard interaction between human and Copilot when it initially fails, is a potentially useful learning activity that promotes computational thinking skills, and is likely to change the nature of code writing skill development.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
pages = {1136–1142},
numpages = {7},
keywords = {artificial intelligence, cs1, foundation models, github copilot, introductory programming, large language models, openai},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/2818314.2818338,
author = {Moreno-Le\'{o}n, Jes\'{u}s and Robles, Gregorio},
title = {Dr. Scratch: a Web Tool to Automatically Evaluate Scratch Projects},
year = {2015},
isbn = {9781450337533},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2818314.2818338},
doi = {10.1145/2818314.2818338},
abstract = {This poster paper presents the operation and the new features of Dr. Scratch, an award-winning gamified web application that allows to perform automatic analysis of Scratch projects to assess the development of computational thinking and detect some bad programming habits that are common in students learning to program in this environment.},
booktitle = {Proceedings of the Workshop in Primary and Secondary Computing Education},
pages = {132–133},
numpages = {2},
keywords = {learning, computational thinking, coding, Scratch, Assessment},
location = {London, United Kingdom},
series = {WiPSCE '15}
}

@inproceedings{10.1145/3291279.3341203,
author = {Guerzhoy, Michael},
title = {Introduction to Data Science as a Pathway to Further Study in Computing},
year = {2019},
isbn = {9781450361859},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3291279.3341203},
doi = {10.1145/3291279.3341203},
abstract = {Several institutions have recently introduced Introduction to Data Science courses that involve a substantial programming component and do not require CS1 as a prerequisite. Programming and computational thinking are central to the emerging discipline of data science, and so there is overlap between traditional CS1 courses and Introduction to DS.Partly because of the evident societal significance of data science and because data science does not have the problematic reputation of computer science, Intro to DS can attract new and diverse audiences that may not have been interested in taking CS1.We explore Intro to DS as a possible alternative path into computing: what are the learning goals in Intro to DS that involve programming and/or computational thinking? How generalizable are the problems students solve in Intro to DS to what students would encounter in future studies? Is it feasible for students to pursue a data science sequence rather than CS1-CS2 and be prepared for a career that uses data science? To what extent can a pathway through a data science sequence diversify the population of students who graduate from degree programs in computer science and data science?We survey the Introduction to Data Science courses offered in North American post-secondary education, and focus on a data science sequence that uses the R programming language and does not require CS1 at an R1 institution as a case study.},
booktitle = {Proceedings of the 2019 ACM Conference on International Computing Education Research},
pages = {303},
numpages = {1},
keywords = {women in computer science, diversity, data science, cs1},
location = {Toronto ON, Canada},
series = {ICER '19}
}

@inproceedings{10.1145/3287324.3293715,
author = {Nche, Olivia},
title = {Engaging African American Elementary School Children in Code Understanding},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3293715},
doi = {10.1145/3287324.3293715},
abstract = {This paper summarizes the results of a research project to broaden access to computing. The project is aimed at improving the attitudes and computational thinking skills for African American elementary school children in the 3rd to 5th grades and to understand their difficulties in reasoning about code. This was done within the context of a five-week summer camp. There were 40 children of whom about half were females. Along with instruction, we used a custom video game to teach code tracing. We used video game data and pre and posttests to assess students' performance. Qualitative and quantitative results from our mixed method design show cognitive and affective improvements as well as improvements in computational thinking skills. The data we collected also highlighted potential common mistakes that elementary school children might make as they attempt to reason about code. It shows the potential in games to motivate code understanding practice and improve learning. SIGCSE '19, February 27-March 2, 2019, Minneapolis, MN, USA © 2019 Copyright is held by the owner/author(s). ACM ISBN 978-1-4503-5890-3/19/02. https://doi.org/10.1145/3287324.3293715},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {1296},
numpages = {1},
keywords = {video game, problem solving, integrative approach, computational thinking, code tracing, broadening participation},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/2978249.2978272,
author = {Waite, Jane and Curzon, Paul and Marsh, William and Sentance, Sue},
title = {Abstraction and common classroom activities},
year = {2016},
isbn = {9781450342230},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2978249.2978272},
doi = {10.1145/2978249.2978272},
abstract = {In popularizing computational thinking, Wing notes that 'abstraction is described as underlying computational thinking and computational thinking is described as fundamental to computing.' Emerging curricular now require educators to incorporate computational thinking and abstraction into their teaching. Many refer to Piaget's work as evidence of an age-related ceiling preventing younger pupils from being able to abstract. However, more recent evidence suggests that pupils use elements of abstraction in their general process of learning, and that the skill of abstraction can be explicitly taught. We draw on personal classroom experience to illustrate the points made in the literature. Common classroom activities such as using labelled diagrams, concept maps and storyboards are aligned to features of abstraction. We argue that abstraction can and should be taught to young pupils.},
booktitle = {Proceedings of the 11th Workshop in Primary and Secondary Computing Education},
pages = {112–113},
numpages = {2},
keywords = {visualisation, storyboard, graph, design, Abstraction},
location = {M\"{u}nster, Germany},
series = {WiPSCE '16}
}

@inproceedings{10.1145/3502718.3524771,
author = {Nugent, Gwen and Chen, Keting and Soh, Leen-Kiat and Choi, Dongho and Trainin, Guy and Smith, Wendy},
title = {Developing K-8 Computer Science Teachers' Content Knowledge, Self-efficacy, and Attitudes through Evidence-based Professional Development},
year = {2022},
isbn = {9781450392013},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3502718.3524771},
doi = {10.1145/3502718.3524771},
abstract = {Broadening participation in computer science (CS) for primary/elementary students is a growing movement, spurred by computing workforce demands and the need for younger students to develop skills in problem solving and critical/computational thinking. However, offering computer science instruction at this level is directly related to the availability of teachers prepared to teach the subject. Unfortunately, there are relatively few primary/elementary school teachers who have received formal training in computer science, and they often self-report a lack of CS subject matter expertise. Teacher development is a key factor to address these issues, and this paper describes professional development strategies and empirical impacts of a summer institute that included two graduate courses and a series of Saturday workshops during the subsequent academic year. Key elements included teaching a high-level programing language (Python and JavaScript), integrating CS content and pedagogy instruction, and involving both experienced K-12 CS teachers and University faculty as instructors. Empirical results showed that this carefully structured PD that incorporated evidence-based elements of sufficient duration, teacher active learning and collaboration, modeling, practice, and feedback can successfully impact teacher outcomes. Results showed significant gains in teacher CS knowledge (both pedagogy and content), self-efficacy, and perception of CS value. Moderating results -- examining possible differential effects depending on teacher gender, years of teaching CS, and geographic locale -- showed that the PD was successful with experienced and less experienced teachers, with teachers from both rural and urban locales, and with both males and females.},
booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 1},
pages = {540–546},
numpages = {7},
keywords = {teacher professional development, research, k-8 education},
location = {Dublin, Ireland},
series = {ITiCSE '22}
}

@inproceedings{10.1145/3488042.3488048,
author = {Greifenstein, Luisa and Gra\ss{}l, Isabella and Fraser, Gordon},
title = {Challenging but Full of Opportunities: Teachers’ Perspectives on Programming in Primary Schools},
year = {2021},
isbn = {9781450384889},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3488042.3488048},
doi = {10.1145/3488042.3488048},
abstract = {The widespread establishment of computational thinking in school curricula requires teachers to introduce children to programming already at primary school level. As this is a recent development, primary school teachers may neither be adequately prepared for how to best teach programming, nor may they be fully aware why they have to do so. In order to gain a better understanding of these questions, we contrast insights taken from practical experiences with the anticipations of teachers in training. By surveying 200&nbsp;teachers who have taught programming at primary schools and 97&nbsp;teachers in training, we identify relevant challenges when teaching programming, opportunities that arise when children learn programming, and strategies how to address both of these in practice. While many challenges and opportunities are correctly anticipated, we find several disagreements that can inform revisions of the curricula in teaching studies to better prepare primary school teachers for teaching programming at primary schools.},
booktitle = {Proceedings of the 21st Koli Calling International Conference on Computing Education Research},
articleno = {10},
numpages = {10},
keywords = {teacher survey., primary school, Programming education},
location = {Joensuu, Finland},
series = {Koli Calling '21}
}

@inproceedings{10.1145/3408877.3432495,
author = {Rentz, Zach and Clements, John and Wood, Zo\"{e} and Keen, Aaron},
title = {Before You Write Code ... Putting Data and Ethics at the Center of Introductory Computing},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432495},
doi = {10.1145/3408877.3432495},
abstract = {Computing is a large and growing presence in society in 2020, and like many others, we see a strong demand from non-computing majors for "CS For All" courses. Unlike many others, we do not feel that putting traditional programming first is the best way to do this. Instead, we are rethinking the way we introduce computing to allow a broad audience to engage with this discipline.Any computational problem we might tackle requires that we explicitly think about the data involved to solve the problem. Likewise, many computational problems potentially have deep implications for the effect of emerging technologies on society including complex racial and social justice issues. When training novice computer scientists, too often the focus is on learning to write code, but not on explicitly learning computational thinking (data-first, declarative) and how to spot, analyze, and mitigate the ethical implications of potential computing solutions. When teaching those from other disciplines about computer science, the importance of learning to write code is diminished still further, relative to skills in computational thinking and in reasoning about ethical issues in computing and emerging technologies.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {1353},
numpages = {1},
keywords = {introduction to computational thinking, ethics, declarative, data-first, CS4all},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3456565.3460074,
author = {H\"{o}rmann, Corinna and Rottenhofer, Marina and Groher, Iris and Sabitzer, Barbara},
title = {Let the Games Begin - Inviting Young Learners to Code},
year = {2021},
isbn = {9781450383974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456565.3460074},
doi = {10.1145/3456565.3460074},
abstract = {No matter whether young or old, almost everyone likes to play games. Even though digital games have the opportunity to motivate students and foster digital skills, games in an educational context are typically described as a minor matter in class. However, games can provide an environment to work intensively on and consolidate topics from the classroom. Especially if students have the task of developing a game themselves, it is necessary to work on the topic in depth while the content is learned and anchored playfully. As part of the COOL Informatics project, which had the goal of spreading digital education and programming in the educational sector, a Game Design Challenge was launched. In this challenge, pupils, and teachers from all over Austria were invited to develop their own educational games. It is planned to relaunch the Game Design Challenge in 2021 with the goal that more and more students can be introduced to the basics of Computational Thinking.},
booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
pages = {644},
numpages = {1},
keywords = {stem, programming, game design, digital education},
location = {Virtual Event, Germany},
series = {ITiCSE '21}
}

@inproceedings{10.1145/3421590.3421624,
author = {Catet\'{e}, Veronica and Lytle, Nicholas and Boulden, Danielle and Hinckle, Madeline and Wiebe, Eric and Barnes, Tiffany},
title = {A block-based modeling curriculum for teaching middle grade science students about Covid-19},
year = {2020},
isbn = {9781450387590},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3421590.3421624},
doi = {10.1145/3421590.3421624},
abstract = {While the scientific community is learning more about the novel Coronavirus and its associate disease, Covid-19, it is important to begin efforts to educate students on the disease, how it is transmitted, and the possible steps we as societies and individuals can take to combat the spread. To this end, we adapted an existing computational thinking curriculum originally designed to teach students about how infectious diseases are spread by having them build a model within the block-based programming environment, Cellular. This new curriculum introduces relevant scientific terms and tasks student to program an increasingly complex model ending the activity by choosing which risk-reduction strategy to employ.},
booktitle = {Proceedings of the 15th Workshop on Primary and Secondary Computing Education},
articleno = {36},
numpages = {2},
location = {Virtual Event, Germany},
series = {WiPSCE '20}
}

@inproceedings{10.1145/3459990.3465210,
author = {Stower, Rebecca and Kappas, Arvid},
title = {CozmoNAOts: Designing an Autonomous Learning Task with Social and Educational Robots},
year = {2021},
isbn = {9781450384520},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3459990.3465210},
doi = {10.1145/3459990.3465210},
abstract = {Learning tasks designed with social or educational robots are becoming increasingly commonplace, with emerging methodologies being proposed regarding the design of interaction patterns for child-robot-interaction (cHRI). Yet, technological limitations remain a strong barrier to the implementation of fully autonomous robot tutoring systems. In addition, there is currently no research on how social and educational robots might be combined when designing learning tasks. Consequently, in this paper we describe the design and pilot testing of a (semi) autonomous learning task designed with a social robot (NAO) and educational robot (Cozmo) targeted at children’s computational thinking skills. Preliminary data from a pilot phase with 53 children is promising, and results are discussed with regards to identified challenges. Several solutions are proposed in the context of designing interactions for cHRI.},
booktitle = {Proceedings of the 20th Annual ACM Interaction Design and Children Conference},
pages = {542–546},
numpages = {5},
keywords = {user testing, social robots, pilot study, learning, educational robots, education, child-robot-interaction, autonomous interaction},
location = {Athens, Greece},
series = {IDC '21}
}

