@inproceedings{10.1145/3408877.3432434,
author = {Blanchard, Jeremiah and Gardner-McCune, Christina and Anthony, Lisa},
title = {Dual Modality Instruction \&amp; Programming Environments: Student Usage \&amp; Perceptions},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432434},
doi = {10.1145/3408877.3432434},
abstract = {Dual-modality blocks-text programming environments have shown promise in helping students learn programming and computational thinking. These environments link blocks-based visualizations to text-based representations, which are more typical of production languages. Since prior work shows that some students who learn in dual-modality environments outperform those who learn in text on assessments, we sought to understand specifically how students use dual-modality environments and what support these environments provide to the learning process. We analyzed survey responses and tool logs collected during a study at a large public university in a CS1 course (N=425). We found that students from all prior programming experience backgrounds made use of the ability to visualize code structures by using blocks. Students with prior experience in blocks or no prior experience said they felt the dual-modality instruction helped them understand code structure and meaning. As students progressed through the class, we found that they made more use of the blocks mode's reference palettes than to its drag-and-drop facilities or mode-switching features. By identifying how students interact with dual-modality tools and how they impact student understanding, this work provides guidance for classroom instructors.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {481–487},
numpages = {7},
keywords = {CS1, blocks-based programming environments, computer science education, dual-modality programming environments, novice programmers, programming languages},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3686852.3687080,
author = {Fall, Abdou and Popoola, Saheed},
title = {Educators' Perspective on the role of Computational Technology in K-12 Education},
year = {2024},
isbn = {9798400711060},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3686852.3687080},
doi = {10.1145/3686852.3687080},
abstract = {The use of computational technology is common in K-12 education. Existing work on the use of technology have often focused on experiments without considering the educator’s viewpoint. Yet, educators are those who deal directly with the student and introduce these technology to the student. This paper examines the perception of educators on the use of computational technology in the classroom. We conducted a qualitative study consisting of semi-structured interviews and open-ended questions with K-12 educators. The data from the study was then analysed to extract thematic group perceptions on the use of technology in the classroom. The results show that most educators believe that technology enhances learning in general even though there may be some aspects of learning that are inhibited by technology. Furthermore, the solutions offered by computational technology are instrumental in solving business, health, and societal problems. These industry relies on the problem-solving capacity of learners from the school system who possess computational skills. Hence, the educators recommend that students should be introduced to computational technology as early as possible because the knowledge of computational technology is essential for the students’ future careers.},
booktitle = {Proceedings of the 25th Annual Conference on Information Technology Education},
pages = {134–137},
numpages = {4},
keywords = {K-12, educators, learning process, technology},
location = {El Paso, TX, USA},
series = {SIGITE '24}
}

@inproceedings{10.1145/3078072.3079740,
author = {Papavlasopoulou, Sofia and Sharma, Kshitij and Giannakos, Michail and Jaccheri, Letizia},
title = {Using Eye-Tracking to Unveil Differences Between Kids and Teens in Coding Activities},
year = {2017},
isbn = {9781450349215},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3078072.3079740},
doi = {10.1145/3078072.3079740},
abstract = {Computational thinking and coding is gradually becoming an important part of K-12 education. Most parents, policy makers, teachers, and industrial stakeholders want their children to attain computational thinking and coding competences, since learning how to code is emerging as an important skill for the 21st century. Currently, educators are leveraging a variety of technological tools and programming environments, which can provide challenging and dynamic coding experiences. Despite the growing research on the design of coding experiences for children, it is still difficult to say how children of different ages learn to code, and to cite differences in their task-based behaviour. This study uses eye-tracking data from 44 children (here divided into "kids" [age 8-12] and "teens" [age 13-17]) to understand the learning process of coding in a deeper way, and the role of gaze in the learning gain and the different age groups. The results show that kids are more interested in the appearance of the characters, while teens exhibit more hypothesis-testing behaviour in relation to the code. In terms of collaboration, teens spent more time overall performing the task than did kids (higher similarity gaze). Our results suggest that eye-tracking data can successfully reveal how children of different ages learn to code.},
booktitle = {Proceedings of the 2017 Conference on Interaction Design and Children},
pages = {171–181},
numpages = {11},
keywords = {coding, eye-tracking, kids, maker movement, teens},
location = {Stanford, California, USA},
series = {IDC '17}
}

@inproceedings{10.1145/3290605.3300744,
author = {Koushik, Varsha and Kane, Shaun K.},
title = {"It Broadens My Mind": Empowering People with Cognitive Disabilities through Computing Education},
year = {2019},
isbn = {9781450359702},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3290605.3300744},
doi = {10.1145/3290605.3300744},
abstract = {Computer science education is widely viewed as a path to empowerment for young people, potentially leading to higher education, careers, and development of computational thinking skills. However, few resources exist for people with cognitive disabilities to learn computer science. In this paper, we document our observations of a successful program in which young adults with cognitive disabilities are trained in computing concepts. Through field observations and interviews, we identify instructional strategies used by this group, accessibility challenges encountered by this group, and how instructors and students leverage peer learning to support technical education. Our findings lead to guidelines for developing tools and curricula to support young adults with cognitive disabilities in learning computer science.},
booktitle = {Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems},
pages = {1–12},
numpages = {12},
keywords = {accessibility, cognitive disability, computer science education},
location = {Glasgow, Scotland Uk},
series = {CHI '19}
}

@inproceedings{10.1145/3291279.3341199,
author = {Ariga, Taeko},
title = {Can We Use Swift as a First Language to Teach Programming to Non-majors?},
year = {2019},
isbn = {9781450361859},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3291279.3341199},
doi = {10.1145/3291279.3341199},
abstract = {This study considers whether the Swift language can be used as a first language for teaching introductory programming. Our department targets the creation of digital contents and media studies. Students are concerned with both digital media contents and computer technology. Learning programming is important for our students to foster computational thinking and utilize programming for their study and creation. We conducted two courses to teach programming to beginners using Java and Swing. The poster presents the contents of both courses, results of examinations, and consideration of the results. Although our pilot study shows that Swift + Xcode may not be adequate for beginners, we would like to explore the feasibility of learning iOS development at the same time as basic programming concepts without the prerequisite of programming experience.},
booktitle = {Proceedings of the 2019 ACM Conference on International Computing Education Research},
pages = {289},
numpages = {1},
keywords = {introductory programming, java, programming for non-majors, swift},
location = {Toronto ON, Canada},
series = {ICER '19}
}

@inproceedings{10.1145/3033701.3033745,
author = {Barata, Pablo Eduardo Cabral and Mota, Marcelle Pereira},
title = {An Initial Study on Meanings Facets in IvProg programs},
year = {2016},
isbn = {9781450352352},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3033701.3033745},
doi = {10.1145/3033701.3033745},
abstract = {This paper reports an initial study about meaning facets of programs constructed with IvProg tool. These facets were developed based on the PoliFacets model, a model to support the development of meaning facets with the purpose to support the teaching of computational thinking acquisition. In this way, an evaluation of the facets was performed with novice at computing undergraduate courses, indicating that they were fulfilling part of their goals.},
booktitle = {Proceedings of the 15th Brazilian Symposium on Human Factors in Computing Systems},
articleno = {43},
numpages = {4},
keywords = {IvProg, PoliFacets, computational thinking acquisition, facets, metacommunication},
location = {S\~{a}o Paulo, Brazil},
series = {IHC '16}
}

@inproceedings{10.1145/3287324.3293772,
author = {Floyd, Steven Paul},
title = {Historical High School Computer Science Curriculum and Current K-12 Initiatives},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3293772},
doi = {10.1145/3287324.3293772},
abstract = {It's an exciting time in computer science education on the K-12 landscape. Educational jurisdictions around the world are incorporating computer science concepts, as well as related computational thinking components, into their mandatory, K-12 curriculum. As we develop and implement curriculum initiatives with an eye on the future and the 21st century learner and citizen, what wisdom can we gleam from the past? In Ontario, Canada computer science education dates back to 1966 with the release of the Ministry of Education's Data Processing course that included a number of computer science and computer programming concepts and ideas. The document also frames computer education within the context of an emerging field and highlights the importance of students developing appropriate computer skills in order to thrive in the labor market and society. While we often consider computer science curriculum initiatives in K-12 education nascent, are important historical policy and initiatives being overlooked? This lightning talk shares preliminary findings from an analysis of five historical computer science curriculum documents. Grounded theory was used to discover emergent themes and concepts apparent in historical documents including ethical computing, the role of technology in society, and the cross-curricular nature of computer science skills. These preliminary findings inform the discussion surrounding the use of historical curriculum to establish best practice in existing curriculum and policy development.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {1287},
numpages = {1},
keywords = {21st century learning, computational thinking, computer programming, computer science, computing, curriculum, educational policy, historical analysis, k-12 education},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3341525.3387415,
author = {Leifheit, Luzia and Tsarava, Katerina and Ninaus, Manuel and Ostermann, Klaus and Golle, Jessika and Trautwein, Ulrich and Moeller, Korbinian},
title = {SCAPA: Development of a Questionnaire Assessing Self-Concept and Attitudes Toward Programming},
year = {2020},
isbn = {9781450368742},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3341525.3387415},
doi = {10.1145/3341525.3387415},
abstract = {There is a constantly growing number of initiatives asserting the relevance of programming already in primary education and offering respective interventions with the goal to foster interest in and positive attitudes toward programming. To evaluate to what extent this goal is achieved, assessing students' attitudes toward programming reliably is indispensable. However, there still is a need for validated instruments for assessing this in elementary school students. This seems particularly relevant as self-concept and attitudes toward a school subject were repeatedly observed to be significant predictors of learning motivation and achievement. The newly developed Self-Concept and Attitude toward Programming Assessment (SCAPA) is based on existing instruments for assessing students' self-concept and attitude toward mathematics. SCAPA measures aspects of students' self-concept and attitudes toward programming on seven scales: i) self-reported previous programming experience and understanding, ii) self-concept, iii) intrinsic value belief, iv) attainment value belief, v) utility value belief, vi) cost belief, and vii) compliance and persistence. We administered SCAPA to 197 elementary school students between seven and ten years of age in the context of an evaluation of a computational thinking intervention. Data were analyzed for reliability (i.e., internal consistency on item and scale level) and construct validity (by means of confirmatory factor analysis). Results indicated good reliability for all scales except for the self-reported previous programming experience and understanding scale. Overall, these results reflect SCAPA's suitability for assessing different aspects of elementary school students' self-concept and attitudes toward programming.},
booktitle = {Proceedings of the 2020 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {138–144},
numpages = {7},
keywords = {K-12 education, assessment, computer science education, computing education, instrument development, primary education},
location = {Trondheim, Norway},
series = {ITiCSE '20}
}

@inproceedings{10.1145/3401956.3404238,
author = {Bergner, Yoav and Damast, Deborah and Romita, Allegra and Smock, Anne Marie Robson},
title = {Movement Computing Education for Middle Grades},
year = {2020},
isbn = {9781450375054},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3401956.3404238},
doi = {10.1145/3401956.3404238},
abstract = {This paper takes a theoretical approach to movement computing education for young learners, with a focus on middle grades (grades 6-8, ages 11-14). This age group is targeted as a lower bound because, while some elements of computational thinking may be available to still younger learners, there are abstractions involved in movement computation that pre-require a certain amount of formal operation, in the Piagetian sense. We outline a parallel foundation of key ideas in movement (specifically dance) and key ideas in computing (specifically data representations) at this age-appropriate level. We describe how these foundations might be laid down together early on so that they can later be integrated via the introduction of sensing and feedback technology. Concepts in movement and choreography are studied using words and bodies, as in traditional dance education, and later using computer simulations and motion capture. Data concepts are introduced first by appeal to general questions and later by specification to the movement of individual and collective joints and bodies.},
booktitle = {Proceedings of the 7th International Conference on Movement and Computing},
articleno = {19},
numpages = {5},
keywords = {dance analytics, data science, education, motion capture},
location = {Jersey City/Virtual, NJ, USA},
series = {MOCO '20}
}

@inproceedings{10.1145/2538862.2544316,
author = {Roberts, Michele S.},
title = {Data-driven broadened participation (abstract only)},
year = {2014},
isbn = {9781450326056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2538862.2544316},
doi = {10.1145/2538862.2544316},
abstract = {While programming has long been utilized as a recruitment path into computer science, data analysis as a recruitment path is relatively under-explored. Through a series of modular curriculum units developed in computational thinking, the potential impact of explorations in data analysis to impact teacher and student affect toward and interest in computer science is being investigated. Developed units include exercises such as statistically determining the author of selected text passages, modeling roller coaster simulations, solving crime mysteries and controlling zombie contagions. Computational thinking modules have been delivered in a CS Pilot course, as well as in K-12 outreach programs in non-computing courses (STEM and non-STEM, including classes in English literature, sociology, biology, physics and math). Initial results show significant and promising opportunities to utilize data analysis to create computing interest in a broadened population of students and teachers, extending the impact of computational thinking into a variety of subject domains.},
booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
pages = {724},
numpages = {1},
keywords = {broadening participation, computational thinking, data},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '14}
}

@inproceedings{10.1145/3442188.3445914,
author = {Raji, Inioluwa Deborah and Scheuerman, Morgan Klaus and Amironesei, Razvan},
title = {You Can't Sit With Us: Exclusionary Pedagogy in AI Ethics Education},
year = {2021},
isbn = {9781450383097},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3442188.3445914},
doi = {10.1145/3442188.3445914},
abstract = {Given a growing concern about the lack of ethical consideration in the Artificial Intelligence (AI) field, many have begun to question how dominant approaches to the disciplinary education of computer science (CS)---and its implications for AI---has led to the current "ethics crisis". However, we claim that the current AI ethics education space relies on a form of "exclusionary pedagogy," where ethics is distilled for computational approaches, but there is no deeper epistemological engagement with other ways of knowing that would benefit ethical thinking or an acknowledgement of the limitations of uni-vocal computational thinking. This results in indifference, devaluation, and a lack of mutual support between CS and humanistic social science (HSS), elevating the myth of technologists as "ethical unicorns" that can do it all, though their disciplinary tools are ultimately limited. Through an analysis of computer science education literature and a review of college-level course syllabi in AI ethics, we discuss the limitations of the epistemological assumptions and hierarchies of knowledge which dictate current attempts at including ethics education in CS training and explore evidence for the practical mechanisms through which this exclusion occurs. We then propose a shift towards a substantively collaborative, holistic, and ethically generative pedagogy in AI education.},
booktitle = {Proceedings of the 2021 ACM Conference on Fairness, Accountability, and Transparency},
pages = {515–525},
numpages = {11},
location = {Virtual Event, Canada},
series = {FAccT '21}
}

@inproceedings{10.1145/3372782.3406276,
author = {Papamitsiou, Zacharoula and Giannakos, Michail and Simon, - and Luxton-Reilly, Andrew},
title = {Computing Education Research Landscape through an Analysis of Keywords},
year = {2020},
isbn = {9781450370929},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3372782.3406276},
doi = {10.1145/3372782.3406276},
abstract = {Authors of academic papers are generally required to nominate several keywords that characterize the paper, but are rarely offered guidance on how to select those keywords. We analyzed the keywords in the past 15 years of selected computing education publications: the 1274 papers published in the proceedings of ICER and ITiCSE, including the ITiCSE working group reports. As well as the keywords assigned by the authors, we mined the abstracts of these papers to extract a separate list of keywords. Our work has two goals: to frame the thematic landscape of the field, using keywords that communicate the work conducted; and to detect differences between the human judgement and interpretation of keywords and the machine 'intelligence' on handling those keywords, with respect to the clusters of thematic topics identified in each case. The analysis shows that the field is dominated by learning approaches (e.g., active learning, collaborative learning), aspects of programming (e.g., debugging, misconceptions), computational thinking, feedback, and assessment, while other areas that have attracted attention include academic integrity (e.g., plagiarism) and diversity (e.g., female students, underrepresented groups). It was observed that the keywords chosen by authors are often too general to provide information about the paper (e.g., 'concerns', 'course', 'fun', 'justice'). We elaborate on the findings and begin a discussion on how authors can improve the communication of their research and make access to it more transparent.},
booktitle = {Proceedings of the 2020 ACM Conference on International Computing Education Research},
pages = {102–112},
numpages = {11},
keywords = {bibliometrics, computing education, dominant themes, keywords},
location = {Virtual Event, New Zealand},
series = {ICER '20}
}

@inproceedings{10.1145/3328778.3372704,
author = {Gendreau Chakarov, Alexandra},
title = {Introducing Middle School Students to Programmable Sensor Technologies Through an Immersive Experience},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3372704},
doi = {10.1145/3328778.3372704},
abstract = {Integrating computational thinking into middle school science classes through the use of programmable sensor technologies requires that students are familiar with the sensors and how the sensors can help them figure out the answers to their scientific questions. However current best practice in science education integrates science content and scientific practices (i.e. planning an investigation using the sensors) instead of teaching the practices first. In addition, the goal is to have the students recognize that the sensors would be useful for answering their current questions. To address this issue, I collaboratively designed a week long sensor immersion experience with middle school science teachers as part of a larger design based implementation research project that creates middle school science units that integrate computational thinking using these sensors. Through our observations and reflections with teachers, the necessity of a unit that introduces the students to the sensors became apparent. Working with the teachers, we developed a sensor immersion experience centered around the investigation of a classroom data display that illustrates information about the classroom environment using lights and sound. The data display was constructed using the programmable sensor technologies available to the students and the unit involved them creating and refining a model of how the classroom data display worked. This unit was implemented during the first three months of the 2019/2020 school year and preliminary results suggest that students have a better sense of the capabilities of the sensors and how they can help them in their scientific inquiry.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1428},
numpages = {1},
keywords = {computational-thinking, micro:bit, middle school-science, sensors},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@article{10.1145/3425711,
author = {Seo, Hyunjin and Altschwager, Darcey and Choi, Baek-young and Song, Sejun and Britton, Hannah and Ramaswamy, Megha and Schuster, Bernard and Ault, Marilyn and Ayinala, Kaushik and Zaman, Rafida and Tihen, Ben and Yenugu, Lohitha},
title = {Informal Technology Education for Women Transitioning from Incarceration},
year = {2021},
issue_date = {June 2021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {21},
number = {2},
url = {https://doi.org/10.1145/3425711},
doi = {10.1145/3425711},
abstract = {As society increasingly relies on digital technologies in many different aspects, those who lack relevant access and skills are lagging increasingly behind. Among the underserved groups disproportionately affected by the digital divide are women who are transitioning from incarceration and seeking to reenter the workforce outside the carceral system (women-in-transition). Women-in-transition rarely have been exposed to sound technology education, as they have generally been isolated from the digital environment while in incarceration. Furthermore, while women have become the fastest-growing segment of the incarcerated population in the United States in recent decades, prison education and reentry programs are still not well adjusted for them. Most programs are mainly designed for the dominant male population. Consequently, women-in-transition face significant post-incarceration challenges in accessing and using relevant digital technologies and thus have added difficulties in entering or reentering the workforce. Against this backdrop, our multi-disciplinary research team has conducted empirical research as part of technology education offered to women-in-transition in the Midwest. In this article, we report results from our interviews with 75 women-in-transition in the Midwest that were conducted to develop a tailored technology education program for the women. More than half of the participants in our study are women of color and face precarious housing and financial situations. Then, we discuss principles that we adopted in developing our education program for the marginalized women and participants’ feedback on the program. Our team launched in-person sessions with women-in-reentry at public libraries in February 2020 and had to move the sessions online in March due to COVID-19. Our research-informed educational program is designed primarily to support the women in enhancing their knowledge and comfort with technology and nurturing computational thinking. Our study shows that low self-efficacy and mental health challenges, as well as lack of resources for technology access and use, are some of the major issues that need to be addressed in supporting technology learning among women-in-transition. This research offers scholarly and practical implications for computing education for women-in-transition and other marginalized populations.},
journal = {ACM Trans. Comput. Educ.},
month = may,
articleno = {16},
numpages = {16},
keywords = {Informal technology education, reentry}
}

@inproceedings{10.1145/3335595.3336289,
author = {Botella, Federico and Pe\~{n}alver, Antonio and Quesada-Mart\'{\i}nez, Manuel and Bermejo, Fulgencio and Borr\'{a}s, Fernando},
title = {Teaching the sequential programming concept using a robotic arm in an interactive museum},
year = {2019},
isbn = {9781450371766},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3335595.3336289},
doi = {10.1145/3335595.3336289},
abstract = {Technology and Computer Science are increasingly present in today's education and teaching programming is not only restricted to students interested in Science, Technology, Engineering and Maths (STEM) disciplines, as computational thinking is useful in many day-to-day problems. In this paper we study how students of high school can put in practice transversal concepts by learning the sequential programming concept. We analyze their learning process by asking them to code a simple program that solves a concrete problem: perform simple and immersive tasks using a physical robot in an interactive museum. The experiment offers us some results that should be confirmed with more participants, but it seems that the ages from 13 to 15 years old are crucial to gain knowledge and skills to apply concepts of their studies on using sequential programming to interact with a robotic arm.},
booktitle = {Proceedings of the XX International Conference on Human Computer Interaction},
articleno = {32},
numpages = {4},
keywords = {interactive module, learning efficiency, robot arm, science museum, sequential programming},
location = {Donostia, Gipuzkoa, Spain},
series = {Interacci\'{o}n '19}
}

@inproceedings{10.1145/2858796.2858801,
author = {Giordano, Daniela and Maiorana, Francesco and Csizmadia, Andrew Paul and Marsden, Simon and Riedesel, Charles and Mishra, Shitanshu and Vinikienundefined, Lina},
title = {New Horizons in the Assessment of Computer Science at School and Beyond: Leveraging on the ViVA Platform},
year = {2015},
isbn = {9781450341462},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2858796.2858801},
doi = {10.1145/2858796.2858801},
abstract = {A revolution is taking place across Europe and worldwide in how we teach our children about computing, in primary and secondary school. Out goes ICT and how to use Microsoft Office; in comes coding and computer science. Assessment has a crucial role to play in this revolution. If teachers use low-quality assessment instruments we will end-up teaching the wrong subject; and viceversa. This paper reviews the state of the field, and makes concrete, achievable proposals for developing shared, high quality assessments for computer science. Central to this proposal is the collaborative platform VIVA (the Vilnius collaboratively coded and Validated computer science questions/tasks for Assess- ment). Two requirements are key to VIVA: 1) support for multiple competency frameworks, so that the contributors can meta-tag resources with respect to the framework they are most familiar with; and 2) support for crowdsourcing the validation of each question/task and its mapping to competencies. The use of a taxonomy of questions/tasks type that has been mapped to computational thinking concepts and to a competency framework is proposed. Some seed questions are already available in the online platform prototype, and various supporters have granted permission to use large questions banks. The design requirements of a full implementation of the VIVA platform for a modern and effective approach to assessment including support for digital badges, are outlined; and some preliminary results from a survey administered to the initial contributors to VIVA are presented.},
booktitle = {Proceedings of the 2015 ITiCSE on Working Group Reports},
pages = {117–147},
numpages = {31},
keywords = {activities, assessment, competency frameworks, computational thinking, crowdsourcing, learning progression, lifelong learning, metadata, open badges, questions, repositories},
location = {Vilnius, Lithuania},
series = {ITICSE-WGR '15}
}

@inproceedings{10.1145/3304221.3319750,
author = {Lodi, Michael},
title = {Does Studying CS Automatically Foster a Growth Mindset?},
year = {2019},
isbn = {9781450368957},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3304221.3319750},
doi = {10.1145/3304221.3319750},
abstract = {Many arguments are used to advocate for the introduction of Computer Science (CS) / Computational Thinking / "coding" in K-12 education. Growth mindset theory (GM) is also becoming very popular among educators and researchers. Some claims stating that studying CS can foster a GM have emerged. However, educational research shows that transfer of competences is hard. Very little research has been conducted on the relationship between GM and CS learning, with conflicting results. We measured some indicators (e.g., mindset, computer science mindset) at the beginning and the end of a high school year in five different classes: three CS oriented, one Chemistry oriented, and one Transportation&amp;Logistics oriented. In one of the CS oriented classes, we did a very brief GM intervention. At the end of the school year, none of the classes showed a statistically significant change in their mindset. Interestingly, non-CS oriented classes showed a significant decrease in their computer science growth mindset. In the intervention class, students suggested, to stimulate a GM, the need for activities that are more creative, engaging, and related to the real world and their interests.},
booktitle = {Proceedings of the 2019 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {147–153},
numpages = {7},
keywords = {computer science mindset, growth mindset, high school, transfer},
location = {Aberdeen, Scotland Uk},
series = {ITiCSE '19}
}

@inproceedings{10.1145/3328778.3366922,
author = {Cao, Lijuan and Rorrer, Audrey and Pugalee, David and Maher, Mary Lou and Dorodchi, Mohsen and Frye, David and Barnes, Tiffany and Wiebe, Eric},
title = {Work in Progress Report: A STEM EcoSystem Approach to CS/CT for All in a Middle School},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366922},
doi = {10.1145/3328778.3366922},
abstract = {This project is a Research to Practice Partnership (RPP) between two middle schools and two universities. It focuses on investigating problems and on identifying solutions around increasing participation and interest in computer science (CS). We aim to do this by identifying, experimenting with, and fine-tuning methods to help students develop computational thinking (CT) skills. The research employs a STEM ecosystem model, which facilitates a support structure that aims to mitigate barriers and impact students as they progress in STEM areas. While this RPP is still a work in progress, we present data from the first year of our collaboration with one of the middle schools. While the research questions guiding this RPP are intended to be iterative and revised annually, year one data provides perspectives on (1) barriers to developing a STEM ecosystem that supports CS/CT for every student through integration into science, math, and language arts courses, (2) the factors or interventions needed for the development of a CS/CT focused ecosystem that supports everyone in the school, (3) the indicators of success for a CS/CT focused STEM ecosystem in a school, and (4) how the ecosystem prepares and engages all students for CS/CT work in high school. Year one data is discussed in terms of the STEM ecosystem framework and in how it will guide the next steps in this partnership. This project contributes to the understanding of how to prepare future generations for participation in a workforce where knowledge of the foundations of CS/CT is integral to success.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {999–1004},
numpages = {6},
keywords = {broadening participation, k-12 outreach, research to practice partnership, stem ecosystem},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3626253.3633424,
author = {Sussman, Alan and Prasad, Sushil and Weems, Charles and Ghafoor, Sheikh and Vaidyanathan, Ramachandran},
title = {Integrating Parallel and Distributed Computing in Early Computing Classes},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3633424},
doi = {10.1145/3626253.3633424},
abstract = {Parallel and distributed computing (PDC) has become pervasive in all aspects of computing, so it is essential that students include parallelism and distribution in the computational thinking that they apply to problem solving, from the very beginning of their computing education. With all computing devices that students use currently having multiple cores as well as a GPU in many cases, many students' favorite applications use multiple cores and/or distributed processors. However, we are still teaching them to solve problems using only sequential thinking. Why?This hands-on workshop will demonstrate how easy it is to open students' eyes to exploiting concurrency in problem solving. You will participate in unplugged activities that will help students to recognize examples of PDC concepts and concurrency in the world around them. You will learn how freely available libraries can be used to exploit parallelism using shared memory parallel programming, using both plugged and unplugged activities that are usable in a classroom setting.No equipment or prior experience is required, but a laptop that can run C++, Java, and Python is recommended for following along with some code examples. The activities and discussion models have been used successfully to teach PDC concepts in early computing courses and will be available after the workshop. Participants will receive a stipend of 400 to defray their cost of registration and one-night hotel stay. The CDER center will also have a booth in the exhibition hall for additional support.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1906},
numpages = {1},
keywords = {computing education, early computing class, hpc education, shared memory parallel programming, pdc education},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@article{10.5555/3205191.3205206,
author = {Fine, Benjamin T.},
title = {Algorithm impossible: a CS1 algorithm design exercise},
year = {2018},
issue_date = {June 2018},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {33},
number = {6},
issn = {1937-4771},
abstract = {Along with the skill of programming, a primary objective of a CS1 level course is to promote computational thinking and algorithm design. This lighting talk is addressing an in-class exercise that I have been developing and using for the past three semesters in my introductory Computer Science courses. The aim of this assignment is three-fold; (1) to have students practice their skill of algorithm design, (2) understand the importance and usefulness of a well-written algorithm, and (3) to experience how different students may approach the same problem.},
journal = {J. Comput. Sci. Coll.},
month = jun,
pages = {135–136},
numpages = {2}
}

