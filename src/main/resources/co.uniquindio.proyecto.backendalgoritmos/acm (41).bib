@inproceedings{10.1145/3591139.3591155,
author = {Xu, Xiang and Liu, Rui and Chen, Qinqin and Yang, Hairu},
title = {A Digital Game-based Learning Approach to Improve Students’ Learning Performance of Senior High School Programming Courses},
year = {2023},
isbn = {9798400707506},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3591139.3591155},
doi = {10.1145/3591139.3591155},
abstract = {As an important means to improve teenagers' computational thinking, programming education has been paid more and more attention. But the traditional teaching mode of programming course is boring and abstract, which makes learners lack motivation and enthusiasm for learning. Therefore, learning methods based on digital games may be a potential optimization strategy. This paper proposes a learning method based on digital games and conducts a quasi-experimental study in a senior high school in China. The experimental group was placed in a learning method based on digital games to evaluate the effectiveness of the proposed learning method and game learning behavior, while the control group used traditional classroom teaching methods for learning. The results showed that the experimental group was better than the control group in learning experience, learning interest, collaborative learning ability and learning performance. It provides a valuable reference for Game-based programming teaching and research.Keywords: Digital game-based learning, Programming education, Teaching process},
booktitle = {Proceedings of the 2023 4th International Conference on Education Development and Studies},
pages = {23–28},
numpages = {6},
location = {Hilo, USA},
series = {ICEDS '23}
}

@inproceedings{10.1145/3605468.3609758,
author = {Nolan, Karen and Faherty, Roisin and Quille, Keith and Nolan, Keith and O'Farrell, Amanda and Becker, Brett A.},
title = {CS Outreach to Inform Secondary School Students' Perceptions of CS: Initial Findings},
year = {2023},
isbn = {9798400708510},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3605468.3609758},
doi = {10.1145/3605468.3609758},
abstract = {This study covers a three-year, longitudinal K–12 outreach initiative that promoted computer science in Ireland from 2017–2020. During the first year, 2017–2018, 2900 students participated in a pilot phase. 7320 students participated in the implementation phase throughout the course of the academic years 2018–2019 and 2019–2020 in 2018. The program consisted of a free, two-hour camp that was delivered on-site at the school and exposed children to a variety of computing topics, including addressing misconceptions about computing, learning how to code, and investigating computational thinking. Schools self-selected, and the initiative reached several schools in every county in Ireland, as well as schools with a wide range of socioeconomic backgrounds and gender diversity. The primary school students’ ages ranged from third class (7–8 years old) to sixth year (17–18 years old) at second level. This paper focuses specifically on the research data collected during the implementation phase (N=1202) from the secondary school students (12 - 18 years old) not enrolled in the formal Leaving Certificate Computer Science subject. Looking at student perceptions of Computer Science and if the outreach positively impacted those perceptions and if it built student interest in pursuing further study in Computer Science.},
booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
articleno = {13},
numpages = {6},
keywords = {Computer Science Education, Computing Camps Inclusive, Female Student, K-12, Outreach, Perceptions},
location = {Cambridge, United Kingdom},
series = {WiPSCE '23}
}

@inproceedings{10.1145/3587102.3588809,
author = {Greifenstein, Luisa and Heuer, Ute and Fraser, Gordon},
title = {Exploring Programming Task Creation of Primary School Teachers in Training},
year = {2023},
isbn = {9798400701382},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3587102.3588809},
doi = {10.1145/3587102.3588809},
abstract = {Introducing computational thinking in primary school curricula implies that teachers have to prepare appropriate lesson material. Typically this includes creating programming tasks, which may overwhelm primary school teachers with lacking programming subject knowledge. Inadequate resulting example code may negatively affect learning, and students might adopt bad programming habits or misconceptions. To avoid this problem, automated program analysis tools have the potential to help scaffolding task creation processes. For example, static program analysis tools can automatically detect both good and bad code patterns, and provide hints on improving the code. To explore how teachers generally proceed when creating programming tasks, whether tool support can help, and how it is perceived by teachers, we performed a pre-study with 26 and a main study with 59 teachers in training and the LitterBox static analysis tool for Scratch. We find that teachers in training (1) often start with brainstorming thematic ideas rather than setting learning objectives, (2) write code before the task text, (3) give more hints in their task texts and create fewer bugs when supported by LitterBox, and (4) mention both positive aspects of the tool and suggestions for improvement. These findings provide an improved understanding of how to inform teacher training with respect to support needed by teachers when creating programming tasks.},
booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 1},
pages = {471–477},
numpages = {7},
keywords = {assignments, automated feedback, block-based programming, elementary school, litterbox, preservice teacher education, scratch},
location = {Turku, Finland},
series = {ITiCSE 2023}
}

@inproceedings{10.1145/3446871.3469782,
author = {Buddemeyer, Amanda and Hatley, Leshell and Stewart, Angela and Solyst, Jaemarie and Ogan, Amy and Walker, Erin},
title = {Agentic Engagement with a Programmable Dialog System},
year = {2021},
isbn = {9781450383264},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3446871.3469782},
doi = {10.1145/3446871.3469782},
abstract = {Dialog with a social pedagogical robot or agent is a powerful way for kids to learn [1, 5] but may limit the formation of an agentic relationship with the technology [9]. One main purpose of conversational agents is to allow the user to have a natural interaction that reduces the need to learn artificial conventions [6], but dialog systems fall short with respect to failure recovery, vocabulary diversity, remembering conversational history, and other measures [2, 3]. Further, Hill et. al. [4] found that people adapt their model of communication to match a chatbot’s in the same way they do with a child or non-native speaker. Thus, users conversing with a pedagogical agent are implicitly trained to shape their behavior to suit the technology rather than shaping the technology. For young learners, particularly among populations that have been historically excluded from technology fields, this limits agency and reinforces marginalizing power structures [9]. This project combines a conversational agent with ideas of agentic engagement to help middle-school-aged children learn computational thinking. Agentic engagement is defined as students’ constructive contribution into the flow of instruction and includes behaviors such as expressing interests, preferences, and opinions. It has been positively correlated to learning performance and motivation [7, 8]. Combined with a culturally responsive curriculum (CRC), agentic engagement may help to foster an agentic relationship with technology. Our system encourages learners to engage agentically by using programming constructs to change the agent’s vocabulary, recognizing the intent behind a user utterance (an invocation), and defining the action the agent will take to respond to an invocation. Students use computational thinking concepts such as pattern recognition, abstraction, and decomposition to convert ideas into commands for the dialog system and to understand which of their ideas can’t be programmed with the technology as presented. They learn both to personalize the system today and to see the agent as a technosocial construct that they can shape in the future.  Programming can be accomplished either using Google’s Blockly visual programming tool (https://developers.google.com/blockly) or through conversation with the agent itself. The agent is embodied as a robot character, so agent actions can be verbal, physical, or both. Through social dialog with the agent, learners reflect on how computational thinking is relevant to themselves and their communities as part of a CRC, building on the work of Stewart et. al. [10]. For example, learners may be asked to reflect on the relationship between greeting behaviors and identity. After designing a greeting interaction, learners program the dialog system to achieve the greeting. Then learners may be asked to imagine how they might hypothetically enhance the dialog system to make it even more capable of implementing their preferences. In parallel to the development of the dialog system and curriculum, we will also adapt Reeve’s agentic engagement instrument [7] for CRC. Our contributions will include this instrument, insights into the relationship between agentic engagement and an agentic relationship with technology, and insights into how a programmable dialog system impacts agentic engagement and learning computational thinking.},
booktitle = {Proceedings of the 17th ACM Conference on International Computing Education Research},
pages = {423–424},
numpages = {2},
keywords = {agency, agentic engagement, culturally responsive curriculum, dialog systems},
location = {Virtual Event, USA},
series = {ICER 2021}
}

@article{10.1145/3440953.3440957,
title = {Computing4Change selects new cohort},
year = {2020},
issue_date = {October 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {9},
number = {1},
url = {https://doi.org/10.1145/3440953.3440957},
doi = {10.1145/3440953.3440957},
abstract = {Computing4Change (C4C) is a competition for students from diverse disciplines and backgrounds to work in teams in applying data analysis and computational thinking to social challenges. Colocated with SC, C4C's new cohort will participate virtually in 2020.},
journal = {ACM SIGHPC Connect},
month = dec,
pages = {3},
numpages = {1}
}

@inproceedings{10.1145/3162087.3162102,
author = {Budinsk\'{a}, Lucia and Mayerov\'{a}, Karol\'{\i}na},
title = {Graph Tasks in Bebras Contest: What does it have to do with gender?},
year = {2017},
isbn = {9781450363389},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3162087.3162102},
doi = {10.1145/3162087.3162102},
abstract = {Bebras contest has been part of Slovak informatics in schools for 10 years, making contestants familiar with information technologies, computer science concepts and improving their digital skills and computational thinking. In this article we take a look at task group which connects computer science concepts with computational thinking - graph tasks (for example trees, graphs, square grids, graph algorithms...). We focused on the three lowest categories of the Slovak contest, which include pupils of the whole primary school (aged 8 to 15) and analysed the tasks of the last four years. We used both qualitative and quantitative data analysis research methods. Task were divided into subcategories which were further analysed, focusing on identification of the specifics of the tasks in which there were significant differences between boys and girls. Using comparative analysis, it was found that boys are better in tasks with simple (relatively abstract) representation of the structure which is described by a larger amount of text, but the main point of the task is to identify the problem and create or uncover a strategy for finding a solution. Girls' performance is better in tasks that have less text, relatively more complicated representation of the structure and are focused on simple operations at graphs or reading them.},
booktitle = {Proceedings of the 6th Computer Science Education Research Conference},
pages = {83–90},
numpages = {8},
keywords = {Bebras contest, computational thinking, gender differences, graph tasks, visual literacy},
location = {Helsinki, Finland},
series = {CSERC '17}
}

@inproceedings{10.1145/3626253.3635500,
author = {Oh, Diana Dajung and Rich, Kathryn M. and Bosch-Wilson, Kathleen L. and Cunningham, Heather L.},
title = {Motivating and Increasing the Relevance of Elementary Computer Science in Rural Communities: Exploring Elementary Teacher Perspectives in Idaho},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635500},
doi = {10.1145/3626253.3635500},
abstract = {The Idaho Elementary Computer Science (CS) Collaborative (IECC) is a researcher-practitioner partnership dedicated to understanding how to better support the predominately rural districts in Idaho to implement elementary CS education. As part of the IECC's work, we conducted a survey of elementary teachers across the state. This poster will present our initial findings. Two of the research questions we addressed via the survey are: (1) What factors would motivate Idaho elementary teachers to pursue professional development (PD) related to CS? (2) What are elementary teachers' perceptions of the value of connecting CS education to rural community economies and industries? Descriptive analyses of 309 survey responses suggest that about three-quarters of elementary teachers reported that the following factors would be at least somewhat influential in their decisions to pursue CS PD: a K-5 computational thinking requirement, a district-wide CS planning staff, a pathway for elementary teachers to earn a certification in CS teaching, and a way to request CS PD funding. Few (9\%) Idaho elementary teachers found that the perception of a disconnect between CS education and rural community interests was a significant barrier to elementary CS education. Even so, over 70\% of them were moderately to strongly interested in mechanisms for connecting their CS education efforts to rural community industries through guest speakers and industry partnerships. The poster will discuss the implications of these and other emerging findings from the teacher survey, as well as IECC's related surveys of Idaho district superintendents and elementary school principals.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1768–1769},
numpages = {2},
keywords = {computer science education, elementary computer science, rural communities},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3328778.3372653,
author = {Smith, Andy and Mott, Bradford and Taylor, Sandra and Hubbard Cheuoua, Aleata and Minogue, James and Oliver, Kevin and Ringstaff, Cathy},
title = {Designing Block-Based Programming Language Features to Support Upper Elementary Students in Creating Interactive Science Narratives},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3372653},
doi = {10.1145/3328778.3372653},
abstract = {Recent years have seen a growing recognition of the importance of enabling K-12 students to engage in computational thinking, particularly in elementary grades where students' dispositions toward STEM are developing. Block-based programming has emerged as an effective tool for engaging these novice learners in computational thinking. At the same time, digital storytelling has emerged as a promising avenue for creating motivating problem-solving scenarios that engage students in science investigations. Although block-based programming and digital storytelling are in many ways synergistic, there is a lingering question of how to design block-based languages at an age-appropriate level to enable effective and engaging storytelling. In this work, we review design principles from prior block-based and digital storytelling systems as well as propose the design of block-based programming language features to enable the creation of rich, interactive science narratives by upper elementary students.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1327},
numpages = {1},
keywords = {block-based programming, digital storytelling},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3316480.3325513,
author = {Kitagawa, Midori and Fishwick, Paul and Kesden, Michael and Urquhart, Mary and Guadagno, Rosanna and Jin, Rong and Tran, Ngoc and Omogbehin, Erik and Prakash, Aditya and Awaraddi, Priyanka and Hale, Baily and Suura, Ken and Raj, Aniket and Stanfield, James and Vo, Henry},
title = {Scaffolded Training Environment for Physics Programming (STEPP): Modeling High School Physics using Concept Maps and State Machines},
year = {2019},
isbn = {9781450367233},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3316480.3325513},
doi = {10.1145/3316480.3325513},
abstract = {We are a year into the development of a software tool for modeling and simulation (M&amp;S) of 1D and 2D kinematics consistent with Newton's laws of motion. Our goal has been to introduce modeling and computational thinking into learning high-school physics. There are two main contributions from an M&amp;S perspective: (1) the use of conceptual modeling, and (2) the application of Finite State Machines (FSMs) to model physical behavior. Both of these techniques have been used by the M&amp;S community to model high-level "soft systems" and discrete events. However, they have not been used to teach physics and represent ways in which M&amp;S can improve physics education. We introduce the NSF-sponsored STEPP project along with its hypothesis and goals. We also describe the development of the three STEPP modules, the server architecture, the assessment plan, and the expected outcomes.},
booktitle = {Proceedings of the 2019 ACM SIGSIM Conference on Principles of Advanced Discrete Simulation},
pages = {127–136},
numpages = {10},
keywords = {computational thinking, concept maps, finite state machines, high school, human computer interaction, modeling, physics, programming, scaffolding, simulation, stem.},
location = {Chicago, IL, USA},
series = {SIGSIM-PADS '19}
}

@article{10.1145/3132087,
author = {Denning, Peter J.},
title = {Computational design},
year = {2017},
issue_date = {August 2017},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2017},
number = {August},
url = {https://doi.org/10.1145/3132087},
doi = {10.1145/3132087},
abstract = {Computational thinking refers to a deliberative process that finds a computational solution for a concern. Computational doing refers to use of computation and computational tools to address concerns. Computational design refers to creating new computational tools and methods that are adopted by the members of a community to address their concerns. Unfortunately, the definitions of both "thinking" and "doing" are fuzzy and have allowed misconceptions about the nature of algorithms. Fortunately, it is possible to eliminate the fuzziness in the definitions by focusing on computational design, which is at the intersection between thinking and doing. Computational design is what we are really after and would be a good substitute for computational thinking and doing.},
journal = {Ubiquity},
month = aug,
articleno = {2},
numpages = {9}
}

@inproceedings{10.1145/3408877.3439567,
author = {Bell, Amanda},
title = {Taking Up Opportunities to Learn in a Computer Science Professional Development for Middle School Teachers},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3439567},
doi = {10.1145/3408877.3439567},
abstract = {This paper reports on the first year of teacher PD from an ongoing project designing to integrate computational thinking in middle school mathematics classrooms. The analysis investigates how teachers' prior dispositions toward programming influenced their behaviors in the PD. Two case studies illustrate that teachers' engagement and learning were affected not just by our designs, but also by the knowledge and beliefs teachers brought with them.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {1338},
numpages = {1},
keywords = {case study, dispositions, professional development, teaching},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3328778.3366839,
author = {Ahmed, Gashawa and Nouri, Jalal and Zhang, LeChen and Nor\'{e}n, Eva},
title = {Didactic Methods of Integrating Programming in Mathematics in Primary School: Findings from a Swedish National Project},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366839},
doi = {10.1145/3328778.3366839},
abstract = {The association between mathematics and programming in an educational context is not new. Today, programming has been introduced into curricula worldwide for younger children. In the Swedish case, primary school teachers are expected to integrate programming in mathematics education from autumn 2018. However, Swedish teachers' knowledge of programming and programming didactics is limited. Meanwhile, there is little research on K-9 programming education. This has led to the dilemma that the mathematics teachers have limited support in didactic knowledge and good examples. This study reports on a teacher professional development project in programming. More specifically, teachers used Lesson Study to plan, execute, and evaluate lessons that integrated programming into various school subjects in elementary school. This study analyzed the didactic strategies developed in 10 lesson studies, as well as mapped the opportunities and challenges of pupils' learning in the mathematics subject. The result was the identification of three didactic strategies, which were analog programming, robot programming and block programming, as well as 11 didactic methods applied within these strategies. The paper contributes with examples of the didactic methods that teachers have developed and evaluated using lesson study. The paper further provides insights on how teachers can take progression into account by applying the three didactic strategies. At last but not least, the study shows a great need for teachers to develop computational thinking abilities.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {261–267},
numpages = {7},
keywords = {compulsory education, computational thinking, didactic strategies, mathematics, programming},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3689050.3705972,
author = {Matthews, Sarah and Nicholas, Maria and Paatsch, Louise and Kervin, Lisa and Wyeth, Peta},
title = {Wobblies: Designing Intentional Playthings with Young Children},
year = {2025},
isbn = {9798400711978},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3689050.3705972},
doi = {10.1145/3689050.3705972},
abstract = {This paper analyses a novel tangible technology in early childhood environments as a boundary object. Objects in early childhood environments often share space between adults’ and children's objectives. By considering these objects as boundary objects, designers are led to explore how children appropriate objects for playful learning activities beyond adult objectives. This paper discusses Wobblies (see Figure 1), a novel technology probe, to interrogate how a socially-motivated design with conditional and positional interactive behaviour was understandable to children, and how they appropriated the probe in playful activities. We deployed the probe in a rural Australian preschool in a free-play environment. Initial observational findings show that the children understood the procedure of the interactions and moved from exploring to constructive play activities.},
booktitle = {Proceedings of the Nineteenth International Conference on Tangible, Embedded, and Embodied Interaction},
articleno = {55},
numpages = {7},
keywords = {Computational Thinking, Play, Tangible Technology, Young Children},
location = {
},
series = {TEI '25}
}

@inproceedings{10.1145/3641555.3705015,
author = {Hutchins, Nicole M. and Chandler, Latoya and Lin, Yuhan and McKenna, Jason and DeFoe, Aimee and Israel, Maya},
title = {AI Literacy for Young Learners: A Co-Designed Robotics Unit for Students to Discover the World Beyond Human Senses},
year = {2025},
isbn = {9798400705328},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641555.3705015},
doi = {10.1145/3641555.3705015},
abstract = {This demo introduces a hands-on robotics module designed to cultivate AI literacy in elementary students through computational thinking and robotics. Co-designed with 20 elementary school teachers and instructional coaches, the module helps students differentiate between artificial intelligence and human intelligence, focusing on the AI4K12 Big Idea of Perception, and specifically how our senses differ from a robot's sensors. The centerpiece of the curriculum is the "alien planet" task, where students program a robot to explore an unseen planet created by a peer, using its sensors to identify objects like "aliens" (green), "water" (blue), and "unique materials" (red). This activity not only builds critical thinking and problem-solving skills but also introduces foundational AI concepts, such as how machines perceive the world differently than humans. By connecting to other subjects like art (e.g., hue values) and linking to students' real-world experiences, the module offers a truly interdisciplinary and relevant approach to early AI education.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1734},
numpages = {1},
keywords = {artificial intelligence, elementary education, robotics},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@inproceedings{10.1145/3300115.3309512,
author = {Zhang, Yuanlin and Wang, Jianlan and Bolduc, Fox and Murray, William G.},
title = {LP Based Integration of Computing and Science Education in Middle Schools},
year = {2019},
isbn = {9781450362597},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3300115.3309512},
doi = {10.1145/3300115.3309512},
abstract = {There is a consensus on integrating computing with STEM teaching in K-12. However, very little is known about the integration. In this paper, we propose a novel framework for integrating science and computational thinking teaching using Logic Programming. We then develop and implement two 8-session integration modules on chemistry and physics for 6th and 7th graders. Pre- and post- tests, class observations and interviews show the feasibility of the framework in terms of 1) development and implementation of the modules, and 2) the students' learning outcomes on science content and Computational Thinking, and their acceptance of the integration.},
booktitle = {Proceedings of the ACM Conference on Global Computing Education},
pages = {44–50},
numpages = {7},
location = {Chengdu,Sichuan, China},
series = {CompEd '19}
}

@inproceedings{10.1145/3287324.3287368,
author = {Vogel, Sara and Hoadley, Christopher and Ascenzi-Moreno, Laura and Menken, Kate},
title = {The Role of Translanguaging in Computational Literacies: Documenting Middle School Bilinguals' Practices in Computer Science Integrated Units},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3287368},
doi = {10.1145/3287324.3287368},
abstract = {Bilingual education has described a process called translanguaging by which students use linguistic resources across and beyond multiple named languages to learn. Here, we examine how bilingual learners translanguage while learning computer science. These middle schoolers participated in a curricular intervention which infused computational thinking into their Spanish-English bilingual language arts class. Through a descriptive qualitative methodology, we document classroom moments supporting four claims: 1) students' translanguaging blurs linguistic, disciplinary, and modal boundaries, 2) computational literacies are intertwined with students' other literacies, 3) students' attitudes about language and the contexts around them play a role in their translanguaging, and 4) students translanguage to engage in specific CT practices.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {1164–1170},
numpages = {7},
keywords = {bilinguals, computational literacies, computer science for all, english language learners, middle school, translanguaging},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3206157.3206170,
author = {Jin, Lan and Su, Ying},
title = {The Teaching Reform of Integration of Theory and Practice with Interest Leading and Ability Training},
year = {2018},
isbn = {9781450363587},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3206157.3206170},
doi = {10.1145/3206157.3206170},
abstract = {The fundamental of programming course is a professional basic course offered by institutions of higher learning, and C language is usually chosen as the programming language to help cultivate students' comprehensive quality and ability. Taking the fundamental of programming course as an example, aiming at the problems existing in traditional theory teaching and practice teaching, it proposes the theoretical teaching reform that stimulates students' interest in learning and develops the ability of computational thinking, constructs stage and hierarchical practice teaching system, improves continuously teaching methods and introduces the mobile cloud platform to assist teaching. The practice has proved that the students' comprehensive ability has been improved and the teaching effect has been achieved.},
booktitle = {Proceedings of the 2018 International Conference on Big Data and Education},
pages = {116–120},
numpages = {5},
keywords = {comprehensive ability, computational thinking, fundamental of programming, interest in learning, mobile cloud platform, practice teaching system},
location = {Honolulu, HI, USA},
series = {ICBDE '18}
}

@inproceedings{10.1145/3408877.3432482,
author = {Skuratowicz, Eva and Vanderberg, Maggie and Hung, Eping E. and Krause, Gladys and Bradley, Dominique and Wilson, Joseph P.},
title = {I Felt Like We Were Actually Going Somewhere: Adapting Summer Professional Development for Elementary Teachers to a Virtual Experience During COVID-19},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432482},
doi = {10.1145/3408877.3432482},
abstract = {In fall 2019, the National Science Foundation awarded Southern Oregon University a two-year Computer Science for All Researcher Practitioner Partnership grant focused on integrating computational thinking (CT) into the K'5 instruction of general elementary and elementary bilingual teachers. This experience report highlights the process of transitioning one essential component of the project an elementary teacher summer institute (SI) from in-person to online due to COVID-19. This report covers the approach the team took to designing the SI to work virtually, the challenges encountered, the experiences of the 15 teachers involved through observations and surveys, and the opportunities for refinement. This report will be of potential interest for other computer science (CS) education researchers who also may be working with elementary teachers to incorporate CS and CT activities into their instruction.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {739–745},
numpages = {7},
keywords = {covid-19, elementary teachers, integrating computational thinking, teacher professional development, virtual engagement},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3545945.3569869,
author = {Ojeda-Ramirez, Santiago and Tsan, Jennifer and Eatinger, Donna and Jacob, Sharin and Saito-Stehberger, Dana and Franklin, Diana and Warschauer, Mark},
title = {Describing Elementary Students' Spheres of Influence in Scratch 'About Me' Projects},
year = {2023},
isbn = {9781450394314},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545945.3569869},
doi = {10.1145/3545945.3569869},
abstract = {Researchers and practitioners have worked to bring computer science to all students. However, CS is still an inequitable field. When developing curricula, we must account for the importance of connecting the lives and identities of historically marginalized students with instructional materials. We examine the knowledge and experiences that elementary (age 9-10) students drew upon to implement an open-ended programming assignment about themselves. We coded the Scratch projects of 189 students to investigate what aspects of their lives students reference, and how they use various modalities in Scratch to create digital media products about themselves. In our data, we found that the most common spheres portrayed were identity, hobbies and leisure, and interests. When expressing their identities, students narrated their experiences, expressed consciousness about their skills, connected to the user via their interests, and sometimes discussed equity. Additionally, our findings add to previous literature on Scratch as an effective platform for digital media production. In particular, we found that students used dialogue, images, sound, and the title to represent their spheres of influence through programming multimedia and interactive projects. This work has implications for the development of curricula and teaching guides for upper elementary students courses on computational thinking. Spheres of influence could inform researchers on the most influential aspects of students life in a specific context, providing elements for creating culturally relevant and interest-based materials and lessons.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
pages = {333–339},
numpages = {7},
keywords = {digital media, identity, k-5, scratch, spheres of influence},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3300115.3309527,
author = {Lytle, Nicholas and Catet\'{e}, Veronica and Dong, Yihuan and Boulden, Danielle and Akram, Bita and Houchins, Jennifer and Barnes, Tiffany and Wiebe, Eric},
title = {CEO: A Triangulated Evaluation of a Modeling-Based CT-Infused CS Activity for Non-CS Middle Grade Students},
year = {2019},
isbn = {9781450362597},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3300115.3309527},
doi = {10.1145/3300115.3309527},
abstract = {With the increased demand for introducing computational thinking (CT) in K-12 classrooms, educational researchers are developing integrated lesson plans that can teach CT fundamentals in non-computing specific classrooms. Although these lessons reach more students through the core curriculum, proper evaluation methods are needed to ensure the quality of the design and integration. As part of a research practice partnership, we work to infuse research-backed curricula into science courses. We find a three-pronged approach of evaluation can help us make better decisions on how to improve experimental curricula for active classrooms. This CEO model uses three data sources (student code traces, exit ticket responses, and field observations) as a triangulated approach that can be used to identify programming behavior among novice developers, preferred task ordering for the assignment, and scaffolding recommendations to teachers. This approach allows us to evaluate the practical implementations of our initiative and create a focused approach for designing more effective lessons.},
booktitle = {Proceedings of the ACM Conference on Global Computing Education},
pages = {58–64},
numpages = {7},
keywords = {modeling and simulation, computational thinking, assessment},
location = {Chengdu,Sichuan, China},
series = {CompEd '19}
}

