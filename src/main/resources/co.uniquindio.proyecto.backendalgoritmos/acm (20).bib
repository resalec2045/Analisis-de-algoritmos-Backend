@article{10.1145/2676660,
author = {Yuen, Timothy T. and Robbins, Kay A.},
title = {A Qualitative Study of Students' Computational Thinking Skills in a Data-Driven Computing Class},
year = {2014},
issue_date = {February 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {14},
number = {4},
url = {https://doi.org/10.1145/2676660},
doi = {10.1145/2676660},
abstract = {Critical thinking, problem solving, the use of tools, and the ability to consume and analyze information are important skills for the 21st century workforce. This article presents a qualitative case study that follows five undergraduate biology majors in a computer science course (CS0). This CS0 course teaches programming within a data-driven context and is part of a university-wide initiative to improve students' quantitative scholarship. In this course, students learn computing concepts and computational thinking by writing programs in MATLAB that compute with data, by performing meaningful analyses, and by writing about the results. The goal of the study reported here is to better understand the thought processes students use in such a data-driven approach. Findings show that students engage in an ongoing organizational process to understand the structure of the data. The computational and visualization tasks appear to be closely linked, and the visualization component appears to provide valuable feedback for students in accomplishing the programming tasks.},
journal = {ACM Trans. Comput. Educ.},
month = dec,
articleno = {27},
numpages = {19},
keywords = {Computational science and science education}
}

@article{10.5555/2184451.2184486,
author = {Morreale, Patricia and Goski, Catherine and Jimenez, Luis and Stewart-Gardiner, Carolee},
title = {Measuring the impact of computational thinking workshops on high school teachers},
year = {2012},
issue_date = {June 2012},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {27},
number = {6},
issn = {1937-4771},
abstract = {Computational thinking knowledge is used to develop solutions for computational problems, such as those found in mathematics and computer science. Over the past several years, workshops on computational thinking and computer science tools have been provided to high school teachers, most recently as part of Google's Computer Science for High School (CS4HS) initiative. The lasting impact of these workshops on the high school teachers and their students after the teacher returns to the classroom is not well known. The computational thinking knowledge and tools of high school teachers in a regional area of the U. S. was assessed during two workshops, one held several months after the other, to determine the utility and benefit, if any, of the workshops for the teachers and their students. The results of this research contribute to understanding the perception of computational thinking and computer science among high school teachers, as well as to the identification of the best tools and resources which high school teachers are most likely to use and which can be used to implement computational thinking in core curriculum standards, including mathematics.},
journal = {J. Comput. Sci. Coll.},
month = jun,
pages = {151–157},
numpages = {7}
}

@inproceedings{10.1145/3255047,
author = {Javidi, Giti},
title = {Session details: Focus on K-12: outreach and computational thinking},
year = {2014},
isbn = {9781450326056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3255047},
doi = {10.1145/3255047},
booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '14}
}

@article{10.1145/2727126,
author = {Walker, Henry M.},
title = {Computational thinking in a non-majors CS course requires a programming component},
year = {2015},
issue_date = {March 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {6},
number = {1},
issn = {2153-2184},
url = {https://doi.org/10.1145/2727126},
doi = {10.1145/2727126},
journal = {ACM Inroads},
month = feb,
pages = {58–61},
numpages = {4},
keywords = {programming, pedagogy, non-majors, introductory course}
}

@article{10.1145/1516046.1516054,
author = {Denning, Peter J.},
title = {The profession of ITBeyond computational thinking},
year = {2009},
issue_date = {June 2009},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {52},
number = {6},
issn = {0001-0782},
url = {https://doi.org/10.1145/1516046.1516054},
doi = {10.1145/1516046.1516054},
abstract = {If we are not careful, our fascination with "computational thinking" may lead us back into the trap we are trying to escape.},
journal = {Commun. ACM},
month = jun,
pages = {28–30},
numpages = {3}
}

@article{10.1145/1929887.1929905,
author = {Barr, Valerie and Stephenson, Chris},
title = {Bringing computational thinking to K-12: what is Involved and what is the role of the computer science education community?},
year = {2011},
issue_date = {March 2011},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2},
number = {1},
issn = {2153-2184},
url = {https://doi.org/10.1145/1929887.1929905},
doi = {10.1145/1929887.1929905},
abstract = {The process of increasing student exposure to computational thinking in K-12 is complex, requiring systemic change, teacher engagement, and development of signifi cant resources. Collaboration with the computer science education community is vital to this effort.},
journal = {ACM Inroads},
month = feb,
pages = {48–54},
numpages = {7},
keywords = {cross-disciplinary computing, computational thinking, K-12 curriculum, K-12 CS Education}
}

@inproceedings{10.1145/1734263.1734345,
author = {Wolz, Ursula and Stone, Meredith and Pulimood, Sarah M. and Pearson, Kim},
title = {Computational thinking via interactive journalism in middle school},
year = {2010},
isbn = {9781450300063},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1734263.1734345},
doi = {10.1145/1734263.1734345},
abstract = {To address the critical shortage of students entering computing fields, as well as broaden participation in computing, we present a summer and afterschool program in Interactive Journalism through which middle school students and their teachers develop an appreciation for and competence in computational thinking. We report on the outcomes of our first year in which three middle school language arts teachers, a technology teacher and a guidance counselor collaborate with college faculty to publish a school magazine of the future. Students and their teachers research and conduct interviews to develop news stories that are then presented as story packages with text, video, and procedural animations in Scratch. Results of formal data collection show changes in students' perceptions of what it means to program, as well as their emerging confidence in their ability to design computational solutions and to program.},
booktitle = {Proceedings of the 41st ACM Technical Symposium on Computer Science Education},
pages = {239–243},
numpages = {5},
keywords = {writing and computing, scratch, k-12 cs education, computational thinking, broadening participation in computing},
location = {Milwaukee, Wisconsin, USA},
series = {SIGCSE '10}
}

@inproceedings{10.1145/3027385.3029440,
author = {Grover, Shuchi and Bienkowski, Marie and Basu, Satabdi and Eagle, Michael and Diana, Nicholas and Stamper, John},
title = {A framework for hypothesis-driven approaches to support data-driven learning analytics in measuring computational thinking in block-based programming},
year = {2017},
isbn = {9781450348706},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3027385.3029440},
doi = {10.1145/3027385.3029440},
abstract = {K-12 classrooms use block-based programming environments (BBPEs) for teaching computer science and computational thinking (CT). To support assessment of student learning in BBPEs, we propose a learning analytics framework that combines hypothesis- and data-driven approaches to discern students' programming strategies from BBPE log data. We use a principled approach to design assessment tasks to elicit evidence of specific CT skills. Piloting these tasks in high school classrooms enabled us to analyze student programs and video recordings of students as they built their programs. We discuss a priori patterns derived from this analysis to support data-driven analysis of log data in order to better assess understanding and use of CT in BBPEs.},
booktitle = {Proceedings of the Seventh International Learning Analytics \&amp; Knowledge Conference},
pages = {530–531},
numpages = {2},
location = {Vancouver, British Columbia, Canada},
series = {LAK '17}
}

@article{10.5555/1619221.1619222,
author = {Astrachan, Owen},
title = {A new way of thinking about computational thinking},
year = {2009},
issue_date = {October 2009},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {25},
number = {1},
issn = {1937-4771},
abstract = {Computational Thinking has emerged as an enduring metaphor in teaching and thinking about Computer Science since Jeanette Wing brought the term to our attention in a 2006 CACM article. Computational thinking involves abstraction, but a definition that is too abstract does not help in explaining computational thinking to someone who doesn't already have an intuitive idea of what it is:},
journal = {J. Comput. Sci. Coll.},
month = oct,
pages = {6},
numpages = {1}
}

@inproceedings{10.1145/1508865.1508932,
author = {Qin, Hong},
title = {Teaching computational thinking through bioinformatics to biology students},
year = {2009},
isbn = {9781605581835},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1508865.1508932},
doi = {10.1145/1508865.1508932},
abstract = {Modern biology has transformed from an insular entity into an interdisciplinary science, which in turn demands interdisciplinary and cross-disciplinary training for future work force in biology and life sciences. Computational thinking is a way of thinking that uses concepts and methodologies of computing to address questions in a broad range of subjects, and as such, computational thinking offers an important skill set in modern sciences. Despite its importance, the concept of computational thinking has generally been side-stepped in undergraduate biology education. Many students in life sciences are often weak in quantitative/computing skills and tend to avoid computing-orient courses. To address these issues, we incorporated computational thinking into a bioinformatics course for undergraduate life science majors. We developed comprehensive computer laboratory exercises that offer hands-on learning experience for the targeted student pool, and employed peer-assisted collaborative learning environment. Preliminary results of these explorative efforts will be helpful for others to teach computational thinking to biology students.},
booktitle = {Proceedings of the 40th ACM Technical Symposium on Computer Science Education},
pages = {188–191},
numpages = {4},
keywords = {life sciences, computational thinking, bioinformatics},
location = {Chattanooga, TN, USA},
series = {SIGCSE '09}
}

@article{10.1145/1539024.1508932,
author = {Qin, Hong},
title = {Teaching computational thinking through bioinformatics to biology students},
year = {2009},
issue_date = {March 2009},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {41},
number = {1},
issn = {0097-8418},
url = {https://doi.org/10.1145/1539024.1508932},
doi = {10.1145/1539024.1508932},
abstract = {Modern biology has transformed from an insular entity into an interdisciplinary science, which in turn demands interdisciplinary and cross-disciplinary training for future work force in biology and life sciences. Computational thinking is a way of thinking that uses concepts and methodologies of computing to address questions in a broad range of subjects, and as such, computational thinking offers an important skill set in modern sciences. Despite its importance, the concept of computational thinking has generally been side-stepped in undergraduate biology education. Many students in life sciences are often weak in quantitative/computing skills and tend to avoid computing-orient courses. To address these issues, we incorporated computational thinking into a bioinformatics course for undergraduate life science majors. We developed comprehensive computer laboratory exercises that offer hands-on learning experience for the targeted student pool, and employed peer-assisted collaborative learning environment. Preliminary results of these explorative efforts will be helpful for others to teach computational thinking to biology students.},
journal = {SIGCSE Bull.},
month = mar,
pages = {188–191},
numpages = {4},
keywords = {life sciences, computational thinking, bioinformatics}
}

@inproceedings{10.1145/1597990.1598021,
author = {Orr, Genevieve},
title = {Computational thinking through programming and algorithmic art},
year = {2009},
isbn = {9781605588346},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1597990.1598021},
doi = {10.1145/1597990.1598021},
abstract = {General education students can be taught computational thinking skills through courses that marry computer programming with algorithmic art. Algorithmic art is a varied and growing field where images are generated on the computer using mathematical and computer algorithms (see http://processing.org/exhibition/index.html for examples). Visually oriented students may be motivated to learn programming when it is taught in a context that is as much focused on art, artists, and design principles as it is on mathematics and programming. This presentation will include 1) a discussion of the challenges of teaching programming, 2) the role of teaching style, motivation, and programming environment, 3) a summary of common algorithms and their relation to design principles, and 4) examples of artwork that has been created by current artists.},
booktitle = {SIGGRAPH 2009: Talks},
articleno = {31},
numpages = {1},
location = {New Orleans, Louisiana},
series = {SIGGRAPH '09}
}

@article{10.1145/3105910,
author = {Grover, Shuchi and Basu, Satabdi and Bienkowski, Marie and Eagle, Michael and Diana, Nicholas and Stamper, John},
title = {A Framework for Using Hypothesis-Driven Approaches to Support Data-Driven Learning Analytics in Measuring Computational Thinking in Block-Based Programming Environments},
year = {2017},
issue_date = {September 2017},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {17},
number = {3},
url = {https://doi.org/10.1145/3105910},
doi = {10.1145/3105910},
abstract = {Systematic endeavors to take computer science (CS) and computational thinking (CT) to scale in middle and high school classrooms are underway with curricula that emphasize the enactment of authentic CT skills, especially in the context of programming in block-based programming environments. There is, therefore, a growing need to measure students’ learning of CT in the context of programming and also support all learners through this process of learning computational problem solving. The goal of this research is to explore hypothesis-driven approaches that can be combined with data-driven ones to better interpret student actions and processes in log data captured from block-based programming environments with the goal of measuring and assessing students’ CT skills. Informed by past literature and based on our empirical work examining a dataset from the use of the Fairy Assessment in the Alice programming environment in middle schools, we present a framework that formalizes a process where a hypothesis-driven approach informed by Evidence-Centered Design effectively complements data-driven learning analytics in interpreting students’ programming process and assessing CT in block-based programming environments. We apply the framework to the design of Alice tasks for high school CS to be used for measuring CT during programming.},
journal = {ACM Trans. Comput. Educ.},
month = aug,
articleno = {14},
numpages = {25},
keywords = {hypothesis-driven, evidence-centered design, data-driven, computational psychometrics, block-based programming environments, K-12 computer science education, Blended learning analytics}
}

@inproceedings{10.1145/3501712.3535277,
author = {Zikovitz, David and Holbert, Nathan and Correa, Isabel},
title = {The Secret Communication Panel: A Constructionist Communications Device for Developing Computational Thinking Skills in School-Age Children},
year = {2022},
isbn = {9781450391979},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3501712.3535277},
doi = {10.1145/3501712.3535277},
abstract = {Computational thinking skills have been shown to have a unique cross-curricular relevance. Developing these skills in children using constructionist design to deliver personally meaningful computational experiences could lead to improved dispositions and attitudes towards other forms of STEM learning. The Secret Communication Panel is a constructionist toy in the form of a secret communications device that allows children to create their own highly personalized forms of communication in a computational environment.},
booktitle = {Proceedings of the 21st Annual ACM Interaction Design and Children Conference},
pages = {637–640},
numpages = {4},
keywords = {constructionism, computational thinking, coding, Learning toy},
location = {Braga, Portugal},
series = {IDC '22}
}

@article{10.5555/2400161.2400180,
author = {Webb, Heidi},
title = {Engaging and motivating computing activities with computational thinking concepts you can use},
year = {2013},
issue_date = {January 2013},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {28},
number = {3},
issn = {1937-4771},
abstract = {Even before entering middle school students have been exposed to some of the conceptual methods and skill sets that underlie computational thinking (CT). For example, elementary school aged children begin using problem-solving and abstraction in Mathematics, English and Geography when they study word problems, learn about sentence structures and grammar rules, and work with maps. However, prior to middle school the problem sets tend to be concrete and scaffolded to aid the student in learning the foundations needed to work with complex problems. As children develop their cognitive capacities, they should be able to explore and learn about CT in a more abstract and generalizable fashion. However, when computing technology is added to the design and implementation of a solution it can be overwhelming for those who may not be comfortable turning to technology for answers. For this reason, problem solving can be difficult for young people who haven't learned the role technology may have in their lives now or in the future.},
journal = {J. Comput. Sci. Coll.},
month = jan,
pages = {102–103},
numpages = {2}
}

@article{10.5555/3512469.3512477,
author = {Brown-Gaines, Tisha},
title = {Visual sensor networks: analysis of environmental impacts via computational thinking},
year = {2021},
issue_date = {October 2021},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {37},
number = {1},
issn = {1937-4771},
abstract = {Visual Sensor Networks (VSNs) are comprised of camera nodes that are capable of acquiring, distributing, and processing images. Thus, providing rich information about a given event. However, image sensing is an extremely powerful electrical consuming mechanism, causing visual sensor networks to indirectly contribute to greenhouse gas emissions. As our society adopts emerging technologies central to the field of Internet of Things (IoTs) such as smart homes and smart surveillance systems, it is imperative to consider energy consumption and efficiency to create environmentally friendly technology. In this study, we will investigate the environmental footprint of visual sensors and develop a program that optimizes object tracking and energy efficiency via computational thinking. The energy consumption of a PixyCam2 will be measured with a multi-meter while performing several algorithms to analyze various metrics central to the visual sensor's functionality.},
journal = {J. Comput. Sci. Coll.},
month = oct,
pages = {71–77},
numpages = {7}
}

@inproceedings{10.1145/2445196.2445479,
author = {Sobolewska, Monika},
title = {Logistics of moving from computer fluency to computational thinking (abstract only)},
year = {2013},
isbn = {9781450318686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2445196.2445479},
doi = {10.1145/2445196.2445479},
abstract = {As the theme of the conference indicates, computing is changing and so is its pedagogy. In the meantime, many computer science departments teach computer fluency service courses required by their universities, colleges, or other departments, in which the content of the course becomes highly challenged by institutional constraints (e.g. class size, university computer literacy requirement, etc.). This birds-of-a-feather is designed to gather educators who have been teaching fluency courses or may be teaching such courses in the future, so that they can share their experiences, learn from one another, and discuss the most effective ways of affecting change and delivering the content they deem most appropriate.},
booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
pages = {751},
numpages = {1},
keywords = {non-majors, curriculum issues, computer literacy, computer fluency, computational thinking},
location = {Denver, Colorado, USA},
series = {SIGCSE '13}
}

@article{10.5555/1747137.1747148,
author = {Qualls, Jake A. and Sherrell, Linda B.},
title = {Why computational thinking should be integrated into the curriculum},
year = {2010},
issue_date = {May 2010},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {25},
number = {5},
issn = {1937-4771},
abstract = {Computational Thinking (CT) is an approach to problem solving that consolidates logic skills with core computer science concepts. This survey paper reviews recent efforts to integrate CT into primary, secondary and post-secondary curricula. The paper should prove beneficial to instructors interested in investigating this important topic.},
journal = {J. Comput. Sci. Coll.},
month = may,
pages = {66–71},
numpages = {6}
}

@inproceedings{10.1145/3255310,
author = {Henderson, Peter},
title = {Session details: Computational thinking},
year = {2007},
isbn = {1595933611},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3255310},
doi = {10.1145/3255310},
booktitle = {Proceedings of the 38th SIGCSE Technical Symposium on Computer Science Education},
location = {Covington, Kentucky, USA},
series = {SIGCSE '07}
}

@article{10.1145/3263098,
author = {Henderson, Peter},
title = {Session details: Computational thinking},
year = {2007},
issue_date = {March 2007},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {39},
number = {1},
issn = {0097-8418},
url = {https://doi.org/10.1145/3263098},
doi = {10.1145/3263098},
journal = {SIGCSE Bull.},
month = mar
}

@inproceedings{10.1145/1953163.1953242,
author = {Kafura, Dennis and Tatar, Deborah},
title = {Initial experience with a computational thinking course for computer science students},
year = {2011},
isbn = {9781450305006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1953163.1953242},
doi = {10.1145/1953163.1953242},
abstract = {Experience with the first offering of a computational thinking course for computer science (CT4CS) students is reported. The course is grounded in student interaction with fundamental, recurring concepts suggested by comparison with two sets of computer science principles. By using specialized, freely available tools and physical simulations it is possible to provide concrete, tangible learning experiences that neither require knowledge of nor the overhead of programming. Student end-of-term reflections indicate that the course deepened and broadened their understanding of computer science even when they had previously encountered a topic, and improved their computer science vocabulary.},
booktitle = {Proceedings of the 42nd ACM Technical Symposium on Computer Science Education},
pages = {251–256},
numpages = {6},
keywords = {pedagogy, curriculum, computational thinking, CS0},
location = {Dallas, TX, USA},
series = {SIGCSE '11}
}

