@inproceedings{10.1145/3328778.3366925,
author = {Sep\'{u}lveda-D\'{\i}az, Carla and Stuardo Rojas, Elson and Simmonds, Jocelyn and Gutierrez, Francisco J. and Hitschfeld, Nancy and Casanova, Cecilia and Sotomayor, Cecilia},
title = {Lessons Learned From Introducing Preteens in Parent-Led Homeschooling to Computational Thinking},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366925},
doi = {10.1145/3328778.3366925},
abstract = {Parents that homeschool their children ignore certain topics when they lack mastery or interest in them. Homeschool groups try to address this issue, cooperatively educating their children. We were contacted by such a group that wanted to introduce their children to computational thinking (CT). These children, aged 7-11, have showed an interest in technology, and use online educational resources. None of the parents felt capable of tutoring the group about CT. They also worried about losing control about how their children interact with technology. We report an intervention over 9 months to introduce eleven young homeschoolers to CT in a suburban environment, describing the impact on parent and children attitudes towards technology and CT. We conclude with three lessons: 1)~science-related activities should be used to introduce CT among homeschoolers, 2) "success'' is establishing a meaningful relationship with a homeschool group, and 3) activities designed for school children need to be adapted to the homeschooling context.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {65–71},
numpages = {7},
keywords = {young learners, homeschooling, computational thinking},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3144826.3145352,
author = {Dodero, Juan Manuel and Mota, Jos\'{e} Miguel and Ruiz-Rube, Iv\'{a}n},
title = {Bringing computational thinking to teachers' training: a workshop review},
year = {2017},
isbn = {9781450353861},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3144826.3145352},
doi = {10.1145/3144826.3145352},
abstract = {In recent years, several visual programming languages and tools are emerging, which allow young students to easily program applications. Particularly, the block-based language used by Scratch has been the standard in most school initiatives to introduce Computational thinking (CT) in courses unrelated to computing. However, CT competences are not specifically included in the curricula of many Higher Education degrees that future teachers of Primary and Secondary Education have to complete. This paper describes a workshop for teachers' training on CT. It is based on the block-based common language of Scratch, but focused on enhancing teachers' skills to develop mobile applications with a tool based on the MIT's AppInventor. This workshop provided some insights on the capabilities of future teachers in the use of programming tools1.},
booktitle = {Proceedings of the 5th International Conference on Technological Ecosystems for Enhancing Multiculturality},
articleno = {4},
numpages = {6},
keywords = {visual programming languages, mobile programming, Computational thinking},
location = {C\'{a}diz, Spain},
series = {TEEM 2017}
}

@inproceedings{10.1145/3287324.3287452,
author = {Musaeus, Line Have and Musaeus, Peter},
title = {Computational Thinking in the Danish High School: Learning Coding, Modeling, and Content Knowledge with NetLogo},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3287452},
doi = {10.1145/3287324.3287452},
abstract = {Computational thinking (CT) is emerging as an important theme in computer science and high school education. However, research is needed to inform high-school teachers how to foster students' development of CT in computer science and other subjects. Evidence suggests that agent-based modeling is a valuable way for students to learn CT in different subjects. This paper reports a teaching experiment where researchers, developers, and high school teachers collaborated to develop six NetLogo models. The models were used in nine Danish High Schools in the following four subjects: Biotechnology, chemistry, biology, and social science. Teachers and students had no or very limited experience with programming. Students build CT and content knowledge by using, modifying, and creating code in the models. This paper provides details for others to adopt the models and the underlying CMC framework, which integrates: Coding, Modeling, and Content. The paper evaluates the results from an open-ended questionnaire with all participating students (n=210) and semi-structured interviews with all teachers (n=15). Thematic analysis was applied to categorize the qualitative data. Results showed that students were able to use, modify, and create code in NetLogo that enabled them to develop CT and content knowledge. The CMC framework represents a fruitful way for teachers to design and teach and for students to tinker with learning CT.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {913–919},
numpages = {7},
keywords = {teacher professional development., k-12 education, educational intervention, computer models, computational thinking},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3374135.3385264,
author = {Beason, Kara and Fenwick, James B. and Norris, Cindy},
title = {Introducing Middle School Students to Computational Thinking with the CS First Curriculum},
year = {2020},
isbn = {9781450371056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3374135.3385264},
doi = {10.1145/3374135.3385264},
abstract = {Computational thinking (CT) is a set of concepts and problem-solving skills that are not only imperative for computer scientists, but important and applicable to nearly every discipline. CT skills are essential in a world where technology is ubiquitous. In the past decade, many efforts have been made to develop and evaluate computational thinking in primary and secondary students. Promoting CT skills in these young students can help reduce the underrepresentation of women and minorities in STEM careers since students who are exposed to CT at an early age are more likely to pursue a STEM discipline in college [18].This paper describes the COSMIC program, funded by Google's Tides Foundation, that introduces middle school students to CS and CT using the CS First curriculum and Scratch. The COSMIC activities spanned three years directly serving 700 students through 175 distinct events. Females comprised 51.1\% of the individuals served, and 10.2\% of those served were part of a minority group. The COSMIC activities allowed the researchers to investigate the effectiveness of the CS First curriculum. Using the Hairball-powered Dr. Scratch analysis tool on the curricular projects, the paper reports on the efficacy of the CS First curriculum in terms of its coverage of vital CT concepts and its success in transferring those concepts to middle school students.},
booktitle = {Proceedings of the 2020 ACM Southeast Conference},
pages = {10–17},
numpages = {8},
keywords = {STEM, computer science education, pedagogical tool, programming animations, software},
location = {Tampa, FL, USA},
series = {ACMSE '20}
}

@inproceedings{10.1145/3012430.3012490,
author = {Garc\'{\i}a-Pe\~{n}alvo, Francisco J. and Cruz-Benito, Juan},
title = {Computational thinking in pre-university education},
year = {2016},
isbn = {9781450347471},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3012430.3012490},
doi = {10.1145/3012430.3012490},
abstract = {Several countries have usually adopted several priorities for developing ICT competences from kindergarten to secondary education. Most of them are focused on the development of key competences and/or coding skills. Although coding may be very attractive for young students and a very good practice or experience, it could be more interesting to develop students' logical thinking skills and problem-solving skills throughout programming approaches or computational thinking. This is a very exciting challenge with lots of possibilities regarding coding, robots, mobiles devices, Arduino-based application, game-based learning and so on. Thus it is very important discuss the experiences that are being developed worldwide in specialized for a with researchers that are working on this field, such as for example European Union TACCLE 3 - Coding project. This track is devoted to identify, share and valorize best practices and experiences (including technological and methodological issues) that focused on the development of computational thinking and related skills in any level of pre-university education.},
booktitle = {Proceedings of the Fourth International Conference on Technological Ecosystems for Enhancing Multiculturality},
pages = {13–17},
numpages = {5},
keywords = {using logic, programming robots, controlling things, computational thinking skills and curriculum, computational thinking, coding skills throughout games, coding in schools, TACCLE 3},
location = {Salamanca, Spain},
series = {TEEM '16}
}

@inproceedings{10.1145/3170427.3188541,
author = {Rowe, Elizabeth and Asbell-Clarke, Jodi and Baker, Ryan and Gasca, Santiago and Bardar, Erin and Scruggs, Richard},
title = {Labeling Implicit Computational Thinking in Pizza Pass Gameplay},
year = {2018},
isbn = {9781450356213},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3170427.3188541},
doi = {10.1145/3170427.3188541},
abstract = {Players can build implicit understanding of challenging scientific concepts when playing digital science learning games [7]. In this study, we examine implicit computational thinking (CT) skills of 72 upper elementary and middle school students and 10 computer scientists playing a game called Pizza Pass. We report on the process of creating automated detectors to identify four CT skills from gameplay: problem decomposition, pattern recognition, algorithmic thinking, and abstraction. This paper reports on hand-labeled playback data obtaining acceptable inter-rater reliability and 100 gameplay features distilled from digital log data. In future work, we will mine these features to automatically identify the CT skills previously labeled by humans. These automated detectors of CT will be used to analyze gameplay data at scale and provide actionable feedback to teachers in real-time.},
booktitle = {Extended Abstracts of the 2018 CHI Conference on Human Factors in Computing Systems},
pages = {1–6},
numpages = {6},
keywords = {computational thinking, data mining, implicit learning, learning games},
location = {Montreal QC, Canada},
series = {CHI EA '18}
}

@inproceedings{10.1145/3059009.3072999,
author = {Palts, Tauno and Pedaste, Margus},
title = {Tasks for Assessing Skills of Computational Thinking},
year = {2017},
isbn = {9781450347044},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3059009.3072999},
doi = {10.1145/3059009.3072999},
abstract = {Thinking computationally has become an important part of many disciplines. In creating lesson plans for teaching computational thinking (CT), an instrument can be used to assess the development of CT. This poster presents the Bebras Challenge tasks for assessing two skills of CT: exploring and developing algorithms, and finding patterns.},
booktitle = {Proceedings of the 2017 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {367},
numpages = {1},
keywords = {school, computational thinking, assessing},
location = {Bologna, Italy},
series = {ITiCSE '17}
}

@article{10.5555/3282588.3282611,
author = {Kafura, Dennis and Bart, Austin Cory and Chowdhury, Bushra},
title = {A computational thinking course accessible to non-stem majors},
year = {2018},
issue_date = {December 2018},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {34},
number = {2},
issn = {1937-4771},
abstract = {We describe the content, pedagogy and technology of a computational thinking course. While open to students in all majors, in practice the course serves students in predominantly non-STEM majors. We have seen the positive impact on student motivation of the data science context used in the course and the pedagogical value of the "cohort" model of collaborative peer learning. The technology includes a scaffolded programming environment for accessing curated real-world data sets.},
journal = {J. Comput. Sci. Coll.},
month = dec,
pages = {157–163},
numpages = {7}
}

@inproceedings{10.1145/2998626.2998665,
author = {Espino, Elisenda Eva Espino and Gonz\'{a}lez, Carina Gonz\'{a}lez},
title = {Gender and Computational Thinking: Review of the literature and applications},
year = {2016},
isbn = {9781450341196},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2998626.2998665},
doi = {10.1145/2998626.2998665},
abstract = {Technologies of Information and Communication Technologies (ICT) have contributed significantly to the emergence of the Knowledge Society. However, there is a strong gender gap in the field of science and technology due to the influence of the male-centered culture that persists today. Computational thinking is presented as a way to develop in children from an early age the ability to solve problems, designing systems and understanding human behavior while using the fundamental concepts of computing. This factor allows girls to be in touch with technology in a fun and meaningful way; so as to balance the male and female presence in science and technology, achieving a more egalitarian system. In this article is presented a systematic review of the literature which indicates that few studies about computational thinking are working from a gender perspective, although some countries have already opted for teaching computer in the classroom. In addition, the review shows some methodologies which are using languages and suitable tools in order to work the computational thinking. Notwithstanding, It can be the basis for a proposal to integrate the gender perspective. In turn, it is committed to the creation of a methodological guide that encourages this teaching in national and international schools.},
booktitle = {Proceedings of the XVII International Conference on Human Computer Interaction},
articleno = {46},
numpages = {2},
keywords = {Review, Methodology, Gender, Computational Thinking},
location = {Salamanca, Spain},
series = {Interacci\'{o}n '16}
}

@inproceedings{10.1145/3308557.3308676,
author = {Chung, Cheng-Yu and Hsiao, I-Han},
title = {An exploratory study of augmented embodiment for computational thinking},
year = {2019},
isbn = {9781450366731},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3308557.3308676},
doi = {10.1145/3308557.3308676},
abstract = {The contiguity of physical and digital content of embodied learning has been shown to increase student's engagement in educational contexts. Applications with various kinds of physical interactions have been deployed to enhance the learning experiences in many engineering domains. However, even though computer science education (CSE) is one of zestful topics in the recent years, there are few studies focusing on the embodiment of CSE materials, by which the abstract and intangible concepts could be transformed into an intuitive affordance that utilizes sensorimotor experiences during the learning process. We propose an augmented embodiment mobile app designed for computational thinking (CT), specifically the debugging practices and abstraction concept, that makes use of gestures and augmented reality for learners to interact with the content. We examine the logic by the design framework for embodied learning and discuss potential extensions of multimodal analytics in such an application. Our preliminary user study in a middle school shows students' engagement in the application, however, it also reflected several design issues that need to be solved in the next iteration. The future plan of data analysis and experiments is also discussed.},
booktitle = {Companion Proceedings of the 24th International Conference on Intelligent User Interfaces},
pages = {37–38},
numpages = {2},
keywords = {augmented reality, computer science education, embodied learning, mobile computing, multimodal interfaces},
location = {Marina del Ray, California},
series = {IUI '19 Companion}
}

@inproceedings{10.1145/3369199.3369200,
author = {Leela, Soralak and Chookeaw, Sasithorn and Nilsook, Prachyanun},
title = {An Effective Microlearning Approach Using Living Book to Promote Vocational Students' Computational Thinking},
year = {2020},
isbn = {9781450372206},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3369199.3369200},
doi = {10.1145/3369199.3369200},
abstract = {The purpose of this study was to describe the effectiveness of using living books (mobile leaning and augmented reality) within the context of microlearning approach to promote vocational students' computational thinking. The participants were 97 vocational students that included experimental group (n=52) and control group (n=45) vocational college who enrolled in the basic of mathematics career in 2nd semester of academic year 2018. The instruments of this research include learning materials: mobile learning and AR book, the lesson plan of surface area and volume topic in basic mathematics career subject, pre and post-tests, and the computational thinking assessment. The results showed that the students' learning achievement of experimental group employed microlearning approach using living books, the control group employed traditional learning was statistically significant at level of .01. In addition, the result of students' computational thinking in the experimental group using of microlearning living book have been the computational thinking at the high level.},
booktitle = {Proceedings of the 3rd International Conference on Digital Technology in Education},
pages = {25–29},
numpages = {5},
keywords = {living book, Microlearning, Computational thinking},
location = {Yamanashi, Japan},
series = {ICDTE '19}
}

@inproceedings{10.1145/3314816,
author = {Ray, Meg},
title = {Session details: Paper Session: Computational Thinking 2},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3314816},
doi = {10.1145/3314816},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/2787622.2787736,
author = {Chowdhury, Bushra},
title = {Understanding Collaborative Computational Thinking},
year = {2015},
isbn = {9781450336307},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2787622.2787736},
doi = {10.1145/2787622.2787736},
abstract = {In this paper I discuss my doctoral research which aims to better understand collaborative computational thinking (CT). In order to be successful in the 21st century, skills such CT (understanding and applying computational concepts) are indispensable for people across all ages and disciplines. One can learn computational concepts by taking a traditional course offered in a school or by self-guided learning through an online platform. Whatever the form of learning, computational concepts can be difficult to fully comprehend for novices. Collaborative learning has been considered effective in reducing learner's anxiety and in helping struggling learners overcome common learning difficulties. The proposed dissertation study aims to investigate how collaboration impacts learning of CT across both classroom setting and in an online learning community. This paper briefly describes the motivation and outline of my proposed dissertation study, the overarching research questions, the data currently collected, and my data analysis methodologies.},
booktitle = {Proceedings of the Eleventh Annual International Conference on International Computing Education Research},
pages = {251–252},
numpages = {2},
keywords = {social interactions, novice learner, computational thinking, collaborative learning},
location = {Omaha, Nebraska, USA},
series = {ICER '15}
}

@article{10.1145/3344262,
author = {Bugayenko, Yegor and Guzdial, Mark},
title = {Why programmers should curb their enthusiasm, and thinking about computational thinking},
year = {2019},
issue_date = {September 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {62},
number = {9},
issn = {0001-0782},
url = {https://doi.org/10.1145/3344262},
doi = {10.1145/3344262},
abstract = {The Communications Web site, http://cacm.acm.org, features more than a dozen bloggers in the BLOG@CACM community. In each issue of Communications, we'll publish selected posts or excerpts.twitterFollow us on Twitter at http://twitter.com/blogCACMhttp://cacm.acm.org/blogs/blog-cacmYegor Bugayenko ponders the dangers of "hazardous enthusiasm," while Mark Guzdial considers whether the need to teach computational thinking can be "designed away."},
journal = {Commun. ACM},
month = aug,
pages = {10–11},
numpages = {2}
}

@inproceedings{10.1145/3159450.3159520,
author = {Ouyang, Youwen and Hayden, Katherine L. and Remold, Julie},
title = {Introducing Computational Thinking through Non-Programming Science Activities},
year = {2018},
isbn = {9781450351034},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3159450.3159520},
doi = {10.1145/3159450.3159520},
abstract = {Many programs offer informal experiences in programming for select students who may qualify or whose parents pay fees for attending. Integrating computational thinking (CT) in the formal classroom setting provides equal opportunities to develop valuable problem-solving skills for all students. However, such integration poses challenges since teachers may have limited experiences in computing and may be pressured by time constraints due to the need to cover Common Core and Next Generation Science Standards (NGSS) as well as district specific initiatives. A 2-year intervention has been designed to target upper elementary level self-contained classrooms to increase teachers' knowledge and ability for integrating CT into science lessons. Twenty teachers from four school districts in Southern California participated in the first year of the project's professional development activities. These schools have varying levels of diversity and socioeconomic status of student populations. Instead of using popular drag-and-drop programming tools such as Scratch or Tynker, the first year of the project focused on key CT concepts and helped teachers connect these concepts with skills important for student success in science activities. This paper reports on the study of the project's impact on student learning of key CT concepts among students from project classrooms. The main elements of the professional development are also described.},
booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
pages = {308–313},
numpages = {6},
keywords = {upper elementary grades, professional development, computational thinking, assessment},
location = {Baltimore, Maryland, USA},
series = {SIGCSE '18}
}

@inproceedings{10.1145/3356590.3356625,
author = {Barat\`{e}, Adriano and Ludovico, Luca A. and Mauro, Davide A.},
title = {A Web Prototype to Teach Music and Computational Thinking Through Building Blocks},
year = {2019},
isbn = {9781450372978},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3356590.3356625},
doi = {10.1145/3356590.3356625},
abstract = {This paper presents the recent evolution of a Web prototype originally conceived to teach music and computational thinking to preschool and primary school learners through a gamification approach. The software tool, called Legato, is based on the metaphor of building blocks, whose characteristics (e.g., position in space, shape, and color) can be associated with basic music parameters (e.g., pitch, rhythm, and timbre). Legato is a Web app written using standard languages, such as HTML5, CSS and JavaScript; besides, it adopts the Web MIDI API to produce sounds. The prototype is made publicly available for evaluation and use in an educational context.},
booktitle = {Proceedings of the 14th International Audio Mostly Conference: A Journey in Sound},
pages = {227–230},
numpages = {4},
keywords = {web audio, music education, computational thinking, building blocks},
location = {Nottingham, United Kingdom},
series = {AM '19}
}

@article{10.5555/2602724.2602733,
author = {Imberman, Susan P. and Sturm, Deborah and Azhar, Mohammad Q.},
title = {Computational thinking: expanding the toolkit},
year = {2014},
issue_date = {June 2014},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {29},
number = {6},
issn = {1937-4771},
abstract = {In this paper we describe a set of tools, LEGO® Mindstorms NXT, SCRATCH, App Inventor, and CS Unplugged, that was presented to teachers to support computational thinking curriculum initiatives. During a workshop sponsored by GOOGLE's CS4HS program, educators were given step-by-step instructions in the basics of each tool, along with a computational thinking activity/challenge that can be used in the classroom. Survey data from the workshop indicated that a breadth first, intensive introduction influenced educators to consider these tools. The educators cited deficient school resources as a possible barrier to implementation, but the introduction of the Raspberry Pi holds promise for mitigating this. Educators unanimously found the workshop useful and indicated that they are likely to include the tools in their classrooms},
journal = {J. Comput. Sci. Coll.},
month = jun,
pages = {39–46},
numpages = {8},
keywords = {robotics, computational thinking, app inventor, SCRATCH, LEGO® Mindstorms NXT, CS unplugged}
}

@inproceedings{10.1145/3328778.3366849,
author = {Basu, Satabdi and Rutstein, Daisy and Xu, Yuning and Shear, Linda},
title = {A Principled Approach to Designing a Computational Thinking Practices Assessment for Early Grades},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366849},
doi = {10.1145/3328778.3366849},
abstract = {In today's increasingly digital world, it is critical that all students learn to think computationally from an early age. Assessments of Computational Thinking (CT) are essential for capturing information about student learning and challenges. Several existing K-12 CT assessments focus on concepts like variables, iterations and conditionals without emphasizing practices like algorithmic thinking, reusing and remixing, and debugging. In this paper, we discuss the development of and results from a validated CT Practices assessment for 4th-6th grade students. The assessment tasks are multilingual, shifting the focus to CT practices, and making the assessment useful for students using different CS curricula and different programming languages. Results from an implementation of the assessment with about 15000 upper elementary students in Hong Kong indicate challenges with algorithm comparison given constraints, deciding when code can be reused, and choosing debugging test cases. These results point to the utility of our assessment as a curricular tool and the need for emphasizing CT practices in future curricular initiatives and teacher professional development.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {912–918},
numpages = {7},
keywords = {evidence-centered design, computational thinking, assessment},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3362789.3362881,
author = {Chaabi, Hasnaa and Azmani, Amina and Dodero, Juan Manuel},
title = {Analysis of the relationship between computational thinking and mathematical abstraction in primary education},
year = {2019},
isbn = {9781450371919},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3362789.3362881},
doi = {10.1145/3362789.3362881},
abstract = {The aim of this paper is to broaden our view on the relationship between Computational Thinking and the development of the abstraction skill applied to mathematics. It was aimed to reveal trends and new potential solutions to be explored in the teaching of mathematics. We carefully selected sixty-four papers related with the objective above cited. From which we inspected twenty-four discovering that abstraction is a key skill for mathematics and Computational Thinking. We also discovered that we need to define which type of abstraction are we going to work on together with choosing between the two ways of teaching CT: integrating it to the curricula or as an after-school program.},
booktitle = {Proceedings of the Seventh International Conference on Technological Ecosystems for Enhancing Multiculturality},
pages = {981–986},
numpages = {6},
keywords = {learning profiles, Thinking Skills, Mathematics Education Research, Computational Thinking, Basic Learnings, Abstraction, APOS Theory},
location = {Le\'{o}n, Spain},
series = {TEEM'19}
}

@inproceedings{10.1145/3408877.3432379,
author = {Sherwood, Heather and Yan, Wei and Liu, Ruohan and Martin, Wendy and Adair, Alexandra and Fancsali, Cheri and Rivera-Cash, Edgar and Pierce, Melissa and Israel, Maya},
title = {Diverse Approaches to School-wide Computational Thinking Integration at the Elementary Grades: A Cross-case Analysis},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432379},
doi = {10.1145/3408877.3432379},
abstract = {Elementary schools throughout the United States are attempting to integrate computational thinking (CT) into their instruction, often without guidance from research about effective approaches for achieving particular CT goals. This cross-case study investigated the school-wide integration of CT in three elementary schools in a large urban school district in the Northeast that has a district-led CS for All initiative. Data included interviews with teachers, professional development providers, and school administrators as well as surveys from teachers and classroom observations in each participating school. Findings revealed three distinct approaches to integration: (a) single teacher leader-driven model, (b) scaffolded professional development model, and (c) intensive coaching model. These approaches reflect the visions set by administrators and teachers, methods used by professional development providers, and cultures of each school. Across the case studies, common pedagogical approaches included strategic use of both unplugged and plugged activities with a range of computational tools, a focus on collaborative project-based learning, and the use of CT-specific academic language to anchor new CT learning within the academic disciplines. The study highlighted advantages and challenges within each integration approach with implications for schools considering CT integration.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {253–259},
numpages = {7},
keywords = {integration, elementary education, computational thinking, case study},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

