@inproceedings{10.1145/3328778.3366960,
author = {Alegre, Fernando and Underwoood, John and Moreno, Juana and Alegre, Mario},
title = {Introduction to Computational Thinking: A New High School Curriculum using CodeWorld},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366960},
doi = {10.1145/3328778.3366960},
abstract = {The Louisiana Department of Education partnered with the Gordon A. Cain Center at LSU to pilot a Computing High School Graduation Pathway. The first course in the pathway, Introduction to Computational Thinking (ICT), is designed to teach programming and reinforce mathematical practice skills of nine-grade students, with an emphasis on promoting higher order thinking. In 2017-18, about 200 students and five teachers participated in the pilot, in 2018-2019 the participation increased to 400 students, and in the current 2019-2020 year about 800 students in 11 schools are involved. After describing the course content and the teacher training, we briefly discuss the data we have collected in the last two years. The overall student reception of the course has been positive, but the course was categorized by most students as hard. The pre-post test content assessments show that students have learned not only the language, but also general principles of programming. Lessons learned during the pilot phase have motivated changes, such as emphasizing during Professional Development the need to provide timely feedback to students, provide detailed rubrics for the projects and reorganize the lessons to increase the initial engagement with the material. After two years of running pilots, the course is becoming student-centered, where most of the code and image samples provided in the lessons are based on code created by previous students.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {992–998},
numpages = {7},
keywords = {codeworld, computational thinking, computer science education, course, functional language, haskell, high school, introductory programming, k-12, professional development, teacher training},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@article{10.1145/3445984,
author = {Saqr, Mohammed and Ng, Kwok and Oyelere, Solomon sunday and Tedre, Matti},
title = {People, Ideas, Milestones: A Scientometric Study of Computational Thinking},
year = {2021},
issue_date = {September 2021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {21},
number = {3},
url = {https://doi.org/10.1145/3445984},
doi = {10.1145/3445984},
abstract = {The momentum around computational thinking (CT) has kindled a rising wave of research initiatives and scholarly contributions seeking to capitalize on the opportunities that CT could bring. A number of literature reviews have showed a vibrant community of practitioners and a growing number of publications. However, the history and evolution of the emerging research topic, the milestone publications that have shaped its directions, and the timeline of the important developments may be better told through a quantitative, scientometric narrative. This article presents a bibliometric analysis of the drivers of the CT topic, as well as its main themes of research, international collaborations, influential authors, and seminal publications, and how authors and publications have influenced one another. The metadata of 1,874 documents were retrieved from the Scopus database using the keyword “computational thinking.” The results show that CT research has been US-centric from the start, and continues to be dominated by US researchers both in volume and impact. International collaboration is relatively low, but clusters of joint research are found between, for example, a number of Nordic countries, lusophone- and hispanophone countries, and central European countries. The results show that CT features the computing’s traditional tripartite disciplinary structure (design, modeling, and theory), a distinct emphasis on programming, and a strong pedagogical and educational backdrop including constructionism, self-efficacy, motivation, and teacher training.},
journal = {ACM Trans. Comput. Educ.},
month = mar,
articleno = {20},
numpages = {17},
keywords = {Computational thinking, bibliometric research, history, scientometrics, literature review, computing education research, computer science education}
}

@inproceedings{10.1145/3478431.3499323,
author = {Luo, Feiya and Yan, Wei and Liu, Ruohan and Israel, Maya},
title = {Elementary Students' Understanding of Variables in Computational Thinking-Integrated Instruction: A Mixed Methods Study},
year = {2022},
isbn = {9781450390705},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3478431.3499323},
doi = {10.1145/3478431.3499323},
abstract = {Variable is a common computer science (CS) concept and is being introduced to upper elementary students in computational thinking (CT)-integrated instruction. However, there is scant empirical evidence of when and how elementary students should learn variables. For example, national computer science (CS) standards advise introducing variables in grades 3-5 and a K-8 variable learning trajectory (LT) synthesized learning goals from the literature and hypothesized four levels of thinking in working with variables. Yet, little empirical research lies behind these. This mixed methods study examined elementary students' understanding of variables. Participants were sampled from two fourth-grade classes from a Midwestern elementary school that implemented a series of CT-integrated math lessons. Students' written responses to variables assessment items were analyzed. Additionally, cognitive think-aloud interviews were conducted with nine students to elicit students' understanding while solving the variables assessment items. Our findings suggested that most students lacked a conceptual understanding of using variables to create generalized problem solutions that could work with any set of inputs. Additionally, students had difficulty with specific mechanics of using variables such as storing user input in a variable, updating variable values, and using the values stored in variables. This study underscores the need for careful design, use, and analysis of elementary CT-integrated lessons and assessments to introduce and reinforce the conceptual understanding and specific mechanics of variables for elementary students.},
booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education - Volume 1},
pages = {523–529},
numpages = {7},
keywords = {assessment, computational thinking, elementary instruction, mixed methods, variables},
location = {Providence, RI, USA},
series = {SIGCSE 2022}
}

@inproceedings{10.1145/3481312.3488711,
author = {Bell, Tim},
title = {Computational thinking: online and offline, plugged and unplugged},
year = {2021},
isbn = {9781450385718},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3481312.3488711},
doi = {10.1145/3481312.3488711},
booktitle = {Proceedings of the 16th Workshop in Primary and Secondary Computing Education},
articleno = {1},
numpages = {1},
location = {Virtual Event, Germany},
series = {WiPSCE '21}
}

@inproceedings{10.1145/3144826.3145349,
author = {Garc\'{\i}a-Pe\~{n}alvo, Francisco J.},
title = {Computational thinking issues},
year = {2017},
isbn = {9781450353861},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3144826.3145349},
doi = {10.1145/3144826.3145349},
abstract = {This is the second occasion that Computational Thinking track is presented in TEEM Conference. Our Society is claiming for more technical professionals and future job will need workers know the computational principles to be applied in their daily tasks, independently they will be technicians. The computer science and programming skills need to be introduced since early beginning in the children education, but these are not enough, a new way of thinking and solving problems is needed, this is the computational thinking goal.},
booktitle = {Proceedings of the 5th International Conference on Technological Ecosystems for Enhancing Multiculturality},
articleno = {1},
numpages = {4},
keywords = {Coding in schools, Coding skills throughout games, Computational Thinking, Computational thinking skills and curriculum, Controlling things, Programming robots, TACCLE 3, Using logic},
location = {C\'{a}diz, Spain},
series = {TEEM 2017}
}

@inproceedings{10.1145/3578837.3578871,
author = {Choi, Wan Chong},
title = {The Influence of Code.org on Computational Thinking and Learning Attitude in Block-Based Programming Education},
year = {2023},
isbn = {9781450398428},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3578837.3578871},
doi = {10.1145/3578837.3578871},
abstract = {In recent years, the elementary schools in Macao have increasingly offered programming curriculum. Programming curriculum emphasizes computational thinking, which is the capacity to analyze, design algorithms, and find solutions to programming problems. However, it is not easy to develop students’ computational thinking abilities. In addition, students' poor learning attitudes are connected to difficulties in learning programming. Therefore, it is crucial for educators to investigate how to improve students' computational thinking and learning attitudes. This study applied a quasi-experimental research method to a single group and used a pretest-posttest method to measure the influence of using Code.org on computational thinking and learning attitudes. The participants were 20 third-grade students in an elementary school in Macao. The teaching duration is carried out for three weeks, six lessons per week, a total of eighteen lessons, and 40 minutes per lesson. The Programming Computational Thinking Scale (PCTS) and the Attitude Scale of Computer Programming Learning (ASCOPL) were used to evaluate the implementation's effect. After analyzing the questionnaire scores and students' achievements on the Code.org website, it was found that after receiving the Code.org instruction, students were able to complete most of the stage of the Course B curriculum in Code.org, and their computational thinking and learning attitudes have improved significantly.},
booktitle = {Proceedings of the 2022 6th International Conference on Education and E-Learning},
pages = {235–241},
numpages = {7},
location = {Yamanashi, Japan},
series = {ICEEL '22}
}

@inproceedings{10.1145/3474995.3475043,
author = {Zheng, Qi},
title = {Let Computational Thinking Permeate Biostatistics Education of Public Health Students},
year = {2021},
isbn = {9781450390033},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3474995.3475043},
doi = {10.1145/3474995.3475043},
abstract = {An overarching goal of biostatistics education at any public health school is to cultivate students' ability to solve real-world problems. This paper discusses unconventional approaches to enhancing students' problem-solving ability in the setting of an online master degree program in epidemiology. Citing students' actual work, the author advocates shifting more attention to how to foster knowledge elaboration, an integral, yet oft-overlooked part of problem-based learning. The author further illustrates how computational thinking skills can be weaved into biostatistics teaching to facilitate knowledge elaboration.},
booktitle = {Proceedings of the 2021 6th International Conference on Distance Education and Learning},
pages = {283–288},
numpages = {6},
keywords = {biostatistics, computational thinking, knowledge elaboration},
location = {Shanghai, China},
series = {ICDEL '21}
}

@inproceedings{10.1145/3289406.3289412,
author = {Zipitr\'{\i}a, Sylvia da Rosa},
title = {Piaget and Computational Thinking},
year = {2018},
isbn = {9781450366243},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3289406.3289412},
doi = {10.1145/3289406.3289412},
abstract = {In this article I present a theoretical framework for the concept "computational thinking". I do so in response to some of the problems and consequences of the lack of viable theoretical foundations; especially in relation to the development in recent years of many educational practices that claim the term "computational thinking". I therefore introduce my extension of Jean Piaget's general law of cognition which arose as a result of my empirical research on novice learners knowledge of the concept of a program as an executable object. Said empirical study is briefly described in this paper as a means to highlight the key to my extension of Piaget's general law, which is the insight of how the thought processes and methods involved in cases where the subject must instruct an action to a computer differ from those in which the subject instructs another subject, or performs the action themselves. My theory explains the difference between algorithmic thinking and computational thinking by adequately locating it in the specificities of the subject instructing a computer. Hence, in this article I claim that my extension of Piaget's law offers a more empirically thorough and theoretically sound way forward in the conceptual development of "computational thinking" than the alternatives that are being debated in academia to the present day.},
booktitle = {Proceedings of the 7th Computer Science Education Research Conference},
pages = {44–50},
numpages = {7},
keywords = {Learning to program, Novice learners, Piaget's theory},
location = {Saint Petersburg, Russian Federation},
series = {CSERC '18}
}

@inproceedings{10.1145/3545945.3569737,
author = {Salac, Jean and Eatinger, Donna and Franklin, Diana},
title = {The Role of Spatial Orientation in Diagram Design for Computational Thinking Development in K-8 Teachers},
year = {2023},
isbn = {9781450394314},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545945.3569737},
doi = {10.1145/3545945.3569737},
abstract = {The worldwide push for computing education at younger ages requires that teachers are prepared to deliver instruction that supports all learners. Other discipline-based education research fields offer a wealth of instructional scaffolds worthy of exploration in computing. One such scaffold drawn from math education is diagramming. While diagrams are frequently employed in university computing, little is known about its applications in K-8 (ages 6-14) computing.To inform diagram design for K-8 computing, we investigated how the spatial orientation of a diagram (horizontal or vertical) influenced the extent to which K-8 teachers developed different technological, pedagogical, and content knowledge (TPACK) of computational thinking (CT) concepts, such as loops, conditionals, and decomposition. We found that more teachers were able to decompose a sequence of events when using a vertical diagram. While teachers in both conditions were similarly able to describe various CT concepts and aspects of TPACK, more teachers using a vertical diagram made connections between concepts, whereas more teachers using a horizontal diagram described concepts in isolation. We hope this exploration will spur future work into diagramming and more broadly, spatial reasoning in K-8 computing.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
pages = {917–923},
numpages = {7},
keywords = {computational thinking, diagrams, k-8, spatial reasoning, teacher professional development, tpack},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3197091.3205823,
author = {Santisteban, Julio and Santisteban-Mu\~{n}oz, Jennifer},
title = {Psychometric computational thinking test},
year = {2018},
isbn = {9781450357074},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3197091.3205823},
doi = {10.1145/3197091.3205823},
abstract = {The recent widespread popularity of computational thinking (CT) has raised the need for a reliable method for assessing it. Recent CT tests focus on programming skills rather than the analytical ability and problem-solving processes in science, philosophy and other areas of knowledge.  This poster presents the results (Test design) of an ongoing project that has developed a Psychometric Computational Thinking Test (PCTT) which has three phases: test design, test implementation and applying the test. In regards to the PCTT design, the reliability and validity of the test were based on content and construct validity which also includes its rating scales for its application.  This work makes two contributions: (1) a standardized CT Test design incorporating psychometric techniques as well as computational techniques and (2) the inclusion of open-ended questions and their assessment with V of Aiken in order to validate responses.},
booktitle = {Proceedings of the 23rd Annual ACM Conference on Innovation and Technology in Computer Science Education},
pages = {393},
numpages = {1},
keywords = {Computational Thinking, Psychometric, metric},
location = {Larnaca, Cyprus},
series = {ITiCSE 2018}
}

@inproceedings{10.1145/3488392.3488401,
author = {Ortiz, Julia and Moreira, Carolina and Menezes, Krissia and Ferrari, Bernardo and Junior, Deogenes and Pereira, Roberto},
title = {Computational Thinking for Digital Culture Development: discussions based on a practical experience},
year = {2021},
isbn = {9781450384896},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3488392.3488401},
doi = {10.1145/3488392.3488401},
abstract = {Computational Thinking has been understood as an essential ability in a society mediated by technology. However, literature in the field shows that initiatives for developing this ability rarely address challenging contexts audiences. In this paper, we draw on the notion of mental models to relate the concepts of Computational Thinking and Digital Culture. We claim that practicing basic skills when exploring simple prototypes favors people to build mental models that are useful to understand and use technologies. In a case study, we engaged adults in their initial stages of literacy in activities that evolved from basic ones with a low fidelity ATM prototype to complex ones with a functional prototype. We identified that participants used the experience and knowledge they obtained from previous activities to carry out the next ones, showing confidence and autonomy when exploring a functional prototype.},
booktitle = {Proceedings of the X Latin American Conference on Human Computer Interaction},
articleno = {9},
numpages = {5},
keywords = {computational thinking, digital culture, human-computer interaction},
location = {Valparaiso, Chile},
series = {CLIHC '21}
}

@inproceedings{10.1145/3572549.3572554,
author = {Schmidthaler, Eva and Schalk, Maritta and Schmollm\"{u}ller, Matthias and Sabitzer, Barbara and Andjic, Branko and Lavicza, Zsolt},
title = {The Effects of Using Poly-Universe on Computational Thinking in Biology and Physical Education},
year = {2023},
isbn = {9781450397766},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3572549.3572554},
doi = {10.1145/3572549.3572554},
abstract = {Today’s teaching and didactical methods are trying more and more to integrate digital technologies and computational thinking (CT) into other subjects. One way of combining and integrating these important skills and CT into all subjects, school levels, and school types is to include the game Poly-Universe (PolyUni). According to the results of the Poly-Universe in School Education (PUSE) study 2018, the game can be expected to have a positive effect on visual perceptual progress, including isolation and the development of shape-background skills. So far, however, comparatively few attempts have been made to explore the educational possibilities of PolyUni for different school levels and subjects, besides mathematics. This research explores how PolyUni can be used to promote CT and to evaluate whether the learning objectives in the subjects of physical education and biology have been achieved. Furthermore, it examines how PolyUni combines the requirements of the different curricula in secondary school, based on self-designed tasks. Additionally, further aspects PolyUni can promote besides the curriculum in secondary school are discussed. To explore the above-mentioned aspects, a mixed-methods study methodology was used. The participant observation method was employed for qualitative data collection, and a self-designed assessment grid and additional picture analysis were used for the quantitative data. The game was utilized in two workshops for biology and physical education at an Austrian secondary school, and fifty-six students were observed and analyzed. Based on the present data, it can be assumed that PolyUni helps to achieve the requirements of the curricula and pre-defined teaching and learning objectives in a playful way. Furthermore, the game not only promotes CT in secondary school but also encourages enjoyment and collaboration between peers in biology and physical education lessons.},
booktitle = {Proceedings of the 14th International Conference on Education Technology and Computers},
pages = {24–31},
numpages = {8},
keywords = {Education, computational thinking, game-based learning, poly-Universe},
location = {Barcelona, Spain},
series = {ICETC '22}
}

@article{10.1145/3471573,
author = {Kutay, Emine and Oner, Diler},
title = {Coding with Minecraft: The Development of Middle School Students’ Computational Thinking},
year = {2022},
issue_date = {June 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {22},
number = {2},
url = {https://doi.org/10.1145/3471573},
doi = {10.1145/3471573},
abstract = {The purpose of this study is to examine the role of Minecraft-based coding activities on computational thinking (CT) of middle school students. In the study, CT was conceptualized so that it encapsulates not only the knowledge of computational concepts (e.g., loops and conditionals) but also the use of CT practices (e.g., testing and debugging). Data were collected using a combination of knowledge of computational concepts tests, the Minecraft-based coding artifacts, and one-on-one student interviews focusing on the processes of developing computational artifacts. The participants were 20 fifth-grade middle school students from a low-income public school with very limited (if none) formal computer programming experiences before the study. The Minecraft-based coding activities were designed and implemented as an instructional program to last 6 weeks. The results of the study showed a statistically significant increase in students’ knowledge of computational concepts. Based on the analysis of the students’ final coding artifacts, we identified that students mostly used the concepts of sequences, events, loops, and parallelism correctly, whereas variables, operators, and conditionals appeared to be the least successfully used concepts. The qualitative analysis of the artifact-based interviews showed that students employed the CT practices of testing and debugging most of the time while developing an artifact through coding. In contrast, the least resorted CT practice appeared to be reusing and remixing.},
journal = {ACM Trans. Comput. Educ.},
month = feb,
articleno = {21},
numpages = {19},
keywords = {Knowledge of computational concepts, computational thinking practices, Minecraft, coding, middle school, low-income}
}

@inproceedings{10.1145/3606094.3606130,
author = {Li, Xing and Xiang, Hui and Zhou, Xiaochun and Jing, Huang},
title = {An empirical study on designing STEM + AI teaching to cultivate primary school students ' computational thinking perspective},
year = {2023},
isbn = {9798400700422},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3606094.3606130},
doi = {10.1145/3606094.3606130},
abstract = {With the development of the era of artificial intelligence (AI), China has put forward the cultivation of computational thinking (CT) in the compulsory education curriculum standard. CT includes three dimensions: CT concept, CT practice and CT perspective. As a part of CT, the development of CT perspective can promote the growth of students ' connection ability, questioning ability and expression ability. CT perspective promotes the formation of computational identity through the internalization of concepts. At present, there are relatively few studies on the CT perspective. Based on this, this study proposes a design-based STEM + AI teaching model, aiming to create a combination of artificial intelligence and interdisciplinary to cultivate pupils ' CT perspective. In this study, a single group of pre-test and post-test experiments were conducted to test the CT perspective of students in third grade of a primary school in Wuhan. The research shows that the design-based STEM + AI teaching has significantly improved the expression ability and questioning ability of primary school students, but the improvement of connection ability is not significant. The implementation of STEM + AI teaching helps students to internalize ideas from the perspective of CT, thus cultivating students ' computational identity.},
booktitle = {Proceedings of the 2023 8th International Conference on Distance Education and Learning},
pages = {1–7},
numpages = {7},
location = {Beijing, China},
series = {ICDEL '23}
}

@inproceedings{10.1145/3582580.3582630,
author = {Liu, Hui and Li, Zhen and Duan, Jia Ting and Zeng, Yu},
title = {The Impact of Pair Programming Based on Project-Based Learning on Computational Thinking of Junior High School Students},
year = {2023},
isbn = {9781450398015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3582580.3582630},
doi = {10.1145/3582580.3582630},
abstract = {Computational thinking as a key in K-12 education has gotten more and more attention. Researchers and teachers are focusing more on tools and teaching methods that could edify computational thinking. Nowadays, developing students’ computational thinking through graphical programming has become a norm. In addition, project-based learning has been proven effective in cultivating students’ computational thinking. The purpose of this study is to find out the effectiveness of the paired programming teaching method, which is based on project-based learning in junior high school students’ computational thinking, and to provide new opportunities and conditions for the development of computational thinking in junior high school students. This research could expand the view of starting project-based graphical programming courses, and provide a reference for the designing, developing, and teaching of junior high school computational thinking courses.},
booktitle = {Proceedings of the 2022 5th International Conference on Education Technology Management},
pages = {287–291},
numpages = {5},
keywords = {computational thinking, computational thinking self-efficacy, junior high school student, pair programming, project-based learning},
location = {Lincoln, United Kingdom},
series = {ICETM '22}
}

@inproceedings{10.1145/3605468.3609770,
author = {Kunz, Katrin and Moeller, Korbinian and Ninaus, Manuel and Trautwein, Ulrich and Tsarava, Katerina},
title = {Making the Transition to Text-Based Programming: The Pilot Evaluation of a Computational Thinking Intervention for Primary School Students},
year = {2023},
isbn = {9798400708510},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3605468.3609770},
doi = {10.1145/3605468.3609770},
abstract = {Programming and computational thinking (CT) have become important topics in elementary education and are being implemented by national curricula, extracurricular programs, and informal learning environments. Most related research and implementation is mainly focused on block-based programming (BBP). However, BBP can lead to bad programming habits and a later transition to text-based programming (TBP) has been shown to be difficult for students, as they can lose confidence and motivation. Thus, we developed a course to facilitate the transition from BBP to TBP and foster CT while also promoting motivation and students’ programming-related self-concept. We considered data from 27 fourth-grade students aged 9 to 10, who participated in the course as part of an extracurricular enrichment program. In a pre-/post-test design, we assessed CT and its cognitive correlates such as non-verbal visuospatial reasoning, verbal reasoning, arithmetic competencies as well as the student’s motivation and attitude towards programming. Results indicated improved students’ CT, arithmetic, and non-verbal visuospatial reasoning. Furthermore, the transition to TBP did not significantly reduce students’ motivation for programming. Taken together, these findings indicate that the developed intervention may be helpful to facilitate the transition from BBP to TBP while keeping the students motivated and fostering CT.},
booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
articleno = {12},
numpages = {6},
keywords = {Python, block-based programming, computational thinking, elementary school age, hybrid programming, text-based programming, transition},
location = {Cambridge, United Kingdom},
series = {WiPSCE '23}
}

@inproceedings{10.1145/3587103.3594197,
author = {Hiley, Katherine and Cebolla, Hannah and Elshehaly, Mai},
title = {The Impact of Non-Formal Computer Science Outreach on Computational Thinking in Young Women},
year = {2023},
isbn = {9798400701399},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3587103.3594197},
doi = {10.1145/3587103.3594197},
abstract = {The role of non-formal education in increasing female participation in Computer Science (CS) is a hot topic. Short-term interventions, including programming skill outreach activities, have been reported to increase self-efficacy and willingness to pursue computing careers in young women. We explored the impact of a programming outreach activity on three types of measures for 30 female pupils: computing self-efficacy, social participation, and understanding of basic computing concepts. Preliminary results revealed a significant increase in participants' self-efficacy and sense of belonging in computing after the informal learning activity. Students were more focused on tasks when engaging socially with their peers and teachers. A decrease in misconception was observed in uni-structural knowledge but no significant difference was found in multi-structural computing knowledge acquisition. These data provide a baseline for study of the long term impact of outreach activities.},
booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
pages = {642},
numpages = {1},
keywords = {engagement, gender, non-formal education, outreach, women},
location = {Turku, Finland},
series = {ITiCSE 2023}
}

@inproceedings{10.1145/3528231.3528357,
author = {Tisha, Sirazum Munira and Oregon, Rufino A. and Baumgartner, Gerald and Alegre, Fernando and Moreno, Juana},
title = {An automatic grading system for a high school-level computational thinking course},
year = {2023},
isbn = {9781450393362},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3528231.3528357},
doi = {10.1145/3528231.3528357},
abstract = {Automatic grading systems help lessen the load of manual grading. Most existent autograders are based on unit testing, which focuses on the correctness of the code, but has limited scope for judging code quality. Moreover, it is cumbersome to implement unit testing for evaluating graphical output code. We propose an autograder that can effectively judge the code quality of the visual output codes created by students enrolled in a high school-level computational thinking course. We aim to provide suggestions to teachers on an essential aspect of their grading, namely the level of student competency in using abstraction within their codes. A dataset from five different assignments, including open-ended problems, is used to evaluate the effectiveness of our autograder. Our initial experiments show that our method can classify the students' submissions even for open-ended problems, where existing autograders fail to do so. Additionally, survey responses from course teachers support the importance of our work.},
booktitle = {Proceedings of the 4th International Workshop on Software Engineering Education for the Next Generation},
pages = {20–27},
numpages = {8},
keywords = {code quality, lexical analysis, machine learning, open-ended problems},
location = {Pittsburgh, Pennsylvania},
series = {SEENG '22}
}

@inproceedings{10.1145/3328778.3372687,
author = {Musabirov, Ilya and Suschevskiy, Vsevolod},
title = {Teaching Undergraduate Sociologists Modeling and Computational Thinking},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3372687},
doi = {10.1145/3328778.3372687},
abstract = {The introductory agent-based modeling course we are presenting aims to equip second-year sociology students with basic skills which are critical to transforming their research ideas into theories and computational models. Our course follows a general course on theory construction in social science. As one of the first interactions of undergraduate social science students with computer science concepts, the course partially serves as a CS0 course; however, the main focus is on the higher-level skills needed to model social phenomena. This requires the course to maintain multiple foci on computer science and domain skills. In this paper, we present a course design considerations and establish a foundation for the comparison of agent-based models and the computational thinking and CS0 skills required for undergraduate social scientists studying agent-based modeling.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1368},
numpages = {1},
keywords = {agent-based modeling, computational thinking, social science},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3488042.3489963,
author = {Joseph Agbo, Friday and Sunday Oyelere, Solomon and Suhonen, Jarkko and Tukiainen, Markku},
title = {iThinkSmart: Immersive Virtual Reality Mini Games to Facilitate Students’ Computational Thinking Skills},
year = {2021},
isbn = {9781450384889},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3488042.3489963},
doi = {10.1145/3488042.3489963},
abstract = {This paper presents iThinkSmart, an immersive virtual reality-based application to facilitate the learning of computational thinking (CT) concepts. The tool was developed to supplement the traditional teaching and learning of CT by integrating three virtual mini games, namely, River Crossing, Tower of Hanoi, and Mount Patti treasure hunt, to foster immersion, interaction, engagement, and personalization for an enhanced learning experience. iThinkSmart mini games can be played on a smartphone with a Goggle Cardboard and hand controller. This first prototype of the game accesses players' competency of CT and renders feedback based on learning progress.},
booktitle = {Proceedings of the 21st Koli Calling International Conference on Computing Education Research},
articleno = {34},
numpages = {3},
keywords = {Computational thinking, Computing education, HMD, Immersive virtual reality, VR, game-based learning, iThinkSmart},
location = {Joensuu, Finland},
series = {Koli Calling '21}
}

