@inproceedings{10.1145/3641555.3705203,
author = {Dunbar, Kyle M. and Coenraad, Merijke and Iwatani, Emi},
title = {Integrating Computational Thinking, Project-Based Learning, and Cultural Heritage for Rural Middle School Students},
year = {2025},
isbn = {9798400705328},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641555.3705203},
doi = {10.1145/3641555.3705203},
abstract = {Based on work in an ongoing research-practice partnership, we share teacher-designed project-based learning (PBL) units that sought to integrate Appalachian heritage and CT. We offer reflections on the lessons learned in the design and implementation of PBL units in addition to making recommendations for future PBL units that integrate CT and cultural heritage. This work has implications for improving computing education in rural contexts and in PBL settings.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1443–1444},
numpages = {2},
keywords = {computational thinking, culturally sustaining, k-12, project-based learning, rural},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@inproceedings{10.1145/3678726.3678729,
author = {Choi, Wan Chong and Chang, Chi In},
title = {The Students' Perspective on Computational Thinking through Flipped Classroom in K-12 Programming Course},
year = {2024},
isbn = {9798400717611},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3678726.3678729},
doi = {10.1145/3678726.3678729},
abstract = {Programming integration into K-12 curricula has become increasingly important in the rapidly evolving educational landscape. Recognizing the need to develop computational thinking among young learners, this study investigated the impact of the flipped classroom approach on computational thinking in K-12 programming courses in Macao, focusing on primary school students' experiences with block-based programmable hardware. Employing a mixed methods research design, it combined quantitative and qualitative analyses to examine how flipped classroom activities—centered around student engagement with material through e-books, videos, and interactive classroom tasks—affected students' understanding and application of computational concepts, practices, and perspectives. Quantitative data were collected using the Programming Computational Thinking Scale (PCTS), and qualitative insights were gathered through semi-structured interviews. The results indicated significant improvements in students' computational concepts and practices, attributed to the advantages of self-study and a stratified approach to task complexity. However, advancements in computational perspectives were less pronounced, highlighting the need for more opportunities for students to refine their presentation skills. The study concluded that the flipped classroom approach, especially with tools like mBlock and Codey-Rocky, effectively nurtured computational thinking in primary school programming courses. It underscored the importance of innovative teaching methods in enhancing students' ability to apply programming concepts in problem-solving and suggested areas for further improvement in educational practices.},
booktitle = {Proceedings of the 2024 8th International Conference on Education and Multimedia Technology},
pages = {106–113},
numpages = {8},
keywords = {Codey-Rocky, Computational Thinking, Flipped Classroom, K-12 Block-based Programming Course, Primary School Programming Education},
location = {Tokyo, Japan},
series = {ICEMT '24}
}

@inproceedings{10.1145/3605468.3609780,
author = {Parkinson, Jack},
title = {Improving Computational Thinking with Spatial Skills Development in Primary School},
year = {2023},
isbn = {9798400708510},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3605468.3609780},
doi = {10.1145/3605468.3609780},
abstract = {Spatial skills frequently correlate with many measures of computing success, and indeed with wider STEM achievement. Spatial skills training has also been shown to improve computing outcomes at multiple institutions of higher education with first-year university students. However, there is a good chance that even though we can improve the spatial skills of undergraduate students to help them succeed at computing, many students will have already opted-out of computing learning pathways in school due to poor spatial skills. Using a spatialised maths curriculum, we intend to improve the spatial skills of primary school children aged 8–9 and investigate the effect on their computational thinking. With this poster, we would like to share our work so that others can consider deploying similar programmes, and to hear feedback from the CS education community on what other aspects and factors we should consider.},
booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
articleno = {33},
numpages = {2},
keywords = {computational thinking, spatial skills},
location = {Cambridge, United Kingdom},
series = {WiPSCE '23}
}

@inbook{10.1145/3507951.3519288,
author = {Jacob, Sharin Rawhiya and Parker, Miranda C. and Warschauer, Mark},
title = {Integration of computational thinking into English language arts},
year = {2022},
isbn = {9781450396158},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3507951.3519288},
abstract = {This paper describes the development and implementation of a yearlong integrated English Language Arts (ELA) and computational thinking (CT) curriculum that has been adapted to meet the needs of multilingual students. The integration of computational thinking into K-12 literacy instruction has only been examined in a handful of studies, and little is known about how such integration supports the development of CT for multilingual students. We conducted a qualitative case study on curricular implementation in a general education classroom with large numbers of students designated as English learners. Results from detailed field notes revealed that the strategic application of instructional practices was implemented in the service of building on students' existing literacy skills to teach CT concepts and dispositions. The CT and literacy framework put forth in this study can be used as an analytic framework to highlight how instructional strategies mobilize the existing literacy and CT resources of linguistically diverse students. Based on our findings, we discuss recommendations for future integrated ELA-CT curricula.},
booktitle = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
pages = {55–63},
numpages = {9}
}

@inproceedings{10.1145/3669947.3669951,
author = {Choi, Wan Chong and Choi, Iek Chong},
title = {The Influence of CodeCombat on Computational Thinking in Python Programming Learning at Primary School},
year = {2024},
isbn = {9798400718083},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3669947.3669951},
doi = {10.1145/3669947.3669951},
abstract = {In an age of rapid technological development, primary schools now teach programming to young students, focusing on developing their computational thinking, problem-solving, and ability to use computers to create solutions. However, fostering computational thinking skills in younger students was a challenging task. The serious game CodeCombat has become a potential resource for instructing young students in primary schools on basic programming principles using Python.This study delved into the role of the serious game CodeCombat in advancing computational thinking competencies among primary school students undertaking Python in Macao. Using a quasi-experimental pretest-posttest approach, we examined 49 grade-one students over a two-week Python programming course facilitated by CodeCombat. The Computational Thinking Scale (CTS), encompassing Creativity, Cooperativity, Algorithmic Thinking, Problem Solving, and Critical Thinking, was employed to measure shifts in computational thinking before and after the teaching experiment.Data analysis through paired-sample t-test highlighted notable progress in computational thinking skills, with marked improvements specifically in Creativity, Critical Thinking, Algorithmic Thinking, and Problem Solving. However, Cooperativity did not exhibit the same upward trend, implying that CodeCombat's impact was more pronounced on solitary cognitive capabilities than collaborative skills. Moreover, the correlation between different dimensions indicated that these computational thinking skills were mutually reinforcing, suggesting that enhancing one might contribute to the development of others. The findings endorsed that game-based learning is effective in programming education and recommended integrating CodeCombat to improve computational thinking in learning Python programming in primary school.},
booktitle = {Proceedings of the 2024 5th International Conference on Education Development and Studies},
pages = {26–32},
numpages = {7},
keywords = {CodeCombat, Computational thinking, Gamification of learning, K-12 Programming education, Python programming, Serious game},
location = {Cambridge, United Kingdom},
series = {ICEDS '24}
}

@inproceedings{10.1145/3626253.3635498,
author = {Coenraad, Merijke and Rangel, Alessandra and Burke, Quinn and Mills, Kelly and Ruiz, Pati and Dunbar, Kyle},
title = {Champion, Collaborator, Curator, Anchor: Supporting K-12 Teachers to Integrate Computational Thinking},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635498},
doi = {10.1145/3626253.3635498},
abstract = {Computational thinking (CT) provides opportunities for students to build the skills they need for everyday life, future academic success, and careers. Increasingly, districts are integrating CT into K-12 disciplinary subjects and a growing number of teachers need the knowledge to lead CT learning opportunities. CT is still nascent in teacher education, however, and not all teachers are receiving professional learning on the job. Teachers need effective methods of support to ensure they are providing students with high quality CT learning opportunities. We present methods of support for integrating CT into schools. The poster highlights four methods to support teacher professional learning: allowing ample time for collaboration, a school-based advocate championing CT integration, posting and promoting curated resources, and a foundational person anchoring the work as the initiative expands. In doing so, this poster provides interrelated examples of teacher support and highlights methods of continuous support for teachers integrating CT across content areas.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1608–1609},
numpages = {2},
keywords = {computational thinking, k-12, professional learning, teacher support},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@article{10.1145/3578269,
author = {Pel\'{a}nek, Radek and Effenberger, Tom\'{a}\v{s}},
title = {The Landscape of Computational Thinking Problems for Practice and Assessment},
year = {2023},
issue_date = {June 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {23},
number = {2},
url = {https://doi.org/10.1145/3578269},
doi = {10.1145/3578269},
abstract = {To provide practice and assessment of computational thinking, we need specific problems students can solve. There are many such problems, but they are hard to find. Learning environments and assessments often use only specific types of problems and thus do not cover computational thinking in its whole scope. We provide an extensive catalog of well-structured computational thinking problem sets together with a systematic encoding of their features. Based on this encoding, we propose a four-level taxonomy that provides an organization of a wide variety of problems. The catalog, taxonomy, and problem features are useful for content authors, designers of learning environments, and researchers studying computational thinking.},
journal = {ACM Trans. Comput. Educ.},
month = mar,
articleno = {22},
numpages = {29},
keywords = {Skills, well-structured problems, taxonomy}
}

@inproceedings{10.1145/3545947.3573279,
author = {Padhye, Harsh and Gibson, Rachel and Bull, Glen and Nguyen, N. Rich},
title = {Does Musical Context Improve Computational Thinking Skills?},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3573279},
doi = {10.1145/3545947.3573279},
abstract = {The Make-To-Learn Lab at the University of Virginia developed TuneScope, a tool to facilitate computational thinking (CT) through music, to help democratize computer science education. Built upon the existing framework of Snap! (University of California, Berkeley), TuneScope leverages sound analysis, design, and music composition to engage novices with CT fundamentals. Existing research shows the benefits of using familiar contexts to teach CT, and TuneScope builds upon this with musical contexts. We have designed a course centered around the use of TuneScope to teach fundamentals of CT through music. In this paper, we investigate how students use TuneScope to develop sequential melodies, build chords, and sample recorded sounds while simultaneously learning fundamental programming principles such as algorithm design and abstraction. Using sentiment analysis, we demonstrate that students have had a largely positive experience in learning and grasping CT fundamentals throughout a diverse curriculum. As of today, the total enrollment of the course consists of over 45\% female students with a 100\% retention rate. TuneScope has also been accepted as an official Snap! library to be used by thousands of Snap! users worldwide.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1231},
numpages = {1},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3670013.3670027,
author = {Yang, Hairu and Shao, Yanru and Liu, Yuqi and Dong, Jiamin and Li, Qiuhong and Chen, Yipan},
title = {The Construction and Application of A Blended Contextual Teaching Model for Computational Thinking Development},
year = {2024},
isbn = {9798400717062},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3670013.3670027},
doi = {10.1145/3670013.3670027},
abstract = {Computational thinking has become one of the key literacies necessary for talents in the digital and intelligent era of the 21st century. In the current educational environment, the content of the curriculum that is detached from reality and the fragmented knowledge have brought great difficulties to the cultivation of students' computational thinking ability. Contextual teaching can connect knowledge with reality. Through the e-learning platform combined with real-life scenarios to build a specific real situation, which can drive students to carry out rich thinking activities. Therefore, this study designed a blended contextual teaching model for the development of computational thinking based on contextual learning theory and constructivist learning theory. It was applied to the teaching of high school information technology courses, and the effectiveness of the model was verified by investigating and analyzing whether there were changes in students' academic performance and computational thinking ability under the blended contextual teaching model through the questionnaire survey method and the experimental research method. The results of the study show that the application of the model can effectively improve students' academic performance and computational thinking ability, which provides an effective reference and reference for future educational teaching practice.},
booktitle = {Proceedings of the 2024 15th International Conference on E-Education, E-Business, E-Management and E-Learning},
pages = {99–106},
numpages = {8},
keywords = {Blended learning, Computational thinking, Information technology, Situated teaching model},
location = {Fukuoka-shi, Japan},
series = {IC4E '24}
}

@inproceedings{10.1145/3502718.3524783,
author = {Yadav, Aman and Caeli, Elisa Nadire and Ocak, Ceren and Macann, Victoria},
title = {Teacher Education and Computational Thinking: Measuring Pre-service Teacher Conceptions and Attitudes},
year = {2022},
isbn = {9781450392013},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3502718.3524783},
doi = {10.1145/3502718.3524783},
abstract = {In recent years, there has been a growing awareness of the need for computer science education opportunities and particularly for engaging students in computational thinking ideas and practices to help them understand how computing influences our world. At its core, computational thinking (CT) is seen as understanding how computational practices (such as, abstraction) and tools (such as modeling software) can be used to explore phenomena, solve problems, and influence our lives and society. The push for CT integration has called for preparing future educators to learn CT practices and tools through stand-alone courses and within the context of disciplinary pedagogy/methods courses. However, there are few instruments that measure pre-service teachers' attitudes towards computational thinking and its role in formal schooling. In this study, we developed and validated an instrument to measure pre-service teachers' attitudes towards CT, its role in students' lives, and their own self-efficacy to incorporate CT into their teaching. We report results from a principal components factor analysis on survey responses from 260 pre-service teachers to identify patterns and reduce the number of dimensions of comparison in the analysis. We discuss how pre-service teacher conceptions have implications for preparing future teachers to integrate computational thinking into their instruction.},
booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 1},
pages = {547–553},
numpages = {7},
keywords = {computational thinking, pre-service teachers, teacher education},
location = {Dublin, Ireland},
series = {ITiCSE '22}
}

@inproceedings{10.1145/3677619.3678129,
author = {Paludo, Giulia and Montresor, Alberto},
title = {Collaborative Approaches for Effective and Sustainable Integration of Computational Thinking Educational Strategies},
year = {2024},
isbn = {9798400710056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3677619.3678129},
doi = {10.1145/3677619.3678129},
booktitle = {Proceedings of the 19th WiPSCE Conference on Primary and Secondary Computing Education Research},
articleno = {33},
numpages = {2},
keywords = {Computational Thinking Education},
location = {Munich, Germany},
series = {WiPSCE '24}
}

@inproceedings{10.1145/3706468.3706474,
author = {Yin, Stella Xin and Liu, Zhengyuan and Goh, Dion Hoe-Lian and Quek, Choon Lang and Chen, Nancy F.},
title = {Scaling Up Collaborative Dialogue Analysis: An AI-driven Approach to Understanding Dialogue Patterns in Computational Thinking Education},
year = {2025},
isbn = {9798400707018},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3706468.3706474},
doi = {10.1145/3706468.3706474},
abstract = {Pair programming is a collaborative activity that enhances students’ computational thinking (CT) skills. Analyzing students’ interactions during pair programming provides valuable insights into effective learning. However, interpreting classroom dialogues is a challenging and complex task. Due to the simultaneous interaction between interlocutors and other ambient noise in collaborative learning contexts, previous work heavily relied on manual transcription and coding, which is labor-intensive and time-consuming. Recent advancements in speech and language processing offer promising opportunities to automate and scale up dialogue analysis. Besides, previous work mainly focused on task-related interactions, with little attention to social interactions. To address these gaps, we conducted a four-week CT course with 26 fifth-grade primary school students. We recorded their discussions, transcribed them with speech processing models, and developed a coding scheme and applied LLMs for annotation. Our AI-driven pipeline effectively analyzed classroom recordings with high accuracy and efficiency. After identifying the dialogue patterns, we investigated the relationships between these patterns and CT performance. Four clusters of dialogue patterns have been identified: Inquiry, Constructive Collaboration, Disengagement, and Disputation. We observed that Inquiry and Constructive Collaboration patterns were positively related to students’ CT skills, while Disengagement and Disputation patterns were associated with lower CT performance. This study contributes to the understanding of how dialogue patterns relate to CT performance and provides implications for both research and educational practice in CT learning.},
booktitle = {Proceedings of the 15th International Learning Analytics and Knowledge Conference},
pages = {47–57},
numpages = {11},
keywords = {Collaborative learning, Computational thinking, Dialogue analysis, Large language models, Pair programming, Speech and language processing},
location = {
},
series = {LAK '25}
}

@article{10.1145/3665992,
author = {Pires, Ana Cristina and Rocha, Filipa and Guerreiro, Tiago and Nicolau, Hugo},
title = {Inclusive Computational Thinking in Public Schools: A Case Study from Lisbon},
year = {2024},
issue_date = {July - August 2024},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {31},
number = {4},
issn = {1072-5520},
url = {https://doi.org/10.1145/3665992},
doi = {10.1145/3665992},
journal = {Interactions},
month = jun,
pages = {32–37},
numpages = {6}
}

@inproceedings{10.1145/3594781.3594794,
author = {Sinha, Ravi and Swanson, Hillary and Clarke-Midura, Jody and Shumway, Jessica F. and Lee, Victor R. and Chandrasekharan, Sanjay},
title = {From Embodied Doing to Computational Thinking in Kindergarten: A Punctuated Motor Control Model},
year = {2023},
isbn = {9798400707360},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3594781.3594794},
doi = {10.1145/3594781.3594794},
abstract = {We propose a motor control-based characterization of how computational thinking (CT) can emerge from embodied performance. The account is based on children's activity during a tangible coding task, and a mechanism proposed by cognitive and motor neuroscience studies. For the task, the child used navigational symbols (forward, backward, rotate right, rotate left) to program the movements of a tangible robot on a 2-D grid. We propose that the development of CT through this task can be understood in terms of “tool incorporation into the body schema.” To illustrate the proposed mechanism, we use video data from one of three teaching sessions, where a group of four kindergartners learned to code using Cubetto (a tactile screen-free grid-based robotic toy). We argue that learning the task (i.e. being able to control Cubetto to perform goal-oriented movements) is challenging because the CT task requires learners to bridge three distinct discontinuities (spatial, temporal, and representational), to achieve control over the robot. We hypothesize that learners and facilitators are likely to engage in moves (both epistemic and pedagogical) that help bridge these gaps, and thus support the incorporation of the robot and its controller into the body schema. We characterize two such moves and explicate how they might support the incorporation process. The study is part of a larger program of design-based research aimed at helping young children develop CT.},
booktitle = {Proceedings of the 2023 Symposium on Learning, Design and Technology},
pages = {1–10},
numpages = {10},
keywords = {Computational thinking, Early childhood education, Embodied learning, Tool incorporation},
location = {Evanston, IL, USA},
series = {LDT '23}
}

@inproceedings{10.1145/3631802.3631811,
author = {Fairlie, Fiona},
title = {Encouraging the Development of Computational Thinking Skills through Structured Dance Activities (Discussion Paper)},
year = {2024},
isbn = {9798400716539},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3631802.3631811},
doi = {10.1145/3631802.3631811},
abstract = {This paper investigates whether aspects of structured dance and choreography may improve cognitive skills related to computational thinking. It also explores the relationship between performance on computational thinking tasks and motivation. Twenty participants,aged between 7 and 9 years old, undertook the Beginners Computational Thinking Test (BCTt) as a pre-test, took part in three dance related workshops then completed the BCTt as post-test and responded to an adapted version of the Intrinsic Motivation Inventory (IMI). Student performance on the BCTt improved significantly from pre-test to post-test for both boys and girls and seems generalised across the computational categories measured by BCTt. The study did not show a correlation between performance and motivation in girls but suggests that there may be some correlation between improvement in score and reported enjoyment in boys.},
booktitle = {Proceedings of the 23rd Koli Calling International Conference on Computing Education Research},
articleno = {40},
numpages = {8},
keywords = {computational thinking, computer education, dance},
location = {Koli, Finland},
series = {Koli Calling '23}
}

@inproceedings{10.1145/3545947.3576290,
author = {Niousha, Rose and Saito, Daisuke and Washizaki, Hironori and Fukazawa, Yoshiaki},
title = {Gender Characteristics and Computational Thinking in Scratch},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3576290},
doi = {10.1145/3545947.3576290},
abstract = {This study investigates the Computational Thinking skill differences among novice programmers in relation to gender. Block-based visual programming languages such as Scratch particularly benefit K-12 programmers because they learn how to code intuitively. Our study analyzed 124 (62 males, 62 females) Scratch projects on the Scratch website, categorized projects on the basis of each user's gender and project type, and compared their Computational Thinking scores. The results of this study suggest that project types preferred by males require more programming construct reflected in the Computational Thinking score than that of females. Because gender differences appear by project type, project type presumably influences the gender gap in scores.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1344},
numpages = {1},
keywords = {computational thinking, gender, k-12 education, scratch},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3629296.3629361,
author = {Zhang, Wei and Song, Lingling and Huang, Xujun and Wang, Yi},
title = {Construction and Practice of Computational Thinking Structural Framework with Sternberg's Intellectual Education Theory},
year = {2024},
isbn = {9798400709111},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3629296.3629361},
doi = {10.1145/3629296.3629361},
abstract = {Cultivating students' computational thinking skills is one of the important teaching goals of college computer courses, and constructing a scientific and effective structural framework for computational thinking is the basis for implementing computational thinking training. To this end, based on Sternberg's intelligence education theory, combined with software development and programming knowledge, a structural framework of computational thinking was constructed. Subsequently, a project-based teaching activity based on this framework to cultivate students' computational thinking skills was carried out in the college computer programming course "Software Development Technology". By measuring students' computational thinking skills before and after the activity, it was verified that the project-based teaching model based on the proposed framework had a significant effect on improving students' computational thinking skills. By constructing a structural framework of computational thinking that integrates the characteristics of disciplines, and taking programming teaching as a carrier to implement the cultivation of computational thinking skills, it can provide a new way for computer educators to cultivate students' computational thinking skills.},
booktitle = {Proceedings of the 15th International Conference on Education Technology and Computers},
pages = {404–408},
numpages = {5},
keywords = {computational thinking, intelligence theories, project-based teaching, software development technology},
location = {Barcelona, Spain},
series = {ICETC '23}
}

@inproceedings{10.1145/3626252.3630778,
author = {Ghosh, Ahana and Malva, Liina and Singla, Adish},
title = {Analyzing-Evaluating-Creating: Assessing Computational Thinking and Problem Solving in Visual Programming Domains},
year = {2024},
isbn = {9798400704239},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626252.3630778},
doi = {10.1145/3626252.3630778},
abstract = {Computational thinking (CT) and problem-solving skills are increasingly integrated into K-8 school curricula worldwide. Consequently, there is a growing need to develop reliable assessments for measuring students' proficiency in these skills. Recent works have proposed tests for assessing these skills across various CT concepts and practices, in particular, based on multi-choice items enabling psychometric validation and usage in large-scale studies. Despite their practical relevance, these tests are limited in how they measure students' computational creativity, a crucial ability when applying CT and problem solving in real-world settings. In our work, we have developed ACE, a novel test focusing on the three higher cognitive levels in Bloom's Taxonomy, i.e., Analyze, Evaluate, and Create. ACE comprises a diverse set of 7x3 multi-choice items spanning these three levels, grounded in elementary block-based visual programming. We evaluate the psychometric properties of ACE through a study conducted with 371 students in grades 3-7 from 10 schools. Based on several psychometric analysis frameworks, our results confirm the reliability and validity of ACE. Our study also shows a positive correlation between students' performance on ACE and performance on Hour of Code: Maze Challenge by Code.org.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
pages = {387–393},
numpages = {7},
keywords = {assessment tools, bloom's taxonomy, computational thinking},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3585088.3593886,
author = {Ranjan, Krithik and Gyory, Peter and Rivera, Michael L and Do, Ellen Yi-Luen},
title = {Cartoonimator: A Low-cost, Paper-based Animation Kit for Computational Thinking},
year = {2023},
isbn = {9798400701313},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3585088.3593886},
doi = {10.1145/3585088.3593886},
abstract = {Computational thinking has been identified as an important skill for children to learn in the 21st century, and many innovative kits and tools have been developed to integrate it into children’s learning. Yet, most solutions require the use of devices like computers or other expensive hardware, thus being inaccessible to low-income schools and communities. We present Cartoonimator, a low-cost, paper-based computational kit for children to create animations and engage with computational thinking. Cartoonimator requires only paper and a smartphone to use, offering an affordable learning experience. Children can draw the scenes and characters for their animation on the paper, which is printed with computer vision markers. We developed the mobile web app to provide an interface to capture keyframes and compile them into animations. In this paper, we describe the implementation and workflow of Cartoonimator, its deployment with children at a local STEAM event, and a planned evaluation for the kit.},
booktitle = {Proceedings of the 22nd Annual ACM Interaction Design and Children Conference},
pages = {517–521},
numpages = {5},
keywords = {animation, computational thinking, paper computing, tangible programming},
location = {Chicago, IL, USA},
series = {IDC '23}
}

@inproceedings{10.1145/3511861.3511869,
author = {Bender, Jeff and Zhao, Bingpu and Dziena, Alex and Kaiser, Gail},
title = {Learning Computational Thinking Efficiently: How Parsons Programming Puzzles within Scratch Might Help},
year = {2022},
isbn = {9781450396431},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3511861.3511869},
doi = {10.1145/3511861.3511869},
abstract = {Using a design thinking approach, we surveyed and interviewed grade 6-9 teachers on their experience with Scratch and Parsons Programming Puzzles (PPP). The results lead us to extend Scratch with gameful PPP functionality focused on individual computational thinking (CT) concepts. In this paper, we vary elements of PPPs presented to 624 adult learners to identify those yielding manageable cognitive load (CL), and maximum CT motivation and learning efficiency, for a general populace. Findings indicate PPPs with feedback and without distractors limit CL, those with feedback produce highest CT motivation, and those with an isolated block palette and without distractors produce highest CT learning efficiency. We analyze study data across nine conditions to offer insight to those developing PPP systems with the aim to advance equitable CT education for all.},
booktitle = {Proceedings of the 24th Australasian Computing Education Conference},
pages = {66–75},
numpages = {10},
keywords = {Scratch, Parsons Programming Puzzles, Motivation, Learning Efficiency, Computational Thinking, Cognitive Load},
location = {Virtual Event, Australia},
series = {ACE '22}
}

