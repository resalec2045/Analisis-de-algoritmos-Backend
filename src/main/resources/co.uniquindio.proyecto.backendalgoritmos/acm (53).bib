@inproceedings{10.1145/3631802.3631805,
author = {Guzdial, Mark and Evrard, August},
title = {Identifying the Computing Education Needs of Liberal Arts and Sciences Students (Discussion Paper)},
year = {2024},
isbn = {9798400716539},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3631802.3631805},
doi = {10.1145/3631802.3631805},
abstract = {As a field, computing’s deepest roots lie in liberal arts domains such as philosophy and linguistics. As new technologies rapidly expanded the field, the computer science curricula emerged. The current undergraduate areas of study, including computer science and software engineering, focus on preparing students for careers in the computing industry or academia. The “born digital” students of a modern liberal arts institution need a different, less technology-heavy, form of computing education to support their careers as future scientists, artists, or humanists. At our large, research-focused, US university, the College of Literature, Science, and the Arts (LSA) charged a task force with defining the computing education needs for their students, chaired by the authors. We describe our process, findings and outcomes here with the aim of offering a reference template to faculty at universities that have experienced a similar growth to prominence of computer science in the undergraduate curriculum. The task force identified emergent themes of discovery, expression, and justice that we using to establish a new program, the Program for Computing in the Arts and Sciences (PCAS). Our themes and process may help other liberal arts and sciences programs organize the computing education needs in support of all their undergraduate students.},
booktitle = {Proceedings of the 23rd Koli Calling International Conference on Computing Education Research},
articleno = {19},
numpages = {7},
keywords = {CS for All, computational literacy, computational science, computational thinking, critical computing, liberal arts and sciences},
location = {Koli, Finland},
series = {Koli Calling '23}
}

@article{10.1145/2483852.2483864,
author = {Eglash, Ron and Gilbert, Juan E. and Foster, Ellen},
title = {Toward culturally responsive computing education},
year = {2013},
issue_date = {July 2013},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {56},
number = {7},
issn = {0001-0782},
url = {https://doi.org/10.1145/2483852.2483864},
doi = {10.1145/2483852.2483864},
abstract = {Improving academic success and social development by merging computational thinking with cultural practices.},
journal = {Commun. ACM},
month = jul,
pages = {33–36},
numpages = {4}
}

@inproceedings{10.1145/3197768.3203170,
author = {Tryfonas, Theo and Crick, Tom},
title = {Public Policy and Skills for Smart Cities: The UK Outlook},
year = {2018},
isbn = {9781450363907},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3197768.3203170},
doi = {10.1145/3197768.3203170},
abstract = {The impact of information coupled with the effects of innovation is profound on all aspects of city life, from transport planning and energy use reduction to care provision and assisted living. But it also includes new ways of organising communities, as well as access to political process. The idea that information is key for the design and management of future cities matures in the relevant communities of architects, planners, engineers, computer scientists and urban innovators, so the time is right to also consider what citizenship skills are required. Familiarity, if not proficiency, in 'digital' skills emerge as essential aspect of future citizenship. We don't only mean however efficient digital consumption skills, but also digital creation skills such as computational thinking and coding, entrepreneurship and systems thinking, information architecting as well as a risk-informed perception of data privacy and security. The challenges of delivering such a skillset are many, from designing a 21st century curriculum, to ensuring fair access to technology for people of all abilities, race, gender, age and class.},
booktitle = {Proceedings of the 11th PErvasive Technologies Related to Assistive Environments Conference},
pages = {116–117},
numpages = {2},
keywords = {Smart cities, public policy, skills development, smart citizens},
location = {Corfu, Greece},
series = {PETRA '18}
}

@inproceedings{10.1145/3300115.3309521,
author = {Qian, Yizhou and Yan, Peilin and Zhou, Mingke},
title = {Using Data to Understand Difficulties of Learning to Program: A Study with Chinese Middle School Students},
year = {2019},
isbn = {9781450362597},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3300115.3309521},
doi = {10.1145/3300115.3309521},
abstract = {Computing education has been expanding into K-12 schools in many countries. The new national curriculum standards in China are going to include computational thinking as a core literacy for every student and make computer programming as a required module in the information technology course. Hence, it is imperative to understand the difficulties Chinese students may face when learning to program. This study investigated Chinese middle students' difficulties in learning to program in Python using the student data in an automated assessment system. Our results showed that the students struggled with fundamental Python syntax and programming rules. We also found that Chinese students faced a special difficulty, which was using correct punctuation symbols in code. We noted that many syntax errors students made were due to the use of Chinese punctuation symbols, which look almost identical to the English equivalents but are invalid to the Python interpreter. Our results suggest that when teaching a programming course to Chinese middle school students, teachers should first help students develop certain typing skills (e.g., switching input methods, distinguishing Chinese and English punctuation symbols, etc.). Such preparation may reduce students' mistakes in code. Finally, future research directions are discussed, including examining the effects of the typing skill training, designing feedback components for the automated assessment system, and so forth.},
booktitle = {Proceedings of the ACM Conference on Global Computing Education},
pages = {185–191},
numpages = {7},
keywords = {Chinese middle school students, computing education, difficulties, misconceptions, novice programming},
location = {Chengdu,Sichuan, China},
series = {CompEd '19}
}

@inproceedings{10.1145/3502717.3532129,
author = {Guzdial, Mark},
title = {Designing Computing Education Courses for Liberal Arts and Science Students},
year = {2022},
isbn = {9781450392006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3502717.3532129},
doi = {10.1145/3502717.3532129},
abstract = {Computing education practitioners and researchers know a lot about how to design courses for students who are going to pursue a career in computing (e.g., professional software developer, data scientist, or computer engineer). Today, computing is a necessary part of other careers, such as scientists who create computational models and simulations, artists working in computational media, and critical computing scholars. The University of Michigan College of Literature, Science, and the Arts (LSA) charged a task force with defining the computing education needs for their students. The task force conducted a year long process involving searches of courses and programs, interviews with students and faculty, and a large survey. The task force proposed themes of Computing for Discovery, Expression, and Justice as useful in organizing computing within the liberal arts and sciences. We are now designing the introductory courses for expression and justice. We are using participatory design methods where faculty advisors engage in tasks (like card sorting) to define projects and learning goals. The expression and justice card sorts are markedly different. We are planning to use a block-based language (Snap!) for instruction and homework, but students will also engage with a purpose-built Runestone ebook in a textual language like Processing (for expression), and Python and HTML (for justice). The ebook activities are informed by purpose-first programming in order to support transfer of knowledge and to encourage a sense of self-efficacy and authenticity.},
booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 2},
pages = {614},
numpages = {1},
keywords = {computational literacy, computational science, computational thinking, critical computing, cs for all, liberal arts and sciences},
location = {Dublin, Ireland},
series = {ITiCSE '22}
}

@inproceedings{10.1145/3434074.3447201,
author = {Pedersen, Bjarke Kristian Maigaard Kj\ae{}r and Jacobsen, Didde Marie and Teichert, Lukas Juhl Lyk and Nielsen, Jacob},
title = {Educational Robotics and Mediated Transfer: Transitioning from Tangible Tile-based Programming, to Visual Block-based Programming},
year = {2021},
isbn = {9781450382908},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3434074.3447201},
doi = {10.1145/3434074.3447201},
abstract = {In this paper we present the results from a study in which participants (n=26, aged 6-9) were exposed to two different ER systems, one based on tangible tile-based programming and one on visual block-programming. During the transition from the first to the second system, mediated transfer of knowledge regarding computational concepts, were observed. Furthermore, the participants CT skills were likewise observed to improve throughout the study, across both ER systems.},
booktitle = {Companion of the 2021 ACM/IEEE International Conference on Human-Robot Interaction},
pages = {402–406},
numpages = {5},
keywords = {computational thinking, educational robotics, k-12, mediated transfer, tangible programming, visual programming},
location = {Boulder, CO, USA},
series = {HRI '21 Companion}
}

@inproceedings{10.1145/3641555.3705159,
author = {Rich, Peter J. and Cunningham, Heather and Diaz, Lien},
title = {Describing the Experience of Instructional Coaches in Supporting Elementary Coding},
year = {2025},
isbn = {9798400705328},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641555.3705159},
doi = {10.1145/3641555.3705159},
abstract = {Over the past decade, schools around the world have introduced coding in elementary education. A principal challenge with this effort is effectively training and maintaining teachers capable of teaching coding to children. An approach used by BootUp Professional Development is to team up with school districts that provide an Instructional Coach (IC). ICs are district-level personnel that support in-service teachers by co-planning, training, modeling, providing resources, and generally supporting teachers to implement coding in their classrooms. ICs remain in the district long after the professional development provider completes their training, potentially addressing training challenges introduced by teacher attrition. Some of the benefits provided by ICs are: (a) longevity, (b) expertise, and (c) near-peer support. However, the roles and responsibilities of ICs vary by district. In this study, we surveyed 49 ICs to better understand their role in supporting elementary teachers to integrate coding into general education. Findings show that while ICs are experienced teachers, they are relatively novice coders. ICs rely on principals and district personnel to set teachers' coding expectations, which can either help or hinder their ability to support teachers. In this poster, we will discuss additional successes, challenges, and support structures that ICs face as they seek to support the effective teaching of coding in elementary education.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1597–1598},
numpages = {2},
keywords = {computational thinking, elementary education, professional development, teacher education},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@article{10.1145/3042084.3042093,
author = {Barnes, Tiffany},
title = {Broadening participation opportunities in 2017},
year = {2017},
issue_date = {January 2017},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {49},
number = {1},
issn = {0097-8418},
url = {https://doi.org/10.1145/3042084.3042093},
doi = {10.1145/3042084.3042093},
abstract = {Since long before President Obama's call for "Computer Science for All" (#CSforAll) in January 2016, momentum has been building to bring computing education to more people, and to be inclusive and equitable in these efforts. But now seems to be a key turning point, where many more people are searching for ways to bring computing to K-12 and to help students in all fields learn about computational thinking. And the community is growing to meet the demand. The IEEE Special Technical Community on Broadening Participation has over 300 members, and has held two annual RESPECT conferences publishing 27 papers along with posters and lightning talks since 2015. One in five accepted SIGCSE 2017 papers focuses on broadening participation.},
journal = {SIGCSE Bull.},
month = jan,
pages = {10–11},
numpages = {2}
}

@inproceedings{10.1145/2325296.2325377,
author = {Goldberg, Debra S. and Grunwald, Dirk and Lewis, Clayton and Feld, Jessica A. and Hug, Sarah},
title = {Engaging computer science in traditional education: the ECSITE project},
year = {2012},
isbn = {9781450312462},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2325296.2325377},
doi = {10.1145/2325296.2325377},
abstract = {Engaging Computer Science in Traditional Education (ECSITE, pronounced "excite") is a 5-year program that began in 2009 to bring computer science into traditional K-12 classrooms. Rather than seeking to draw students into computing courses, we bring computing into the courses that students are already taking. To date, these have included art, biology, health education, mathematics, and social studies courses as well as a Native American focus program. Middle school and high school students are introduced to computational thinking and computer science concepts including algorithms, graph theory, and simulations in interdisciplinary contexts, mirroring the ways in which computing technologies are utilized in research and industry. Teachers report that students increase their understanding and perception of computer science, and that participating K-12 teachers increase their knowledge about computing and will continue to include the computational curriculum after their involvement with ECSITE.},
booktitle = {Proceedings of the 17th ACM Annual Conference on Innovation and Technology in Computer Science Education},
pages = {351–356},
numpages = {6},
keywords = {computational thinking, interdisciplinary curriculum, k-12 instruction},
location = {Haifa, Israel},
series = {ITiCSE '12}
}

@inproceedings{10.1145/3488392.3488395,
author = {Corr\^{e}a, Joseline Melo and Mota, Marcelle Pereira},
title = {Teaching Programming Using Cultural Viewpoint Metaphors Resignification},
year = {2021},
isbn = {9781450384896},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3488392.3488395},
doi = {10.1145/3488392.3488395},
abstract = {Technologies permeate contemporary society, and the ability to use computer science concepts in the problem-solving process is essential to everyone. This paper presents an epistemic tool of Semiotic Engineering whose meaning is resignified to the context of teaching programming to initial learners. Aiming to help these students absorb programming concepts, a gradual form of presentation using the interaction with a new system as a journey through a new culture, based on the Cultural Viewpoint Metaphors theory, was structured. After that, an application of this resignification was adopted in an introductory programming workshop using visual programming and the BBC Micro:bit embedded device. Results from the workshop revealed that this gradual form of introduction could help novices in the programming concepts learning process, showing the potential of this approach in teaching programming.},
booktitle = {Proceedings of the X Latin American Conference on Human Computer Interaction},
articleno = {3},
numpages = {5},
keywords = {Computational Thinking, Cultural Viewpoint Metaphors, Teaching Programming},
location = {Valparaiso, Chile},
series = {CLIHC '21}
}

@inproceedings{10.1145/3483529.3483731,
author = {Garcia-Robles, Rocio and Mu\~{n}oz-Del Amo, Aurea},
title = {ACCtic Master Programme on STEAM + SciArt},
year = {2022},
isbn = {9781450384209},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3483529.3483731},
doi = {10.1145/3483529.3483731},
abstract = {A new master university programme on STEAM + SciArt is presented. It will be taught in University of Seville (Spain).Its objectives, structure and subjects are further described.},
booktitle = {Proceedings of the 10th International Conference on Digital and Interactive Arts},
articleno = {84},
numpages = {2},
keywords = {Computational thinking, Educational programming, STEAM-STEAM-STEAM+A, SciArt},
location = {Aveiro, Portugal, Portugal},
series = {ARTECH '21}
}

@inproceedings{10.1145/3669947.3669959,
author = {Shaheen, Anjuman and Fotaris, Panagiotis},
title = {Applying Reflective Game Design Frameworks (RGD) through the Lens of Design Thinking in Developing Serious Game},
year = {2024},
isbn = {9798400718083},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3669947.3669959},
doi = {10.1145/3669947.3669959},
abstract = {Reflective learning is one of the key stages in experiential learning, providing essential for effective knowledge acquisition. In recent years, the recognition of games as facilitators of experiential learning has grown, highlighting their innate suitability for reflective learning. The Reflective Game Design (RGD) framework is a new tool for incorporating reflective learning into game-based leading approaches, amplifying the reflective and experiential learning process. This study discusses the practical application of the RGD framework, guided by the principles of “Design Thinking”, to create a user-centric development process. This paper presents a case study on developing a serious digital game targeting “self-awareness among young adults”. By applying the RGD framework guided by design thinking, the study adopts an iterative design process, user empathy, and reflective practices to offer insights into integrating these frameworks effectively. The positive findings from user surveys indicate a strong connection between players and the game, suggesting its potential for future educational use. This research contributes to the ongoing discourse on interactive and educational game design, providing valuable perspectives for researchers, developers, and educators.},
booktitle = {Proceedings of the 2024 5th International Conference on Education Development and Studies},
pages = {14–20},
numpages = {7},
keywords = {Game-Based Learning (GBL), Reflective Game Design (RGD), design thinking, experiential learning, serious games},
location = {Cambridge, United Kingdom},
series = {ICEDS '24}
}

@inproceedings{10.1145/3430665.3456313,
author = {Salac, Jean and Thomas, Cathy and Butler, Chloe and Franklin, Diana},
title = {Understanding the Link between Computer Science Instruction and Reading \&amp; Math Performance},
year = {2021},
isbn = {9781450382144},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3430665.3456313},
doi = {10.1145/3430665.3456313},
abstract = {Worldwide, national initiatives have led to many school districts implementing computing curricula at the primary level. At that age, students are learning the foundational skills of reading and math. It is important to understand how computing can influence the development of these skills. While some argue that learning computing sharpens problem-solving skills that are applicable to other subjects, evidence supporting this belief is thin.In a quasi-experimental study of fourth-grade (ages 9-10) students, we compared state reading and math test scores of students receiving computing instruction with students who did not. Our findings demonstrated that a more open-ended, less scaffolded form of computing instruction was linked to performance gains in math, but not in reading (F(2, 232)=11.08, p&lt; .01, ηp2=.0625). When looking at students who face academic challenges that can impact reading and math, the same trend applied to students with economic disadvantages and students with limited English proficiency, but not for students with disabilities. These results suggest that moderately scaffolded computing instruction supports the development of skills applicable to math, a step towards better understanding the relationship between learning opportunities in computing and outcomes in other subjects.},
booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
pages = {408–414},
numpages = {7},
keywords = {computational thinking, elementary/primary education, math, reading},
location = {Virtual Event, Germany},
series = {ITiCSE '21}
}

@inproceedings{10.1145/3408877.3432393,
author = {Rodr\'{\i}guez-Garc\'{\i}a, Juan David and Moreno-Le\'{o}n, Jes\'{u}s and Rom\'{a}n-Gonz\'{a}lez, Marcos and Robles, Gregorio},
title = {Evaluation of an Online Intervention to Teach Artificial Intelligence with LearningML to 10-16-Year-Old Students},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432393},
doi = {10.1145/3408877.3432393},
abstract = {The inclusion of artificial intelligence (AI) in education is increasingly highlighted by international organizations and governments around the world as a cornerstone to enable the adoption of AI in society. That is why we have developed LearningML, aiming to provide a platform that supports educators and students in the creation of hands-on AI projects, specifically based on machine learning techniques. In this investigation we explore how a workshop on AI and the creation of programming projects with LearningML impacts the knowledge on AI of students between 10 and 16 years. 135 participants completed all phases of the learning experience, which due to the COVID-19 pandemic had to be performed online. In order to assess the AI knowledge we created a test that includes different kinds of questions based on previous investigations and publications - resulting in a reliable assessment instrument. Our findings show that the initiative had a positive impact on participants? AI knowledge, being the enhancement especially important for those learners who initially showed less familiarity with the topic. We observe, for instance, that while previous ideas on AI revolve around the term robot, after the experience they do around solve and problem. Based on these results we suggest that LearningML can be seen as a promising platform for the teaching and learning of AI in K-12 environments. In addition, researchers and educators can make use of the new instrument we provide to evaluate future educational interventions.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {177–183},
numpages = {7},
keywords = {K-12, artificial intelligence, assessment, computational thinking, machine learning},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3408877.3439505,
author = {Mike, Koby and Hazzan, Orit},
title = {How Can Computer Science Educators Benefit from Data Science Education?},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3439505},
doi = {10.1145/3408877.3439505},
abstract = {Data science in an emerging interdisciplinary field integrating knowledge and skills from computer science, statistics, and an application domain. The contribution of computer science education to the field of data science education is therefore evident. As computer science educators, however, we can benefit from adapting concepts and methods of data science education as well. For example, working with real data sets, a common practice in data science education, can benefit computer science students, giving them better sense of real-life problems; Statistical thinking, a fundamental thinking skill for data scientists, can enhance computational thinking as a real-life problem-solving skill. This BOF will provide a platform to discuss both the possible benefits computer science educators can earn from the emerging field of data science education and practical pedagogical methods to achieve these benefits.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {1363},
numpages = {1},
keywords = {computer science education, data science education, interdisciplinarity, real-life data, real-life problem solving},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3478432.3499265,
author = {Koornneef, Stacey A. and Bradbury, Jeremy S. and Miljanovic, Michael A.},
title = {Run, Llama, Run: A Collaborative Physical and Online Coding Game for Children},
year = {2022},
isbn = {9781450390712},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3478432.3499265},
doi = {10.1145/3478432.3499265},
abstract = {Computational thinking and computer science are now being introduced in K-5 classrooms and this has led to a demand for more engaging and interactive tools designed for a younger audience. Educational games and block-based programming are two approaches that have been shown to be effective at engaging children to learn computer science. While existing tools have value, they also have limitations with respect to their support for collaborative learning and with respect to equitable access. Run, Llama, Run, is a collaborative educational game designed to be played by K-5 students both with and without access to a tablet or computer. The game includes physical programming blocks where a group of students work together to find a solution for a given scenario. A digital interface is available to execute and animate student solutions and a non-digital alternative allows students to act out their solutions. This demo of Run, Llama, Run provides a chance for participants to play both versions of the game and observe the potential impact this game could have for students.},
booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
pages = {1177},
numpages = {1},
keywords = {collaborative learning, educational game, k-5 computer science education},
location = {Providence, RI, USA},
series = {SIGCSE 2022}
}

@inproceedings{10.1145/3202185.3202738,
author = {Yu, Junnan and Roque, Ricarose},
title = {A survey of computational kits for young children},
year = {2018},
isbn = {9781450351522},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3202185.3202738},
doi = {10.1145/3202185.3202738},
abstract = {This paper presents a survey of computational kits that enable young children (ages 7 years old and under) to explore computing ideas and practices. We examined physical, virtual, and hybrid kits across three different perspectives: how they are designed, how they support children to explore computational concepts and practices, and how they enable children to engage in a range of projects and activities. Based on our analysis, we present design suggestions and opportunities to expand the possibilities in how children can engage in computing, what kinds of projects children can make, and what kinds of computational ideas children can explore.},
booktitle = {Proceedings of the 17th ACM Conference on Interaction Design and Children},
pages = {289–299},
numpages = {11},
keywords = {coding, computational thinking, early childhood},
location = {Trondheim, Norway},
series = {IDC '18}
}

@inproceedings{10.1145/3446871.3469777,
author = {Dawson, Trent},
title = {The Block-based, Text-based, and the CS1 Prepared},
year = {2021},
isbn = {9781450383264},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3446871.3469777},
doi = {10.1145/3446871.3469777},
abstract = {For over 50 years, computer scientists whose backgrounds span many academic and corporate affiliations have attempted to truncate a novice programmer’s investment into their learning that might expedite the length of time required to advance from beginner to intermediate programmer. Widely accepted innovations in programming languages that use blocks instead of text to maintain novices’ motivation and attention have replaced some conventional text-based pedagogies at the pre-college level [8]. This study aims to contribute new knowledge to the Computer Science Education (CSEd) field to empirically validate whether text or block-based languages optimally prepare high school students for success in undergraduate level CS1 (Introduction to Computer Science) courses. The research sub-focus aims to distinguish the significance of equitable preparation between students from underserved communities and their peers arriving at college from affluent areas. This study introduces a 7-week, mixed-methods inquiry aimed at entering first-year undergraduate students enrolled in CS1, exploring their prior programming knowledge and experiences that might establish a relationship among high school programming curricula and learners’ CS1 achievement.},
booktitle = {Proceedings of the 17th ACM Conference on International Computing Education Research},
pages = {413–414},
numpages = {2},
keywords = {CS1, Computing education, computational thinking, computer science education},
location = {Virtual Event, USA},
series = {ICER 2021}
}

@inproceedings{10.1145/3287324.3287423,
author = {Anton, Gabriella and Wilensky, Uri},
title = {One Size Fits All: Designing for Socialization in Physical Computing},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3287423},
doi = {10.1145/3287324.3287423},
abstract = {National and state educational initiatives are increasingly prioritizing computer science and computational thinking as valued sets of skills and practices. However, despite ongoing efforts to broaden participation in computing, the field faces increasing underrepresentation of women and other racial and ethnic groups. In this paper, we argue that physical computing can provide rich, varied entryways into computing practices, and that kits that support social or collaborative use may be more compelling for underrepresented groups. We present the design of a scaled-up physical computing kit, called StegaCircuits, which we created to foster more social, exploratory introductions to computing. We present preliminary data collected during user tests at a Maker Faire that suggest StegaCircuits supports social introductions to physical computing through multi-user interaction. Finally, we highlight promising facets of the design that may positively impact cognitive and emotional responses to computing fields.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {825–831},
numpages = {7},
keywords = {design, physical computing, socialization},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3450329.3478314,
author = {Corral, Luis and Fronza, Ilenia and Pahl, Claus},
title = {Block-based Programming Enabling Students to Gain and Transfer Knowledge with a No-code Approach},
year = {2021},
isbn = {9781450383554},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3450329.3478314},
doi = {10.1145/3450329.3478314},
abstract = {In this article, we describe our experience designing and teaching a curriculum on mobile software development that has benefitted from the no-code philosophy leveraging the power of block-based programming tools. We review a journey of 10 years using block-based programming platforms to lay foundations on software development skills, and empower the creative potential of high school students. Our objective is to provide a review of the evolution, capabilities and technical coverage of the block-based software platforms, and to discuss the impact that we have observed on users and developers who have become acquainted on the use of block-based programming tools through our courses},
booktitle = {Proceedings of the 22nd Annual Conference on Information Technology Education},
pages = {55–56},
numpages = {2},
keywords = {computational thinking, education},
location = {SnowBird, UT, USA},
series = {SIGITE '21}
}

