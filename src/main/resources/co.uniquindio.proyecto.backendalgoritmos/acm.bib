@inproceedings{10.1145/3641555.3705131,
author = {Joshi, Deepti and Joswick, Candace and Albert, Jennifer and Jocius, Robin and Blanton, Melanie and Petrulis, Robert and Dawson, Trent},
title = {Assessing Elementary Teachers' Knowledge of Integrated Computational Thinking},
year = {2025},
isbn = {9798400705328},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641555.3705131},
doi = {10.1145/3641555.3705131},
abstract = {During the UnboxingCT project summer professional development, the Integrated CT Assessment was piloted with 72 elementary teachers. The assessment is based on computational thinking integration literature and asks teachers to identify different computational thinking concepts in content area scenarios. The assessment allowed us to identify which computational thinking concepts teachers were most familiar with prior to the professional development and assess changes in their understanding following the professional development. Our next step will be validation of the assessment with a larger group of teachers.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1501–1502},
numpages = {2},
keywords = {assessment, computational thinking, integrated assessment, teacher assessment, teacher professional development},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@inproceedings{10.1145/3649217.3653565,
author = {Pasterk, Stefan and Benke, Gertraud},
title = {Computational Thinking for Self-Regulated Learning},
year = {2024},
isbn = {9798400706004},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3649217.3653565},
doi = {10.1145/3649217.3653565},
abstract = {In this theoretical paper, we compare computational thinking and self-regulated learning. Many studies use self-regulated learning to foster the acquisition of computational thinking competencies. Self-regulated learning skills are themselves beneficial for any learning process; here, we argue that the relationship between self-regulated learning and computational thinking is closer than the simple observation that self-regulated learning strategies support the acquisition of computational thinking competencies. We sustain that self-regulated learning and computational thinking competencies share many features (and have some differences), which would support synergistic effects so that not only can self-regulated learning be used to attain computational thinking competencies, but computational thinking activities can also be used to foster features of self-regulated learning competencies.},
booktitle = {Proceedings of the 2024 on Innovation and Technology in Computer Science Education V. 1},
pages = {640–645},
numpages = {6},
keywords = {computational thinking, secondary school, self-regulated learning},
location = {Milan, Italy},
series = {ITiCSE 2024}
}

@inproceedings{10.1145/3617553.3617886,
author = {Gerini, Lorenzo and Delzanno, Giorgio and Guerrini, Giovanna and Solari, Fabio and Chessa, Manuela},
title = {Gamified Virtual Reality for Computational Thinking},
year = {2023},
isbn = {9798400703737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3617553.3617886},
doi = {10.1145/3617553.3617886},
abstract = {In Computer Science Education, coding activities are extremely important to teach younger students the basics of programming and computational thinking. To provide an immersive experience, in this paper, we propose VRCoding, a Virtual Reality (VR)-based block coding system. VRCoding can teach computational thinking in an immersive Virtual Reality environment, exploiting passive haptics to improve interaction and give tactile feedback to the users. Passive haptics is obtained using simple physics placeholders, i.e., textured parallelepipeds, that are tracked in real-time, and aligned with the coding blocks in VR.  
The system is tested on a group of secondary school users, performing simple coding exercises with a standard monitor-based block coding environment and with the proposed VRCoding block language. Results show positive feedback concerning the sense of presence and the user experience.},
booktitle = {Proceedings of the 2nd International Workshop on Gamification in Software Development, Verification, and Validation},
pages = {13–21},
numpages = {9},
keywords = {virtual reality, passive haptics, gamification, extended reality, computational thinking, coding},
location = {San Francisco, CA, USA},
series = {Gamify 2023}
}

@inproceedings{10.1145/3617650.3624926,
author = {Garcia, Dan and Garcha, Sonia and Mukund, Madhavan and Shah, Vipul},
title = {Best Practices for Developing Computational Thinking},
year = {2023},
isbn = {9798400703744},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3617650.3624926},
doi = {10.1145/3617650.3624926},
abstract = {CSforALL is an umbrella term for a movement that seeks to bring engaging, culturally-relevant, and meaningful computer science to all students. It includes many avenues for learning – after-school outreach activities, once-a-year ''Hour of Code'' activities as well as formalized instruction in classes, led by an inspiring and well-prepared teacher. There is a perennial need to support pre-service and in-service teachers with curricula and pedagogical content knowledge (PCK) so they can be successful in the classroom, but where to start?Jeannette Wing has long evangelized computational thinking (CT) as a skill ''for everyone, everywhere. Computational thinking will be a reality when it is so integral to human endeavors it disappears as an explicit philosophy''. [2] We have found that CT offers a remarkable foundation of engagement, intuition, and grounding upon which to build higher-level computer science fluency. This panel brings together four seasoned experts who have collectively provided computer science and CT professional development to a vast multitude of teachers and students to share their best practices.},
booktitle = {Proceedings of the ACM Conference on Global Computing Education Vol 2},
pages = {183–184},
numpages = {2},
keywords = {computational thinking, K-12 professional development, CSforALL},
location = {Hyderabad, India},
series = {CompEd 2023}
}

@inproceedings{10.1145/3641555.3705127,
author = {Veng, Sotheara and Zhang, Yifan and Bergwall, Ekaterina and Rutherford, Teomara},
title = {Analyzing Computational Thinking Gameplay: Identifying Struggles and the Role of Experience},
year = {2025},
isbn = {9798400705328},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641555.3705127},
doi = {10.1145/3641555.3705127},
abstract = {Computational thinking (CT) skills are essential for navigating daily life, but how best to teach these skills is still being explored. Educational programming games can provide engaging environments to develop CT, yet uncovering student struggles during gameplay remains challenging. This study analyzed 15 undergraduates with varying programming experience playing the CT game, Fox and Field, utilizing gameplay videos, heart rate data, and surveys. Results revealed common struggle points in understanding the character's perspective, degree angles, and debugging, with notable differences between novice and experienced players. Findings suggest support targeting abstraction, pattern recognition, and debugging skills to improve future game design and scaffolding.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1649–1650},
numpages = {2},
keywords = {computational thinking, educational programming game},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@inproceedings{10.1145/3556787.3556788,
author = {Tedre, Matti},
title = {Computational Thinking 2.0},
year = {2022},
isbn = {9781450398534},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3556787.3556788},
doi = {10.1145/3556787.3556788},
abstract = {Machine learning (ML) has triggered major changes across a great number of computing fields. People’s lives today are full of ML-driven services: eerily accurate recommendations, ability to automatically tag one’s friends in photos, and well working translation systems, for example. This keynote talk presents how ML technology upends the computational thinking (CT) consensus in computing education. It begins by presenting why and how a number of classical “CT1.0” concepts need to be re-thought for the “CT2.0” (machine learning) era, from control structures and problem-solving workflow, to correctness and notional machines. Based on a series of classroom interventions on teaching machine learning to middle schoolers, conducted by DIGS RC at University of Eastern Finland, the talk also presents how classroom pedagogy shifts between CT1.0 and CT2.0.},
booktitle = {Proceedings of the 17th Workshop in Primary and Secondary Computing Education},
articleno = {1},
numpages = {2},
keywords = {School, Machine learning, K-12, Computational thinking, Artificial intelligence},
location = {Morschach, Switzerland},
series = {WiPSCE '22}
}

@inproceedings{10.1145/3649409.3691084,
author = {Agbo, Friday Joseph and Everetts, Connor},
title = {Towards Computing Education for Lifelong Learners: Exploring Computational Thinking Unplugged Approaches},
year = {2024},
isbn = {9798400706042},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3649409.3691084},
doi = {10.1145/3649409.3691084},
abstract = {Older adults are underrepresented in computing education; broadening participation in computing has remained predominantly at K-12 and college settings. Yet, the population of older adults is increasing across many regions. Strategies for broadening participation in computing education for adult learners have been under-explored. This poster reports our effort towards broadening participation in computing for adult learners by exploring how computational thinking problem-oriented unplugged activities might help to gently introduce older adults into computing education. Being an exploratory study, data was collected using a mixed method approach. This report presents preliminary findings that suggest the potential benefits of computing education for older adults, including social collaboration and demonstration of computational thinking practices that could help them to remain active while aging. Moreover, future research direction in this regard is also discussed.},
booktitle = {Proceedings of the 2024 on ACM Virtual Global Computing Education Conference V. 2},
pages = {295–296},
numpages = {2},
keywords = {adults education, broadening participation, computational thinking, computing education, lifelong learning},
location = {Virtual Event, NC, USA},
series = {SIGCSE Virtual 2024}
}

@inproceedings{10.1145/3605390.3610815,
author = {Bellino, Alessio},
title = {Demo: Teaching computational thinking with Protobject},
year = {2023},
isbn = {9798400708060},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3605390.3610815},
doi = {10.1145/3605390.3610815},
abstract = {In today’s rapidly changing world, computational thinking is becoming increasingly essential. However, many people, including middle and high school students, face obstacles when learning to code, such as a lack of motivation and engagement. To address this challenge, we present Protobject, an accessible tool that teaches programming in a unique and interactive way. Protobject allows people to explore programming concepts through hands-on physical computing, providing a more engaging and motivating learning experience. In this demonstration, we invite conference attendees to delve into the features of Protobject and witness its potential for enhancing programming education. Participants will have the chance to interact with the tool’s user-friendly interface and explore a range of 22 interactive learning activities that offer different levels of difficulty.},
booktitle = {Proceedings of the 15th Biannual Conference of the Italian SIGCHI Chapter},
articleno = {53},
numpages = {3},
keywords = {learning platform, learning activities, computational thinking},
location = {Torino, Italy},
series = {CHItaly '23}
}

@inproceedings{10.1145/3587103.3594203,
author = {Lehtim\"{a}ki, Taina and Monahan, Rosemary and Mooney, Aidan and Casey, Kevin and Naughton, Thomas J.},
title = {Computational Thinking Resources Inspired by Bebras},
year = {2023},
isbn = {9798400701399},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3587103.3594203},
doi = {10.1145/3587103.3594203},
abstract = {In this poster, we highlight computational thinking resources for schools from the PACT team at Maynooth University, Ireland. The resources are derived from tasks from the Bebras international computational thinking initiative. The different modalities work together throughout the school year to provide initial exposure to computational thinking, and include an obstacle course, seasonal tasks, and a workbook.},
booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
pages = {663},
numpages = {1},
keywords = {Bebras tasks, K-12, computational thinking, unplugged},
location = {Turku, Finland},
series = {ITiCSE 2023}
}

@inproceedings{10.1145/3702163.3702452,
author = {Ara\'{u}jo, Cristiana and Henriques, Pedro Rangel and Cerqueira, Jo\~{a}o Jos\'{e}},
title = {OntoCnE \&amp; Neuroeducation Guidelines: An approach to developing Computational Thinking},
year = {2025},
isbn = {9798400717819},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3702163.3702452},
doi = {10.1145/3702163.3702452},
abstract = {Computer Programming (CP) is difficult to teach and learn. Many students who enroll in CP courses have difficulty learning to program, as they have deficits in problem-solving skills and are unable to understand abstract programming concepts. Some studies also state that teaching methods are often not the most appropriate as they are not personalized to each student’s needs and do not complement their learning styles. We believe that Computational Thinking (CT) can help alleviate the difficulties in learning to program, especially if it is developed from an early age. However, it is also crucial that teachers use effective methods to help their students develop CT skills. There are several Learning Resources (LR) (digital or paper format) to develop CT skills, however, we argue that Neuroeducation can contribute to improving the effectiveness of these LR in the teaching and learning process. The evidence about the brain’s learning process can be transformed into principles applicable in Education (Neuroeducation). To understand how we could train CT at various levels of education we built an ontology, OntoCnE, that describes the CT and CP domains. OntoCnE is composed of 3 layers that define: how to develop CT; which concepts should be taught at each level of education; and appropriate training materials. This paper aims to present a CT development approach based on this ontology together with Neuroeducation guidelines. The result of our research is the fourth layer for OntoCnE, which defines the Neuroeducation guidelines to characterize the materials. To illustrate our proposal, we will use LR PathIt as a case study. This approach can contribute to innovative and more efficient training of CT.},
booktitle = {Proceedings of the 2024 16th International Conference on Education Technology and Computers},
pages = {435–441},
numpages = {7},
keywords = {Computer Programming, Computational Thinking, Ontology, OntoCnE, Learning Resources, Neuroeducation},
location = {
},
series = {ICETC '24}
}

@inproceedings{10.1145/3626253.3635561,
author = {Castle, Sarah D.},
title = {Embracing Mathematical Conjecture Through Coding and Computational Thinking},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635561},
doi = {10.1145/3626253.3635561},
abstract = {Mathematics and computer science education have an intertwined history as proof undergirds both disciplines. This initial instrumental case study follows 16 different computational science students through a series of 8 linear algebra modules. Thematic analysis was used to highlight that when students learn mathematics through computation, opportunities for conjecture can be fostered alongside computational thinking.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1594–1595},
numpages = {2},
keywords = {computational mathematics, computational thinking, conjecture, proof},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3678726.3678748,
author = {Susanti, Reni Dwi and Lukito, Agung and Ekawati, Rooselyna},
title = {Computational Thinking on Mathematical Problem-Solving: Bibliometric Theme and Aspect},
year = {2024},
isbn = {9798400717611},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3678726.3678748},
doi = {10.1145/3678726.3678748},
abstract = {This study aims to investigate current trends and key elements of computational thinking in problem-solving within mathematics education. A systematic literature review was conducted using the 2013-2013 Scopus database, focusing on the keyword "computational thinking in mathematics education" for document collection. Data analysis was visualized using R-studio software. The thematic analysis revealed two major fields that extensively research computational thinking: education and engineering. Additionally, six research themes emerged from the analysis, including Mathematics, Computer Science, programming, STEM, robotics, and engineering. Key aspects for identifying computational thinking in solving mathematical problems encompass problem identification, decomposition, pattern recognition, abstraction, algorithms, and debugging.},
booktitle = {Proceedings of the 2024 8th International Conference on Education and Multimedia Technology},
pages = {269–275},
numpages = {7},
keywords = {aspect, computational thinking, mathematics problem-solving, trend},
location = {Tokyo, Japan},
series = {ICEMT '24}
}

@article{10.5555/3715638.3715667,
author = {Chang, Rocky K. C.},
title = {Using Problem-Driven Learning to Teach Computational Thinking in CS1},
year = {2024},
issue_date = {September 2024},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {40},
number = {4},
issn = {1937-4771},
abstract = {This experience report describes the author's use of the classic man-cabbage-goat-wolf (MCGW) riddle to teach the main elements of computational thinking in CS1. Instead of teaching each computational thinking element individually, in the process of solving the MCGW problem the students are able to understand the process of abstracting a problem to a representation that can be understood by computer, finding a suitable algorithm to solve the abstracted problem, and decomposing the problem into different logical and more manageable parts. The survey responses from two recent classes clearly validate the effectiveness of this problem-driven approach even for a large class of very diverse backgrounds.},
journal = {J. Comput. Sci. Coll.},
month = sep,
pages = {140–149},
numpages = {10}
}

@inproceedings{10.1145/3641554.3701906,
author = {Hassan, Mohammed and Chen, Yuxuan and Denny, Paul and Zilles, Craig},
title = {On Teaching Novices Computational Thinking by Utilizing Large Language Models Within Assessments},
year = {2025},
isbn = {9798400705311},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641554.3701906},
doi = {10.1145/3641554.3701906},
abstract = {Novice programmers often struggle to develop computational thinking (CT) skills in introductory programming courses. This study investigates the use of Large Language Models (LLMs) to provide scalable, strategy-driven feedback to teach CT. Through think-aloud interviews with 17 students solving code comprehension and writing tasks, we found that LLMs effectively guided decomposition and program development tool usage. Challenges included students seeking direct answers or pasting feedback without considering suggested strategies. We discuss how instructors should integrate LLMs into assessments to support students' learning of CT.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 1},
pages = {471–477},
numpages = {7},
keywords = {code comprehension, debuggers, execution, large language models},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@article{10.1145/3648477,
author = {Espinal, Alejandro and Vieira, Camilo and Magana, Alejandra J.},
title = {Professional Development in Computational Thinking: A Systematic Literature Review},
year = {2024},
issue_date = {June 2024},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {24},
number = {2},
url = {https://doi.org/10.1145/3648477},
doi = {10.1145/3648477},
abstract = {This paper presents a systematic literature review of professional development programs in computational thinking (CT). CT has emerged as an essential set of skills that everyone should develop to participate in a global society. However, there were no pre-service or in-service teacher programs to integrate CT into the K–12 classrooms until very recently. Thus, it is important to identify how educators and researchers address the challenges to prepare the next generation of students and what gaps persist in the current literature. We review existing work in this field from two perspectives: First, we analyze the learning outcomes, assessment methods, pedagogical approaches, and pedagogical tools used in the professional development programs in CT. Second, we examine how these programs assess the teachers’ knowledge and skills as outcomes. We used the technological pedagogical and content knowledge (TPACK) framework to characterize existing literature and identify possible gaps in the preparation of pre-service and in-service teachers in CT. Our results suggest that (1) existing evidence is limited to developed countries; (2) many studies are only focusing on teachers understanding the concepts but do not explore how the participants evaluate or create learning activities; (3) no studies look into classroom observations as part of the program, which limits our understanding to how these programs work; and (4) most programs use block-based programming languages as the tool to develop student CT. While block-based programming languages are used for introductory training programs, students are often expected to transfer their learning to more professional programming languages.},
journal = {ACM Trans. Comput. Educ.},
month = may,
articleno = {27},
numpages = {24},
keywords = {Computational thinking, professional development, literature review}
}

@inproceedings{10.1145/3699538.3699578,
author = {Kunz, Katrin},
title = {The Association between Computational Thinking and Mental Models in Talented Children (Doctoral Consortium)},
year = {2024},
isbn = {9798400710384},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3699538.3699578},
doi = {10.1145/3699538.3699578},
abstract = {This doctoral research explores the link between computational thinking (CT) and mental models in talented children, addressing a gap in empirical studies on effects of computer science interventions. The research employs a mixed methods approach, utilizing randomized controlled field studies and interviews with primary school students attending computational thinking courses. Thus, two new computational thinking interventions have been developed and will be evaluated by a pilot, efficacy, and effectiveness study including either a wait-list or treated control group. The test instrument measuring mental models will first be employed in semi-structured interviews with talented children attending these computational thinking courses and then subsequently implemented in randomized controlled field trials to compare the effects of the courses on computational thinking abilities and the development of stable and viable mental models.},
booktitle = {Proceedings of the 24th Koli Calling International Conference on Computing Education Research},
articleno = {38},
numpages = {2},
keywords = {computational thinking, mental model, mixed methods, talent development},
location = {
},
series = {Koli Calling '24}
}

@article{10.1145/3717838,
author = {Wee, Chyanna and Wang, Lillian Yee Kiaw and Ong, Huey Fang},
title = {TeachVR: An Immersive Virtual Reality Framework for Computational Thinking based on Student Preferences},
year = {2025},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3717838},
doi = {10.1145/3717838},
abstract = {This study presents the development of a student-centric framework for utilizing virtual reality (VR) technologies in education, specifically focusing on enhancing computational thinking skills. While numerous frameworks exist in this domain, they often lack consideration of student preferences, which are integral for fostering learner autonomy. Our proposed framework, with components developed from the constructivist learning theory, emphasises creating knowledge through interaction with the environment, focusing on autonomy, mastery, and purpose as drivers of intrinsic outcomes. Through a survey administered to hundred and fifty-seven participants, we sought to identify student-preferred strategies for learning computational thinking skills via VR interventions. Results highlighted key challenges students face when working on computational tasks are related to algorithmic and abstraction thinking. To ease the aforementioned challenges, our findings suggest a preference among students for situated-based learning approaches within VR environments. Additionally, participants recognized the importance of motivational outcomes in improving autonomy and mastery within VR-based learning tasks. Students also preferred tasks that enhanced self-efficacy, contributing to a greater sense of purpose in their learning endeavours. Overall, this investigation sets a foundation for more student-centric, constructivist, and intrinsically-based VR frameworks in education.},
note = {Just Accepted},
journal = {ACM Trans. Comput. Educ.},
month = feb,
keywords = {Virtual Reality}
}

@inproceedings{10.1145/3626253.3635527,
author = {McCall, Lauren and Allen, Brittney and Freeman, Jason and Garrett, Stephen and Grossman, Sabrina and Paz, Jed and Edwards, Doug and McKlin, Tom and Lee, Taneisha},
title = {Developing Computational Thinking in Middle School Music Technology Classrooms},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635527},
doi = {10.1145/3626253.3635527},
abstract = {To engage diverse populations of students who may not self-select into computing courses, a curriculum for a middle school music technology + computer science course that addresses learning standards for both subjects was developed and deployed. Students who engage with the curriculum learn modern music production techniques and computational thinking concepts. This is through a mix of traditional approaches to music technology education (digital audio workstations) and computational approaches via a culturally relevant learning platform that introduces students to coding through music production and remixing. This poster reflects on the last two years of curriculum design and deployment, teacher training, and student and educator engagement and feedback to provide insight into the teaching (and learning) of computational thinking in the music technology classroom.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1746–1747},
numpages = {2},
keywords = {broadening participation, computing, interest formation, middle school, music, persistence},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3587102.3588818,
author = {Simmonds, Jocelyn and Diaz, Constanza and Estay, Carlos},
title = {Introducing Computational Thinking at Vocational High Schools},
year = {2023},
isbn = {9798400701382},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3587102.3588818},
doi = {10.1145/3587102.3588818},
abstract = {The Technovation Girls program (TG) is an after-school program, where teams of female school students follow a software ideation process to address one of the UN's Sustainable Development goals. Concretely, they prototype a mobile application which they later pitch to judges. The TG curriculum gives students the tools they need to carry out this challenge, with activities focusing on entrepreneurship, product ideation and pitching, as well as coding. Previous evaluations of this program have focused on student and mentor perceptions and attitudes, collected through surveys, observation, focus groups and interviews. In this paper, we evaluate the effect that the coding part of the TG curriculum has on students' computational thinking skills, specifically in Chile, where the TG curriculum was expanded to a year to account for differences in the school curriculum. Also, in this experience, the TG program was carried out during class hours, and at both single- and mixed-gender vocational high schools. We applied an existing computational thinking test to the 2020 cohort (approx. 1000 students), before and after participating in the program, analyzing the results by school, gender and age. We found a slight improvement in test scores, with a more positive effect in male students.},
booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 1},
pages = {68–74},
numpages = {7},
keywords = {computational thinking, gender, mobile apps, vocational schools},
location = {Turku, Finland},
series = {ITiCSE 2023}
}

@inproceedings{10.1145/3689535.3689545,
author = {Sheridan, Frances and Stynes, Paul and Pathak, Pramod and Quille, Keith},
title = {Computational Thinking Assessment Tools: A Systematic Review of the Literature (Initial Findings).},
year = {2024},
isbn = {9798400711770},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3689535.3689545},
doi = {10.1145/3689535.3689545},
abstract = {Since Jeanette Wing’s influential 2006 article, research into developing Computational Thinking (CT) skills has surged. Despite ongoing debates about CT definitions and components, reliable and valid assessment tools are crucial for measuring CT skill impact and evaluating related interventions. This systematic literature review seeks to identify CT assessment tools suitable for undergraduate computing students, by investigating the central question "What tools are available for the assessment of CT skills?". A comprehensive search of academic databases for CT assessment publications since 2006 yielded 202 unique articles. After applying exclusion criteria, 72 relevant articles were analyzed. The selected publications were categorized by tool type, and focus, examining tool reliability and validity. This paper presents initial findings from this review.},
booktitle = {Proceedings of the 2024 Conference on United Kingdom \&amp; Ireland Computing Education Research},
articleno = {19},
numpages = {1},
keywords = {Assessment, Computational Thinking, Computing, Higher Education},
location = {Manchester, United Kingdom},
series = {UKICER '24}
}

