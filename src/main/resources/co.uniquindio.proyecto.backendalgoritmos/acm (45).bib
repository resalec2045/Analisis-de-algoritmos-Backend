@article{10.1145/3664825,
author = {Margulieux, Lauren E. and Liao, Yin-Chan and Anderson, Erin and Parker, Miranda C. and Calandra, Brendan D.},
title = {Intent and Extent: Computer Science Concepts and Practices in Integrated Computing},
year = {2024},
issue_date = {September 2024},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {24},
number = {3},
url = {https://doi.org/10.1145/3664825},
doi = {10.1145/3664825},
abstract = {Integrated computing curricula combine learning objectives in computing with those in another discipline, like literacy, math, or science, to give all students experience with computing, typically before they must decide whether to take standalone CS courses. One goal of integrated computing curricula is to provide an accessible path to an introductory computing course by introducing computing concepts and practices in required courses. This study analyzed integrated computing curricula to determine which CS practices and concepts are taught, how extensively the curricula are taught, and, by extension, how they might prepare students for later computing courses. The authors conducted a content analysis to examine primary and lower secondary (i.e., K-8) curricula that are taught in non-CS classrooms, have explicit CS learning objectives (i.e., CS+X), and that took 5+ hours to complete. Lesson plans, descriptions, and resources were scored based on frameworks developed from the K-12 CS Framework, including programming concepts, non-programming CS concepts, and CS practices. The results found that curricula most extensively taught introductory concepts and practices, such as sequences, and rarely taught more advanced content, such as conditionals. Students who engage with most of these curricula would have no experience working with fundamental concepts, like variables, operators, data collection or storage, or abstraction in the context of a program. While this focus might be appropriate for integrated curricula, it has implications for the prior knowledge that students should be expected to have when starting standalone computing courses.},
journal = {ACM Trans. Comput. Educ.},
month = aug,
articleno = {35},
numpages = {23},
keywords = {Integrated computing, computational thinking, CS+X, content analysis, curricula analysis, K-12 computer science education, primary school computer science education}
}

@inproceedings{10.1145/3328778.3372595,
author = {Russell, Ingrid and Rosiene, Carolyn Pe and Gold, Aaron},
title = {A CS Course for Non-Majors Based on the Arduino Platform},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3372595},
doi = {10.1145/3328778.3372595},
abstract = {We present a model for enhancing an introductory computer science course for non-majors through the use of the Arduino platform. We have developed and tested curricular modules and associated hands-on laboratories for this model. The use of the highly visual and interactive Arduino system has improved students' learning experiences, enabling them to apply and relate fundamental computational thinking concepts of algorithmic reasoning, data representation, and computational efficiency to real-world problems. Assessment results show that the approach has been effective. We present the curricular modules, our experiences using them, as well as assessment results.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1309},
numpages = {1},
keywords = {undergraduate instruction, non-majors, active learning},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3481312.3481347,
author = {K\"{o}rber, Nina and Bailey, Lisa and Greifenstein, Luisa and Fraser, Gordon and Sabitzer, Barbara and Rottenhofer, Marina},
title = {An Experience of Introducing Primary School Children to Programming using Ozobots (Practical Report)},
year = {2021},
isbn = {9781450385718},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3481312.3481347},
doi = {10.1145/3481312.3481347},
abstract = {Algorithmic thinking is a central concept in the context of computational thinking, and it is commonly taught by computer programming. A recent trend is to introduce basic programming concepts already very early on at primary school level. There are, however, several challenges in teaching programming at this level: Schools and teachers are often neither equipped nor trained appropriately, and the best way to move from initial “unplugged” activities to creating programs on a computer is still a matter of open debate. In this paper, we describe our experience of a project aiming at supporting local primary schools in introducing children to programming concepts using Ozobot robots. These robots have two distinct advantages: First, they can be programmed with and without computers, thus helping the transition from unplugged programming to programming with a computer. Second, they are small and easy to transport, even when used together with tablet computers. Although we learned in our outreach events that the use of Ozobots is not without challenges, our overall experience is positive and can hopefully support others in setting up first encounters with programming at primary schools.},
booktitle = {Proceedings of the 16th Workshop in Primary and Secondary Computing Education},
articleno = {23},
numpages = {6},
keywords = {Programming Education, Primary School Programming, Ozobots},
location = {Virtual Event, Germany},
series = {WiPSCE '21}
}

@inproceedings{10.1145/3545947.3576329,
author = {Herbert, Katherine G. and Anu, Vaibhav K. and Sultana, Kazi Zakia and Robila, Stefan and Ryan Miller, Jesse and Hagiwara, Sumi and Goldstein, Rebecca A. and Marlowe, Thomas},
title = {Professional and Capacity Building in K-12 Computer Science Education: A Multi-Faceted Approach},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3576329},
doi = {10.1145/3545947.3576329},
abstract = {States are moving to adopt Computer Science (CS) education standards to help K-12 teachers adapt and integrate computing /computational thinking (CT) concepts into the curriculum. These approaches also rely heavily on training current and pre-service teachers and creating opportunities to learn CS while also managing the rigors of their education career. This poster presents elements of the collaboration between the Department of CS and Department of Teaching and Learning at Montclair State University (MSU) to bring CS to pre- and in-service educators. Here we will highlight our curriculum work and professional development (PD) series. The New Jersey (NJ) Department of Education has adopted CS Education standards for K-12 and distinctly funded curriculum development and faculty formation programs. MSU has built programs that support teachers through PD experiences in CT and CS. In the 10-month period ending March 2023, we will offer 30 PD opportunities for a CS and CS education. To date, more than 200 educators have received PD to address their educational needs regarding CS curricula.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1384},
numpages = {1},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3341525.3393963,
author = {Russell, Ingrid and Duan, Zhuojun and Jung, Andrew},
title = {Introducing Data Analytics Concepts in a CS Course for Non-Majors},
year = {2020},
isbn = {9781450368742},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3341525.3393963},
doi = {10.1145/3341525.3393963},
abstract = {We present a curricular model for introducing data analytics concepts into an introductory computer science course for non-majors. This is accomplished through the design and implementation of hands-on laboratories projects using the Python programming language and associated tools. While introducing students to an important research area, we believe the use of these projects improves students' learning experiences, enabling them to apply and relate fundamental computational thinking concepts of algorithmic reasoning, data representation, and computational efficiency to data analytics problems. We present the curricular modules, as well as preliminary experiences using them.},
booktitle = {Proceedings of the 2020 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {551},
numpages = {1},
keywords = {undergraduate instruction, non-majors, data analytics},
location = {Trondheim, Norway},
series = {ITiCSE '20}
}

@inproceedings{10.1145/3402942.3403010,
author = {Troiano, Giovanni Maria and Schouten, Dylan and Cassidy, Michael and Tucker-Raymond, Eli and Puttick, Gillian and Harteveld, Casper},
title = {All Good Things Come in Threes: Assessing Student-Designed Games via Triadic Game Design},
year = {2020},
isbn = {9781450388078},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3402942.3403010},
doi = {10.1145/3402942.3403010},
abstract = {Game design is emerging in contemporary education, especially in constructionist curricula for student-centered and discovery learning. While previous work focused on assessing how complementary skills (e.g., computational thinking) develop through game design, few have attempted to assess the very games designed by students. Here, we show preliminary results on using the Triadic Game Design (TGD) model to assess the elements that may constitute a ”balanced” student-designed game in the context of constructionist learning. Our results show that TGD is viable to carry out such assessment. We conclude by discussing the limitations of our approach and propose directions for future work.},
booktitle = {Proceedings of the 15th International Conference on the Foundations of Digital Games},
articleno = {88},
numpages = {4},
keywords = {game design, constructionism, Scratch, Game-based learning},
location = {Bugibba, Malta},
series = {FDG '20}
}

@inproceedings{10.1145/3622758.3622889,
author = {Jhaveri, Samyak and Krone-Martins, Alberto and Lopes, Cristina V.},
title = {Cloning and Beyond: A Quantum Solution to Duplicate Code},
year = {2023},
isbn = {9798400703881},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3622758.3622889},
doi = {10.1145/3622758.3622889},
abstract = {Quantum computers are becoming a reality. The advantage of quantum computing is that it has the potential to solve computationally complex problems in a fixed amount time, independent of the size of the problem. However, the kinds of problems for which these computers are a good fit, and the ways to express those problems, are substantially different from the kinds of problems and expressions used in classical computing. Quantum annealers, in particular, are currently the most promising and available quantum computing devices in the short term. However, they are also the most foreign compared to classical programs, as they require a different kind of computational thinking.  
In order to ease the transition into this new world of quantum computing, we present a novel quantum approach to a well-known software problem: code clone detection. We express code clone detection as a subgraph isomorphism problem that is mapped into a quadratic optimization problem, and solve it using a DWave quantum annealing computer. We developed a quantum annealing algorithm that compares Abstract Syntax Trees (AST) and reports an energy value that indicates how similar they are.  

The motivation behind this research goes well beyond code duplicate detection: our approach paves the way into how to express software engineering problems as optimization problems that can be solved by quantum annealers.},
booktitle = {Proceedings of the 2023 ACM SIGPLAN International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software},
pages = {32–49},
numpages = {18},
keywords = {Subgraph Isomorphism, Quantum-Based Code Clone Detection, Quantum Computing, Quadratic Unconstrained Discrete Optimization (QUDO)},
location = {Cascais, Portugal},
series = {Onward! 2023}
}

@inproceedings{10.1145/3466725.3466765,
author = {Assaf, Dorit and Oh, Yungjin and Str\"{a}ssle, Sabrina},
title = {Incorporating Maker-Centered Learning in Formal Education: A workshop from teachers for teachers},
year = {2021},
isbn = {9781450389891},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3466725.3466765},
doi = {10.1145/3466725.3466765},
abstract = {Maker-centered learning environments with their media- and tool-rich open spaces are suggested to foster a variety of important skills such as collaboration, problem-solving, digital literacy, computational thinking etc. Many initiatives emerged that brought Making closer to students of compulsory education in the last couple of years. Many of these initiatives exist in informal learning settings, such as after-school programs, summer camps, optional courses in schools, libraries, museums etc. Currently, Making has not been established broadly in formal education. This is, however, necessary if a greater variety of students is aimed to be reached. In this workshop, teachers that are interested in Making will meet other teachers that act as early adopters. Our panel members already introduced Making in their classrooms and will speak of their experiences. The aim is to collect best practices and recommended courses of action for anyone that aims at introducing Making in their school.},
booktitle = {FabLearn Europe / MakeEd 2021 - An International Conference on Computing, Design and Making in Education},
articleno = {19},
numpages = {3},
keywords = {computer science education, STEM education, Making, Makerspace, Maker-centered learning, Formal education, Compulsory education},
location = {St. Gallen, Switzerland},
series = {FabLearn Europe / MakeEd 2021}
}

@inproceedings{10.1145/3545947.3576264,
author = {Mak, Janice and Rosato, Jennifer and Hosten, Melissa},
title = {Data Science Landscape in Preservice Teacher Education},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3576264},
doi = {10.1145/3545947.3576264},
abstract = {Tangential to the efforts to bring computer science (CS) into K-12 education, there has been increasing recognition of the critical role of data science (DS) in preparing future citizens to be able to gather, analyze, and represent data. With only 51\% of K-12 schools offering CS, however, and the critical need for students to engage in DS practices, there is the need to examine ways to integrate DS in other subjects. Our study explores the current landscape of DS in methods and content courses within preservice teacher pathways. This poster outlines a study in its preliminary stages that explores how faculty teaching math, science, and social studies methods and content courses in colleges of education: a) define DS, b) conceptualize DS as related to their course content, c) make connections between DS, CS, and/or computational thinking (CT). Taking a participatory design approach, this study will also explore research-based approaches to building the capacity of preservice faculty in DS to advance the practice of teaching CS in a scalable way to expand access in equitable ways to CS and CT.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1317},
numpages = {1},
keywords = {teacher education, pre-service programs, k-12 education, data science},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3116595.3116637,
author = {Arroyo, Ivon and Micciollo, Matthew and Casano, Jonathan and Ottmar, Erin and Hulse, Taylyn and Rodrigo, Ma. Mercedes},
title = {Wearable Learning: Multiplayer Embodied Games for Math},
year = {2017},
isbn = {9781450348980},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3116595.3116637},
doi = {10.1145/3116595.3116637},
abstract = {We present a new technology-based paradigm to support embodied mathematics educational games, using wearable devices in the form of SmartPhones and SmartWatches for math learning, for full classes of students in formal in-school education settings. The Wearable Learning Games Engine is web based infrastructure that enables students to carry one mobile device per child, as they embark on math team-based activities that require physical engagement with the environment. These Wearable Tutors serve as guides and assistants while students manipulate, measure, estimate, discern, discard and find mathematical objects that satisfy specified constraints. Multi-player math games that use this infrastructure have yielded both cognitive and affective benefits. Beyond math game play, the Wearable Games Engine Authoring Tool enables students to create games themselves for other students to play; in this process, students engage in computational thinking and learn about finite-state machines. We present the infrastructure, games, and results for a series of experiments on both game play and game creation.},
booktitle = {Proceedings of the Annual Symposium on Computer-Human Interaction in Play},
pages = {205–216},
numpages = {12},
keywords = {wearable learning, tutoring systems, mathematics, embodied cognition, educational games, computational thinking},
location = {Amsterdam, The Netherlands},
series = {CHI PLAY '17}
}

@inproceedings{10.1145/3027063.3027129,
author = {Melcer, Edward},
title = {Moving to Learn: Exploring the Impact of Physical Embodiment in Educational Programming Games},
year = {2017},
isbn = {9781450346566},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3027063.3027129},
doi = {10.1145/3027063.3027129},
abstract = {There has been increasing attention paid to the necessity of Computational Thinking (CT) and CS education in recent years. To address this need, a broad spectrum of animation programming environments and games have been created to engage learners. However, most of these tools are designed for the touchpad/mouse and keyboard, and few have been evaluated to assess their efficacy in developing CT/programming skills. This is problematic when trying to understand the validity of such designs for CS education, and whether there are alternative approaches that may prove more effective. My dissertation work helps address this problem. After creating a framework based on a meta-review that carefully dissects embodiment strategies in learning games, I am building and evaluating tangible and augmented reality versions of a CT game. I plan to examine how these different forms of physical interaction help to facilitate and enhance meaning-making during the learning process, and whether/how they improve related learning factors such as self-belief and enjoyment.},
booktitle = {Proceedings of the 2017 CHI Conference Extended Abstracts on Human Factors in Computing Systems},
pages = {301–306},
numpages = {6},
keywords = {programming, physical embodiment, embodied interaction, embodied cognition, educational games, computational thinking},
location = {Denver, Colorado, USA},
series = {CHI EA '17}
}

@inproceedings{10.1145/3564721.3564738,
author = {Friend, Michelle and Mcgill, Monica and Reinking, Anni},
title = {Solve This! K-12 CS Education Teachers’ Problems of Practice},
year = {2022},
isbn = {9781450396165},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3564721.3564738},
doi = {10.1145/3564721.3564738},
abstract = {Problem. Educational research identifies answerable questions, but often does not address the problems K-12 teachers identify as important. Further, academic research findings can be difficult for teachers to apply to their practices and unique contexts. Currently, little research exists on the lived experiences of primary and secondary instructors who teach computer science (CS) or computational thinking (CT) and also on the specific problems of practice teachers face when teaching CS. Research Question. What problems of practice do K-12 teachers face when teaching CS/CT?Method. Data for this qualitative study was collected using an online questionnaire distributed to teachers internationally. CS/CT teachers responded to an open-ended prompt asking for problems related to teaching CS. The data was analyzed using descriptive first-round coding and focused second-round coding. Validity was established through collaborative coding. Analysis was theorized using locus of control. Findings. Problems with students encompassed behavioral, cognitive, and attitudinal issues, as well as lack of home support or resources. Teachers identified many problems of policy notably stemming from lack of resources or support from administrators. A smaller number of challenges, such as lack of content knowledge, were situated within teachers themselves. While some problems such as student motivation are general, a number of responses identified unique challenges in CS education compared to other disciplines. Implications. Identifying problems faced by teachers can guide professional development offerings, help researchers develop studies that would result in meaningful improvement to CS education, and suggest policy decisions which would result in better outcomes for students.},
booktitle = {Proceedings of the 22nd Koli Calling International Conference on Computing Education Research},
articleno = {8},
numpages = {13},
keywords = {teachers, problems of practice, K-12},
location = {Koli, Finland},
series = {Koli Calling '22}
}

@inproceedings{10.1145/3653666.3656092,
author = {Levitt, Diane and Ray, Meg},
title = {Ecosystems That Build Equitable, K-5 Sustainable Computer Science Education},
year = {2024},
isbn = {9798400706264},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3653666.3656092},
doi = {10.1145/3653666.3656092},
abstract = {The rollout of computer science education has been dependent on a patchwork of uncoordinated professional learning experiences. This has left some schools serving students from underrepresented groups without an articulated, rigorous, joyful K-12 CS education. Based on our work with four urban schools serving such students, we propose that an ecosystem of support that prepares every administrator and teacher to include CS in every student's education with a whole school approach and sustained professional learning, is one way to assure an equitable, sustainable CS education. We propose changes in policy to scaffold such an ecosystem.},
booktitle = {Proceedings of the 2024 on RESPECT Annual Conference},
pages = {254–258},
numpages = {5},
keywords = {K-5 computer science education, computational agency, computational thinking, content coaching, equity, justice-centered computing, teacher professional development},
location = {Atlanta, GA, USA},
series = {RESPECT 2024}
}

@inproceedings{10.1145/3568812.3603480,
author = {Yesilyurt, Ezgi and Turgut, Refika and Kaya, Erdogan and Sahin, Burak and Sahin, Elif Adibelli and Deniz, Hasan},
title = {Multilingual Elementary School Students' Computer Science and STEM Learning through Robotics},
year = {2023},
isbn = {9781450399753},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3568812.3603480},
doi = {10.1145/3568812.3603480},
abstract = {As one of the fastest growing populations in the K-12 public school system, multilingual learners (MLs), particularly those from Hispanic and/or Latinx backgrounds, represent the future workforce of the nation [1, 2, 10, 12]. Yet, they are drastically underrepresented in STEM, including computer science (CS) fields and little is known about effective ways to teach computational skills to MLs at the elementary school level [1, 3, 5, 9]. This three-year collaborative project,&nbsp;funded by the&nbsp;National Science Foundation, aims to develop linguistically inclusive integrated computer science (CS) curricula using educational robotics for elementary students in grades 3-5. More specifically, in this project, we integrate CS with mathematics, science, and English language arts to extend all elementary students’ exposure to meaningful and relevant CS experiences [4, 8, 11]. The integrated units incorporate a range of linguistically inclusive pedagogical strategies and language scaffolds to engage MLs in language-rich CS experiences, provide them with equitable learning opportunities, and support their development of computational thinking skills. The units are designed using Predict-Run-Investigate-Modify-Make (PRIMM) and TIPP pedagogical frameworks [6, 7] to scaffold students’ learning of CT concepts and promote CS learning. The project will utilize a design-based research framework gathering classroom-based data, assessment data, and interviews with teachers and students. The central research questions explore how participation in the project influences elementary teachers’ CS teaching efficacy beliefs and identity positionings as teachers of CS and MLs. The research questions related to students include how the participation in the integrated units impacts students’ CS skills, views of computer scientists, and computer scientist identity. We are in the process of providing professional development programs for teachers. At the beginning and end of the PD program, we will gather data from participant teachers. In the following academic semester, the participant teachers will be expected to implement the curricular materials in their own classrooms. Prior and subsequent to the class implementations, the data will be collected from students to examine the effect of curricular units.},
booktitle = {Proceedings of the 2023 ACM Conference on International Computing Education Research - Volume 2},
pages = {44–45},
numpages = {2},
keywords = {Educational Robotics, Elementary Education, K-12 CS education, Multilingual Learners},
location = {Chicago, IL, USA},
series = {ICER '23}
}

@inproceedings{10.1145/3375258.3375261,
author = {Stuurman, Sylvia and Passier, Harrie J.M. and Geven, Fr\'{e}d\'{e}rique and Barendsen, Erik},
title = {Autism: Implications for Inclusive Education with respect to Software Engineering},
year = {2020},
isbn = {9781450377171},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3375258.3375261},
doi = {10.1145/3375258.3375261},
abstract = {Within Computer science and Software engineering, the prevalence of students with a diagnosis of autism spectrum disorder is relatively high. Ideally, education should be inclusive, with which we mean that education must be given in such a way that additional support is needed as little as possible.In this paper, we present an overview on what is known about the cognitive style of autistic individuals and compare that cognitive thinking style with computational thinking, thinking as an engineer, and with academic thinking. We illustrate the cognitive style of autistic students with anecdotes from our students.From the comparison, we derive a set of guidelines for inclusive education, and we present ideas for future work.},
booktitle = {Proceedings of the 8th Computer Science Education Research Conference},
pages = {15–25},
numpages = {11},
keywords = {Inclusive education, Cognitive thinking style, Autism},
location = {Larnaca, Cyprus},
series = {CSERC '19}
}

@inproceedings{10.1145/3502717.3532166,
author = {Yadav, Aman and Connolly, Cornelia and Berges, Marc and Chytas, Christos and Franklin, Crystal and Hij\'{o}n-Neira, Raquel and Leftwich, Anne and Marguliex, Lauren and Macann, Victoria and Warner, Jayce R.},
title = {Models for Computer Science Teacher Preparation: Developing Teacher Knowledge},
year = {2022},
isbn = {9781450392006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3502717.3532166},
doi = {10.1145/3502717.3532166},
abstract = {Across the globe, Computer Science Education has grown tremendously over the past decade to teach primary and secondary students computing ideas and tools. From integrating computational thinking in disciplines to teaching computer science as a stand alone subject, models for teacher preparation range from one and done professional learning workshops to full certificate and licensure programs. The group will focus on providing a landscape of how CS teachers are prepared academically in various countries and make evidence-based recommendations for how teachers should be educated to develop knowledge and skill to teach computer sci- ence. The working group will also discuss how to develop these knowledge systems while promoting instruction that is equitable and centers students in the classroom. In addition, the working group will focus on new directions in computing education (such as, artificial intelligence and machine learning) and their implica- tions for teacher preparation. We will bring together a group of international computer science education scholars who have been engaged in teacher preparation. In addition to what knowledge teachers need to teach CS, we will also focus on how the field is preparing teachers to think critically about AI/ML and the role of computer science in the design of technology tools to achieve goals while mitigating potential societal harms.},
booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 2},
pages = {568–569},
numpages = {2},
keywords = {computer science education, pre-service teachers, teacher education},
location = {Dublin, Ireland},
series = {ITiCSE '22}
}

@article{10.1145/3447892.3447900,
author = {Pulimood, S. Monisha and Pearson, Kim and Bates, Diane},
title = {Encouraging CS students to compute for social good through collaborative, community-engaged projects},
year = {2021},
issue_date = {February 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {49},
number = {1},
issn = {0095-2737},
url = {https://doi.org/10.1145/3447892.3447900},
doi = {10.1145/3447892.3447900},
abstract = {Which pedagogical techniques better engage computer science (CS) students in computing for social good? We examine this question with students enrolled in classes using the Collaborating Across Boundaries to Engage Undergraduates in Computational Thinking (CABECT) pedagogical model, that pairs CS and non-CS courses with a community partner to propose solutions to a local problem. Pre- and post-tests of self-assessed concerns about civic responsibility, global responsibility, and local civic efficacy were administered to the students in a three-year long pedagogical experiment, which paired five CS courses with five journalism courses. While CS students were not statistically different from their journalism peers in pre-test measures of social and global responsibility, they lagged behind in local efficacy. In the posttest, CS students had significantly increased their sense of local efficacy to the extent that they were statistically indistinguishable from journalism students. Community-engaged learning projects, such as the one in the CABECT model, show great potential for attracting students to computing for social good.},
journal = {SIGCAS Comput. Soc.},
month = jan,
pages = {21–22},
numpages = {2},
keywords = {computing for social good, community-engaged learning, civic engagement}
}

@inproceedings{10.1145/2899415.2899465,
author = {Rodriguez, Brandon and Rader, Cyndi and Camp, Tracy},
title = {Using Student Performance to Assess CS Unplugged Activities in a Classroom Environment},
year = {2016},
isbn = {9781450342315},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2899415.2899465},
doi = {10.1145/2899415.2899465},
abstract = {Computer Science Unplugged activities have been shown to be successful in increasing student interest in computer science when used in outreach and after school events. There is less research available on adapting these extra-curricular activities for use in a classroom setting, where there are more students and the activities must support educational goals, not just changes in attitude. We describe our work in updating several existing CS Unplugged activities as well as introducing some new activities for use in an American middle school classroom. One challenge when using CS Unplugged activities is to determine what, if anything, students are learning. In this paper we detail one approach that links the updated activities to computational thinking skills, then incorporates worksheets where students illustrate their understanding.},
booktitle = {Proceedings of the 2016 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {95–100},
numpages = {6},
keywords = {cs unplugged, computational thinking, classroom assessment},
location = {Arequipa, Peru},
series = {ITiCSE '16}
}

@inproceedings{10.1145/3287324.3293870,
author = {Dandridge, Tikyna M. and Ehsan, Hoda and Gajdzik, Elizabeth and Lowe, Tony and Ohland, Carson and Yeter, Ibrahim H. and Brophy, Sean and Cardella, Monica E.},
title = {Integrated STEM+C learning for K-2 aged children: CT competencies as a precursor to K-2 computer science education},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3293870},
doi = {10.1145/3287324.3293870},
abstract = {As computer science education is incorporated into the United States educational system, it is imperative that children, educators, and caregivers understand the requisite competencies called "computational thinking" (CT). CT has advanced since first described by Wing in 2006 as an algorithmic problem-solving approach. For three years, the INSPIRE Research Institute for Pre-College Engineering (INSPIRE) has studied integrated science, technology, engineering, mathematics, and computational thinking (STEM+C) learning for K-2 aged children, in both formal and informal settings. At the project's origin, the team focused on characterizing and operationalizing the CT competencies. Our studies then followed how children, instructors, and families engaged in the CT competencies within school and out-of-school. As the project evolved, our team created curricula to be used in K-2 classrooms, activities for out-of-school settings, a summer training for educators, a CT exhibit at a small Midwestern science center, and facilitated a field trip for elementary students. Our poster presents findings from all stages of our NSF-funded STEM+C project. For classroom settings, we report discoveries from integrated STEM+C curricula development and children's CT capabilities and engagement within the classroom and during homeschooling. For informal settings, we report children's abilities to engage in CT when engaging with a specially designed CT exhibit and an open-ended problem-solving task. We also discuss our data management for our project. Finally, we report the lessons and implications of CT for K-2 ask a viable skill for computer science education. For additional info ideas, handouts will be given during poster presentation.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {1280},
numpages = {1},
keywords = {integrated stem+c, computational thinking},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3478432.3499229,
author = {Davis, Kalisha and Twarek, Bryan and Becton-Consuegra, Dinah and Koshy, Sonia},
title = {The Needs of K-12 Computer Science Educators towards Building an Inclusive Classroom: Implications for Policy, Practice, and Research},
year = {2022},
isbn = {9781450390712},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3478432.3499229},
doi = {10.1145/3478432.3499229},
abstract = {The technology sector remains one of the fastest growing industries across the nation and continues to rapidly permeate all facets of society. The next generation of the computing workforce must be equipped with the skills to examine how existing systems exacerbate inequities, while developing the competencies to build new, more equitable innovations. To enable this shift, computer science (CS) instruction needs to develop not only students' computing identities and computational thinking, but also critical thinking and ethical reasoning. Educators are key to this transformation, yet little is known about the landscape of K-12 CS educators and how equipped they are to provide equitable CS instruction. To understand the challenges that CS educators face and identify the supports and resources to more effectively equip them to serve a diverse student body, these panelists launched a national landscape survey. This panel of experts from the Kapor Center and the Computer Science Teachers Association will reflect on the survey findings and lead a discussion with the audience about the implications of the data on the future of educational policy, practice, and research to better support CS educators to build more equitable classroom spaces.},
booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
pages = {1041–1042},
numpages = {2},
keywords = {professional development, k-12 computing education, equity, culturally-responsive computing, cs education research, cs education policy},
location = {Providence, RI, USA},
series = {SIGCSE 2022}
}

