@inproceedings{10.1145/3446871.3469797,
author = {He, Fangqing and Chang, Yumih and Li, Yinmiao and Du, Mingnan and Chen, Qianyi},
title = {Programmable Little Red: A Multi-thread Immersive and Interactive Storytelling Approach to Learning Conditional Statements},
year = {2021},
isbn = {9781450383264},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3446871.3469797},
doi = {10.1145/3446871.3469797},
abstract = {Traditional methods of learning conditional statements follow lecture-based instruction, which focuses on teaching concepts and definitions. While this traditional method of instruction is the dominant teaching style in Computer Science (CS) education, it has also been identified to be one of the least effective methods for teaching and engaging students [3]. The existing limitations of traditional methods include low engagement, disconnection from the real-world applications, a lack of valuable artifacts to evaluate the learning outcomes. To improve the learning methods of conditional statements stated above, we asked the following two questions: RQ1: Can storytelling logic, an early development logic, be a viable tool that translates the concept of condition followed by a consequence to the logic of conditional statements? RQ2: In what approaches can we apply the isomorphic relationship between the two logics to the learning of conditional statements? The research project proposes a multi-thread storytelling method that mimics the logic of conditional statements. As students develop new storylines, they create new conditions and the consequences under the conditions. Through active involvement in the storyline design, development, and presentation, students will be able to grasp the concept of conditional statements by applying the theoretical programming knowledge to daily life situations embedded within the story. In addition, the interactive scenes created by students are ideal artifacts for learning outcome evaluation. Based on the computational thinking phases proposed by Repenning et al. [2] which is composed of Problem Formulation (Abstraction), Solution Expression (Automation) and Solution execution and evaluation (Analysis), we design a learning system that allows students to learn conditional statements in the context of multi-thread storytelling. A 4-day workshop was developed and hosted to assess the proposed learning system with 6 children aged 11-12 years old. Based on the classic fairy tale Little Red Riding Hood, a story world is built up in the classroom by integrating stage design and sensory-based physical interactions. An immersive and interactive story with a tragic ending is intentionally built by the instructors and students are invited to experience the instructor-developed storyline. Sensor-based choice-making interactions are embedded in the experience to imply that the choices students make will directly impact the outcome of the story. Students are asked to recall moments that different choices can be made to save the main character, design sensor-based interactions that allow opportunities to make choices, create new storylines, code with conditional statements, and present to the class.Based on Brennan and Resnick’s “three approaches to assessing the development of computational thinking in young people” [1], we evaluated students’ learning outcomes through 1) codes written by students to exam the implementation of the interactive tasks, and overall functionality of conditional statements 2) post-interview on storyline design and real-world applications of conditional statements 3) an activity on design scenarios requiring students to explain, debug and remix a Scratch project developed by the instructors. Throughout the workshop, students have distinguished performances in Problem Formulation (Abstraction) and Solution Expression (Automation). Intrigued by the immersive story experience, students were able to identify the opportunities for choice-making, brainstorm conditions and consequences, self-evaluate their proposals. Furthermore, the codes written by the students during the workshop and the post-activity also indicate students’ capability to implement their proposed solutions utilizing conditional statements with the facilitation of the instructors. Students delivered positive feedback in the interview on the last day of the workshop, mentioning that the experience of this workshop even changed their perception of CS education and the application of sensory technologies in real life.},
booktitle = {Proceedings of the 17th ACM Conference on International Computing Education Research},
pages = {450–451},
numpages = {2},
keywords = {tangible UIs, storytelling, participatory design, creativity support},
location = {Virtual Event, USA},
series = {ICER 2021}
}

@inproceedings{10.1145/3408877.3439539,
author = {Hinckle, Madeline and Catete, Veronica and Lytle, Nicholas and Barnes, Tiffany and Wiebe, Eric},
title = {Agile Curriculum Development: Computational Modeling COVID-19},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3439539},
doi = {10.1145/3408877.3439539},
abstract = {Computational modeling provides an excellent vehicle for raising scientific awareness of emergent and topical phenomena such as COVID-19. Now more than ever, it is crucial to provide students with factual information about how diseases spread and how their own actions can impact that spread. In order to both encourage computational thinking skills and build scientific knowledge of the COVID-19 pandemic, we have created a series of programming activities through which students construct their own computational models based on the emerging scientific consensus around COVID-19. Students are able to model everyday situations such as being in a crowded area or going to stores while unknowingly infected, and immediately see the consequences of those actions. By including accurate scientific variables such as the reproductive number of the virus, incubation period, and period of communicability, students are able to create their own epi-curves that demonstrate the severity of the disease and provide students with visual representation of how quickly COVID-19 spreads. We also use the scientific model and associated modeling activities to reinforce best practices at home and in the community. Finally, this curriculum development effort demonstrates how block-based computational modeling activities lend themselves to agile curricular re-design around emerging and topics of local interest},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {1377},
numpages = {1},
keywords = {middle grades, k-12, computational modeling, block-based coding},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3105726.3106186,
author = {Snow, Eric and Rutstein, Daisy and Bienkowski, Marie and Xu, Yuning},
title = {Principled Assessment of Student Learning in High School Computer Science},
year = {2017},
isbn = {9781450349680},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3105726.3106186},
doi = {10.1145/3105726.3106186},
abstract = {As K-12 computer science (CS) initiatives scale throughout the U.S., educators face increasing pressure from their school systems to provide evidence about student learning on hard-to-measure CS outcomes. At the same time, researchers studying curriculum implementation and student learning want reliable measures of how students apply their CS knowledge. This paper describes a two-year validation study focused on end-of-unit and cumulative assessments for Exploring Computer Science, an introductory high school CS curriculum. To develop the assessments, we applied a principled methodology called Evidence-Centered Design (ECD) to (1) work with various stakeholders to identify the important computer science skills to measure, (2) map those skills to a model of evidence that can support inferences about those skills, and (3) develop assessment tasks that elicit that evidence. Using ECD, we created assessments that measure the practices of computational thinking, in contrast to assessments that only measure CS conceptual knowledge. We iteratively developed and piloted the assessments with 941 students over two years and collected three types of validity evidence based on contemporary psychometric standards: test content, internal structure, and student response processes. Results show that reliability was moderate to high for each of the unit assessments; the assessment tasks within each assessment are well aligned with each other and with the targeted learning goals; and average scores were in the 60 to 70 percent range. These results indicate that the assessments validly measure students' computational thinking practices covered in the introductory CS curriculum. We discuss the broader issues we faced of balancing the need to use the assessment results for evaluation and research, and demands from teachers for use in the classroom.},
booktitle = {Proceedings of the 2017 ACM Conference on International Computing Education Research},
pages = {209–216},
numpages = {8},
keywords = {test validity, high school computer science, computational thinking practices, assessment},
location = {Tacoma, Washington, USA},
series = {ICER '17}
}

@inproceedings{10.1145/3626253.3635338,
author = {Hu, Anne Drew and Yadav, Aman},
title = {Integrating Critical Analysis of Society and Technology into K-12 Computing Through Teacher Co-Design},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635338},
doi = {10.1145/3626253.3635338},
abstract = {As demand for K-12 computer science (CS) education grows, we argue that most students would be best served by CS classes that not only teach computational thinking/programming, but also challenge them to critically analyze the role of technology in society. One of the main barriers to implementing this into K-12 classrooms is a lack of research on how in-service CS teachers can integrate critical pedagogy into their school context and existing curricula. This lightning talk presents a proposed method to co-design lessons with current K-12 CS teachers to integrate critical perspectives into their classrooms. Teacher participants will join a synchronous summer professional development where we will teach them critical computing content drawn from relevant books and frameworks, and collaborate with them to design or modify lessons that will engage their students in critical analysis. Teachers will be encouraged to include content relevant to their communities. For example, a teacher in Detroit might teach facial recognition in the context of continued use of the technology by police, despite wrongful arrests. Results from this work will inform future sociocultural content integration into K-12 CS courses (e.g. "ethics content"). Feedback from the audience will be used to improve the methods and literature review of the study.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1934},
numpages = {1},
keywords = {computing education, critical theory, ethics, k-12 cs},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3383668.3429672,
author = {Kumar, Vishesh and Berland, Matthew and Lyons, Leilah and Cannady, Matthew A. and McKinney de Royston, Maxine},
title = {Designing for and Identifying Plural Goals in a Science Museum Game Exhibit},
year = {2020},
isbn = {9781450375870},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3383668.3429672},
doi = {10.1145/3383668.3429672},
abstract = {Science museums are often interactive spaces where a variety of visitors engage with exhibits in diverse ways. While trying to support participants? behavior in ways that make intuitive sense for these behaviors in a museum context, these exhibits need to support interests and participation in forms that are meaningfully diverse - to make domains accessible to learners belonging to groups minoritized in those domains. In this paper, we present an interactive computational thinking exhibit designed to foster a multiplicity of goals and participatory behaviors. We also present preliminary analysis on how we can use play data to delineate the pursuit of different goals mediated through different pursuits. We also find care to be a uniquely valuable aesthetic motivator in gameplay, often overlooked in common design frameworks - with potential to expand perspectives on computing and combat inequity among computing learners.},
booktitle = {Extended Abstracts of the 2020 Annual Symposium on Computer-Human Interaction in Play},
pages = {292–296},
numpages = {5},
keywords = {science museums, play styles, museums, learning analytics, games, game design, data mining, computer science education, cluster analysis},
location = {Virtual Event, Canada},
series = {CHI PLAY '20}
}

@inproceedings{10.1145/2930674.2930678,
author = {Unnikrishnan, R. and Amrita, N. and Muir, Alexander and Rao, Bhavani},
title = {Of Elephants and Nested Loops: How to Introduce Computing to Youth in Rural India},
year = {2016},
isbn = {9781450343138},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2930674.2930678},
doi = {10.1145/2930674.2930678},
abstract = {We present Haathi Mera Saathi (My Elephant Friend), a game concept which serves as a tool for teaching programming and computational thinking to underprivileged children in rural India. It provides a metaphor and gameplay for embodied and tangible games, and creates a soft early ramp up into the conceptual and digital space of learning to code. We discuss the urgency of digital inclusion for Indian rural children, with reference to technology as an amplifier which they need to learn to direct. We contrast the grounded, embodied style of Haathi Mera Saathi with the current crop of mini-languages and coding games, with particular emphasis on the need for physicality and tangibility in the very early stages of learning to code. We further discuss our experience conducting workshops for students from the tribal and rural belts of India, where we see HMS as an effective approach for taking them from a state of having no background in computers or computing, to a state where they create interactive applications in a Java based environment. Recommendations are given for researchers interested in working with rural village children.},
booktitle = {Proceedings of the The 15th International Conference on Interaction Design and Children},
pages = {137–146},
numpages = {10},
keywords = {tangible games, Third World, ICT4D, ICD, HCI4D, Digital Divide, Computational thinking},
location = {Manchester, United Kingdom},
series = {IDC '16}
}

@inproceedings{10.1145/2462476.2462479,
author = {Zur-Bargury, Iris and P\^{a}rv, Bazil and Lanzberg, Dvir},
title = {A nationwide exam as a tool for improving a new curriculum},
year = {2013},
isbn = {9781450320788},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2462476.2462479},
doi = {10.1145/2462476.2462479},
abstract = {Israel's Ministry of Education has decided to strengthen the STEM studies, including computer science (CS). A new curriculum for CS for junior high, which focuses on developing computational thinking, was developed, implemented, and evaluated. The evaluation contains a nationwide test at the end of each year. This paper describes the 2012 nationwide exam and its evaluation.},
booktitle = {Proceedings of the 18th ACM Conference on Innovation and Technology in Computer Science Education},
pages = {267–272},
numpages = {6},
keywords = {technology, stem learning, problem solvingy, k-12 curricula, computing educationy, computer science, computational thinking},
location = {Canterbury, England, UK},
series = {ITiCSE '13}
}

@inproceedings{10.1145/3408877.3439595,
author = {Peterfreund, Alan and Esaison, Jordan and Smith, Julie M. and Johnston, Brianna},
title = {Computer Science Education Graduate Students: Defining a Community and Its Needs},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3439595},
doi = {10.1145/3408877.3439595},
abstract = {As undergraduate enrollment in computer science (CS) courses continues to expand, concerns surrounding the supply of instructors and the quality of instruction become even more salient. Similarly, computing education and computational thinking programs are expanding in K12 schools but are hampered by concerns over teacher training and curriculum efficacy. This project sought to answer a question: is there a need for a more robust system of networking and resources for computer science education (CSEd) graduate students' The large response to initial community-building efforts indicates that this is likely the case. In just over one year, a global community of 190 graduate students and 90 CS faculty researchers and advisors have registered for a CSEd graduate focused community. Participant funding, while originally intended for in-person conference attendance and face-to-face meetings, has enabled this project to create study groups attended by 73 students and a virtual conference with 101 participants. These activities were established as a result of a needs assessment survey conducted in early 2020. This poster documents the rapid growth of this community and the need students feel for systematic support.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {1337},
numpages = {1},
keywords = {graduate students, cs education, computing education},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3615430.3615432,
author = {Samuelsson, Robin},
title = {A pedagogy of tinkering: The pedagogical values of productive failure in childhood programming education},
year = {2024},
isbn = {9798400708961},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3615430.3615432},
doi = {10.1145/3615430.3615432},
abstract = {Programming is increasingly becoming a subject across the spectrum of educational environments for preschool children. Concerns have been raised regarding a too instrumental and uncritical implementation of programming. This study follows a preschool and reports on the obstacles infused during a six-month design-based study introducing a programmable floor robot with children, featuring formative focus group sessions and pedagogical development. An activity theoretical approach was taken to examine the various tensions with existing pedagogies that arose during the project and how these led to pedagogical development toward a programming ethos based on making pedagogical materials and tinkering activities, where failure is an inherent part of the educational process. The paper discusses the potential problems of using new subjects with current curricula and how new technologies are part of reshaping childhood pedagogies.},
booktitle = {Proceedings of FabLearn / Constructionism 2023: Full and Short Research Papers},
articleno = {12},
numpages = {3},
keywords = {Computational thinking, early childhood education, making, pedagogical development},
location = {New York City, NY, USA},
series = {FLC '23}
}

@inproceedings{10.1145/3585088.3593929,
author = {Adisa, Ibrahim Oluwajoba},
title = {Developing Machine Learning Agency Among Youth: Investigating Youth Critical Use, Examination, and Production of Machine Learning Applications},
year = {2023},
isbn = {9798400701313},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3585088.3593929},
doi = {10.1145/3585088.3593929},
abstract = {Abstract. Young people are surrounded by machine learning (ML) devices and their lived experiences are increasingly shaped by the ML technologies that are ever-present in their lives. As innovations in machine learning technologies continue to shape society, it raises important implications for what young people learn, their career trajectories, and the required literacies they need to thrive in this changing occupational environment. Youth are particularly vulnerable to the impact of ML and very little has been done to empower them to critically engage in the discourse surrounding the next generation of technologies that have a marked potential to shape their lives for better or worse. My dissertation work seeks to develop youth autonomy and agency around ML by designing an intervention that supports youth critical use, examination, and production of ML applications in the context of promoting self-expression and social good. I will conduct a qualitative single case study research and collect multiple forms of data using interviews, story completions, digital artifacts, observations, and focus group discussions. These data sources will allow me to conduct an intensive analysis and investigation of how youth populations can be supported to develop the skills, practices and critical consciousness needed to effectively engage with machine learning technologies. Through my research, I also hope to advance the literature on how young people creatively collaborate with ML and use ML for self-expression.},
booktitle = {Proceedings of the 22nd Annual ACM Interaction Design and Children Conference},
pages = {781–784},
numpages = {4},
keywords = {agency, computational thinking, machine learning, youth},
location = {Chicago, IL, USA},
series = {IDC '23}
}

@inproceedings{10.1145/2538862.2538925,
author = {Heintz, Fredrik and Erlander Klein, Inger},
title = {The design of Sweden's first 5-year computer science and software engineering program},
year = {2014},
isbn = {9781450326056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2538862.2538925},
doi = {10.1145/2538862.2538925},
abstract = {In 2013 Link\"{o}ping University started the first 5-year engineering program in Computer Science and Software Engineering in Sweden. The goals of the program are to provide a holistic perspective on modern large scale software development, to provide a deep and broad understanding of computer science and computational thinking, and encourage innovation and entrepreneurship. The student response has been very good with more than 600 applicants to the 30 slots, of which more than 130 had this program as their first choice among all programs in Sweden. In this paper we present the goals, the design principles, and the resulting program. The ACM/IEEE CS Curricula has been used to make sure that the program provides a solid foundation in Computer Science. Three pedagogical ideas that we have used are (1) project courses to integrate theory and practice as well as provide experience with the most common form of working in industry; (2) courses that cover multiple programming paradigms and languages as well as multiple software development methodologies so that the students are prepared to take on the continual changes we know will come; and (3) a special course in engineering professionalism with groups of students from the first three years together reflecting on topics related to being a professional engineer. The paper concludes with a discussion about some important aspects such as computational thinking and the relation to the ACM/IEEE CS Curricula.},
booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
pages = {199–204},
numpages = {6},
keywords = {software engineering, computer science education, computational thinking},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '14}
}

@inproceedings{10.1145/3084863.3107579,
author = {Reiser, Susan and Conrad, Phill},
title = {A processing primer for artists},
year = {2017},
isbn = {9781450350099},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3084863.3107579},
doi = {10.1145/3084863.3107579},
abstract = {Processing is an open source programming language and Integrated Development Environment (IDE) developed by Casey Reas and Ben Fry. This workshop is a hand-on programming primer for artists and designers who are interested in using programming and computational thinking as creative tools.},
booktitle = {ACM SIGGRAPH 2017 Studio},
articleno = {1},
numpages = {2},
keywords = {processing, computing in the arts, computer graphics programming},
location = {Los Angeles, California},
series = {SIGGRAPH '17}
}

@inproceedings{10.1145/3626253.3631656,
author = {Grover, Shuchi and Fields, Deborah and Kafai, Yasmin and White, Shana and Strickland, Carla},
title = {Enduring Lessons from 'Computer Science for All' for AI Education in Schools},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3631656},
doi = {10.1145/3626253.3631656},
abstract = {Even as efforts to promote K-12 CS education forge ahead, there is a growing consensus that students must also be taught artificial intelligence (AI) and machine learning (ML) in order to be prepared for the fast-changing world powered by AI/ML. How can ensure that we leverage learnings from two decades of CS education research and practice, and build on successes while mitigating missteps? This panel invites researchers with deep expertise in 'CSForAll' efforts for a timely discussion and sharing of valuable lessons from CS education efforts about pedagogies, attention to equity, and teacher preparation that will also benefit K-12 AI education.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1533–1534},
numpages = {2},
keywords = {artificial intelligence, computational thinking, equity, k-12 ai education, k-12 cs education, machine learning, project-based learning, teacher preparation},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/2593968.2610490,
author = {Agrawal, Harshit and Jain, Rishika and Kumar, Prabhat and Yammiyavar, Pradeep},
title = {FabCode: visual programming environment for digital fabrication},
year = {2014},
isbn = {9781450322720},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2593968.2610490},
doi = {10.1145/2593968.2610490},
abstract = {In this paper, we introduce FabCode, a visual programming environment using which one can create designs that can be manufactured using digital fabrication techniques like 3D printing and laser cutting. This project is primarily about making accessible and enhancing the kinds of "thinking" that the computational medium is capable of supporting and spreading. FabCode is situated in the context of design and engineering of objects, and is based on the premise that programming 3D models for personal fabrication would enable practice of computational thinking for the same. Children will learn as they work on personally meaningful projectsbuilding, describing, printing and playing with things, and debugging and discussing their processes and outcomes. It will be a childcentered, constructionist tool for FabLabs.},
booktitle = {Proceedings of the 2014 Conference on Interaction Design and Children},
pages = {353–356},
numpages = {4},
keywords = {visual programming, digital fabrication, constructionism, computational thinking, blockly, 3d modeling},
location = {Aarhus, Denmark},
series = {IDC '14}
}

@inproceedings{10.1145/3361721.3362110,
author = {Lytle, Nicholas and Catete, Veronica and Isvik, Amy and Boulden, Danielle and Dong, Yihuan and Wiebe, Eric and Barnes, Tiffany},
title = {From 'Use' to 'Choose': Scaffolding CT Curricula and Exploring Student Choices while Programming (Practical Report)},
year = {2019},
isbn = {9781450377041},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3361721.3362110},
doi = {10.1145/3361721.3362110},
abstract = {As computing skills become necessary for 21st-century students, infused computational thinking (CT) lessons must be created for core courses to truly provide computing education for all. This will bring challenges as students will have widely varying experience and programming ability. Additionally, STEM teachers might have little experience teaching CT and instructing using unfamiliar technology might create discomfort. We present a design pattern for infused CT assignments that scaffold students and teachers into block-based programming environments. Beginning with existing code, students and teachers work together 'Using' and comprehending code before 'Modifying' it together to fix their programs. The activity ends with students 'Choosing' their own extensions from a pre-set list. We present a comparison of two implementations of a simulation activity, one ending with student choosing how to extend their models and one having all students create the same option. Through triangulating data from classroom observations, student feedback, teacher interviews, and programming interaction logs, we present support for student and teacher preference of the 'Student-Choice' model. We end with recommended strategies for developing curricula that follow our design model.},
booktitle = {Proceedings of the 14th Workshop in Primary and Secondary Computing Education},
articleno = {18},
numpages = {6},
keywords = {Use-Modify-Create, Student Choice, Lesson Design},
location = {Glasgow, Scotland, Uk},
series = {WiPSCE '19}
}

@inproceedings{10.1145/3408877.3432532,
author = {Rorrer, Audrey and Pugalee, David and Edwards, Callie and Boulden, Danielle and Maher, Mary Lou and Cao, Lijuan and Dorodchi, Mohsen and Catete, Veronica and Frye, David and Barnes, Tiffany and Wiebe, Eric},
title = {The Design and Implementation of a Method for Evaluating and Building Research Practice Partnerships},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432532},
doi = {10.1145/3408877.3432532},
abstract = {We have established a research-practice partnership (RPP) to build a computer science (CS) and computational thinking (CT)-focused STEM ecosystem at two middle schools. Creating such an ecosystem to broaden student participation in computing through an RPP approach involves all stakeholders in the research process. Borrowing upon visual participatory research methods, we developed a graphic research instrument to engage teachers in the research process and elicit their perspectives on strategies for building the ecosystem. This experience report describes our research methodology across two distinct cases to demonstrate the utility of this drawing activity as an investigative and partnership development tool. The contribution is in offering a flexible approach to other university-based RPP teams that enables a synergistic partnership development tool and data collection instrument that can be tailored to a variety of RPP contexts, facilitating more productive and equitable ways of engaging stakeholders in the research process. We describe our project contexts and share results from the pilot study with practitioner-members of our RPP teams. We discuss two cases to highlight the contribution this approach made to the development of our partnerships.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {753–759},
numpages = {7},
keywords = {research-practice partnerships, qualitative measures, program evaluation, design-based research},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3401861.3401870,
author = {Yao, Dunhong and Mi, Chunqiao and Zhang, Wen},
title = {A Teaching Reform and Practice to Improve Student's Ability of Practice and Innovation in Computer Major},
year = {2020},
isbn = {9781450377423},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3401861.3401870},
doi = {10.1145/3401861.3401870},
abstract = {Local colleges should cultivate high-quality IT applied talents, the key is to cultivate the students' ability of practice and innovation. In order to cultivate these abilities, we put forward a set of effective solutions, which is to improve the teaching quality of programming courses and strengthen the practical teaching link of programming courses. To this end, we implemented a series of teaching reforms, including refactoring talent training plan and practical teaching system, setting up the programming courses' teaching team, enhancing the teaching team's teaching level and practice guiding ability, building a personalized teaching auxiliary platform, building three-dimensional and network teaching resources, building school's innovative practice base, implementing three-dimensional and deep project education program, and establishing the operation mechanism of joint examination of programming courses. Since the implementation of the reform, we have achieved excellent results, including improving the quality of course teaching, and improving students' ability of computational thinking, programming practice, employment quality, and the ability of science and technology to serve society.},
booktitle = {Proceedings of the 2020 2nd International Conference on Modern Educational Technology},
pages = {10–14},
numpages = {5},
keywords = {Teaching Reform, Programming Courses, Practical and Innovation Ability},
location = {Singapore, Singapore},
series = {ICMET '20}
}

@inproceedings{10.1145/3294109.3300997,
author = {Sullivan, Anne and Johnson, Emily K.},
title = {BeadED Adventures: Crafting STEM Learning},
year = {2019},
isbn = {9781450361965},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3294109.3300997},
doi = {10.1145/3294109.3300997},
abstract = {With the move towards digital interventions for educational purposes, there has been a loss of tangible and material interfaces, the consequences of which are still being understood. Meanwhile, there is an ongoing lack of gender diversity within STEM-facing majors and careers. In response to this, we have created a physical prototype of BeadED Adventures, a system that uses a physical controller made up of jars of colorful beads to control modified Twine games that follows constructivist philosophies of learning and emphasizes player autonomy. By controlling the experience, the player creates a beaded bracelet that is personalized based on their choices within the game. In addition to the controller, we are creating an educational Twine game in which the player explores an abandoned castle, solving computational thinking puzzles to escape.},
booktitle = {Proceedings of the Thirteenth International Conference on Tangible, Embedded, and Embodied Interaction},
pages = {351–358},
numpages = {8},
keywords = {tangible learning artifact, tangible interfaces, stem learning, games, educational games, crafts, crafting games},
location = {Tempe, Arizona, USA},
series = {TEI '19}
}

@inproceedings{10.1145/3545945.3569748,
author = {Gupta, Ankur and Rybarczyk, Ryan},
title = {Improving Long Term Performance Using Visualized Scope Tracing: A 10-Year Study},
year = {2023},
isbn = {9781450394314},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545945.3569748},
doi = {10.1145/3545945.3569748},
abstract = {Code tracing (or program sketching) is a useful technique for both students and professionals to understand syntactic and semantic details of code. Emphasizing and exploring this skill leads students to a deep understanding of their code in the short term and ultimately, their evolution into competent programmers in the future. In this paper, we provide evidence that a careful incorporation of the concept of scoping into code tracing techniques is fundamental to achieving this successful student transition. To this end, we present a formalized pencil-and-paper code tracing strategy for CS1 called Visualized Scope Tracing (VST), with scoping as a key underlying theme that elegantly addresses code blocks, function stacks, recursive structures, pass-by-reference, arrays, pointers, and parallel code.Furthermore, we study the impact of our code tracing approach on CS1 students at a small liberal arts institution over a 10-year period. The goals of this work are twofold: describe how to easily (and naturally) integrate VST into any CS1 curricula; second, show demonstrable improvements on student learning using our technique. Our findings suggest that VST has a positive, long-lasting impact on their academic performance in CS2.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
pages = {137–143},
numpages = {7},
keywords = {computational thinking, cs1, scope, tracing, visualization},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3408877.3432434,
author = {Blanchard, Jeremiah and Gardner-McCune, Christina and Anthony, Lisa},
title = {Dual Modality Instruction \&amp; Programming Environments: Student Usage \&amp; Perceptions},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432434},
doi = {10.1145/3408877.3432434},
abstract = {Dual-modality blocks-text programming environments have shown promise in helping students learn programming and computational thinking. These environments link blocks-based visualizations to text-based representations, which are more typical of production languages. Since prior work shows that some students who learn in dual-modality environments outperform those who learn in text on assessments, we sought to understand specifically how students use dual-modality environments and what support these environments provide to the learning process. We analyzed survey responses and tool logs collected during a study at a large public university in a CS1 course (N=425). We found that students from all prior programming experience backgrounds made use of the ability to visualize code structures by using blocks. Students with prior experience in blocks or no prior experience said they felt the dual-modality instruction helped them understand code structure and meaning. As students progressed through the class, we found that they made more use of the blocks mode's reference palettes than to its drag-and-drop facilities or mode-switching features. By identifying how students interact with dual-modality tools and how they impact student understanding, this work provides guidance for classroom instructors.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {481–487},
numpages = {7},
keywords = {programming languages, novice programmers, dual-modality programming environments, computer science education, blocks-based programming environments, CS1},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

