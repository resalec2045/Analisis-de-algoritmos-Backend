@inproceedings{10.1145/3501385.3543979,
author = {Parker, Miranda C. and Garcia, Leiny and Kao, Yvonne S. and Franklin, Diana and Krause, Susan and Warschauer, Mark},
title = {A Pair of ACES: An Analysis of Isomorphic Questions on an Elementary Computing Assessment},
year = {2022},
isbn = {9781450391948},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3501385.3543979},
doi = {10.1145/3501385.3543979},
abstract = {Background and Context. With increasing efforts to bring computing education opportunities into elementary schools, there is a growing need for assessments, with arguments for validity, to support research evaluation at these grade levels. After successfully piloting a 10-question computational thinking assessment (Assessment of Computing for Elementary Students – ACES) for 4th graders in Spring 2020, we used our analyses of item difficulty and discrimination to iterate on the assessment. Objectives. To increase the number of potential items for ACES, we created isomorphic versions of existing questions. The nature of the changes varied from incidental changes that we did not believe would impact student performance to more radical changes that seemed likely to influence question difficulty. We sought to understand the impact of these changes on student performance. Method. Using these isomorphic questions, we created two versions of our assessment and piloted them in Spring 2021 with 235 upper-elementary (4th grade) students. We analyzed the reliability of the assessments using Cronbach’s alpha. We used Chi-squared tests to analyze questions that were identical across the two assessments to form a baseline of comparison and then ran Chi-Squared and Kruskal-Wallis H tests to analyze the differences between the isomorphic copies of the questions. Findings. Both assessment versions demonstrated good reliability, with identical Cronbach’s alphas of 0.868. We found statistically similar performance on the identical questions between our two groups of students, allowing us to compare their performance on the isomorphic questions. Students performed differently on the isomorphic questions, indicating the changes to the questions had a differential impact on student performance. Implications. This paper builds on existing work by presenting methods for creating isomorphic questions. We provide valuable lessons learned, both on those methods and on the impact of specific types of changes on student performance.},
booktitle = {Proceedings of the 2022 ACM Conference on International Computing Education Research - Volume 1},
pages = {2–14},
numpages = {13},
keywords = {assessment, computational thinking, elementary education},
location = {Lugano and Virtual Event, Switzerland},
series = {ICER '22}
}

@inproceedings{10.1145/3368308.3415376,
author = {Maiorana, Francesco and Csizmadia, Andrew P. and Richards, Gretchen M.},
title = {P12 Computing in Italy, England and Alabama, USA},
year = {2020},
isbn = {9781450370455},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3368308.3415376},
doi = {10.1145/3368308.3415376},
abstract = {It is recognized that Computing requires many competencies covering a wide range of domains exhibiting an impressive changing rate. This paper examines three primary competencies, which are: 1) Algorithms, Programming, Data, and Computational Thinking (CT); 2) Networks, Internet and Security; and 3) Ethics. Due to the standards and relationship of competences, the authors categorized, algorithms, programming, data and CT together. Thus, we leveraged national guidelines in Italy, mandatory national computing curriculum in England, and state guidelines in Alabama, USA in conjunction with ACM computing frameworks. The primary lessons learned from comparing computing curricula, and implications for implementing computing education curriculum are discussed.},
booktitle = {Proceedings of the 21st Annual Conference on Information Technology Education},
pages = {242–247},
numpages = {6},
keywords = {algorithms, computational thinking, data, ethics, internet, networking, programming, security},
location = {Virtual Event, USA},
series = {SIGITE '20}
}

@inproceedings{10.1145/3582580.3582629,
author = {Zheng, Yunping and Sarem, Mudar},
title = {C++ Teaching Reform and Exploration Based on ACM/ICPC and Live Code},
year = {2023},
isbn = {9781450398015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3582580.3582629},
doi = {10.1145/3582580.3582629},
abstract = {How to further increase the programming interest of the C++ course for all freshmen is still a very challenging problem for the time being. The International Collegiate Programming Contest (ICPC) is sponsored by the Association for Computing Machinery (ACM). It is an annual competition designed to showcase college students' innovative ability, team spirit and ability to write programs, and analyze and solve problems under pressure. Aiming at the main problems existing in traditional C++ curriculum teaching, a live code teaching method and an ACM/ICPC innovation model are proposed in this paper that highlights the "student-centered" teaching concept. By taking the "problem-solving" as the main line of teaching, the "live code" as the teaching method, and the informatization teaching as the means, the ACM/ICPC competition promotes the integration of the students' theory and practice. The results of more than ten years of practical teaching show that the proposed live code pedagogy and the ACM/ICPC-based reform have effectively cultivated the students' programming interest and computational thinking, and significantly improved their programming and innovation abilities. At present, the live code teaching method and the ACM/ICPC innovation model have been effectively promoted and applied in the three campuses of our university, as they have a certain leading and exemplary role in cultivating strong professional programming skills, computational thinking, global vision and the all-round development of top-notch innovative talents in the computer field.},
booktitle = {Proceedings of the 2022 5th International Conference on Education Technology Management},
pages = {281–286},
numpages = {6},
keywords = {ACM/ICPC, C++, Live code, Online Learning, Teaching method},
location = {Lincoln, United Kingdom},
series = {ICETM '22}
}

@inproceedings{10.1145/3434780.3436705,
author = {Rodr\'{\i}guez-Garc\'{\i}a, Juan David and Moreno-Le\'{o}n, Jes\'{u}s and Rom\'{a}n-Gonz\'{a}lez, Marcos and Robles, Gregorio},
title = {Introducing Artificial Intelligence Fundamentals with LearningML: Artificial Intelligence made easy},
year = {2021},
isbn = {9781450388504},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3434780.3436705},
doi = {10.1145/3434780.3436705},
abstract = {This paper is a summary of the webinar hold on October 22nd at the “Computational thinking and robotics in education” track in which the LearningML project was presented. The LearningML project aims to bring the fundamentals of Artificial Intelligence (AI) to children and people interested in acquiring knowledge on this subject in an easy way. AI has heavily irrupted in society and everyone is using, more or less consciously, application based on AI. Therefore, some kind of AI literacy is needed if we are to educate critically thinking citizens able to understand technologies that have a relevant impact on their lives. In this presentation we show how LearningML can help us to reach this goal trough programming applications based on Machine Learning (ML), the most prevalent subfield of AI today.},
booktitle = {Eighth International Conference on Technological Ecosystems for Enhancing Multiculturality},
pages = {18–20},
numpages = {3},
keywords = {Artificial intelligence, K-12, assessment, computational thinking, machine learning},
location = {Salamanca, Spain},
series = {TEEM'20}
}

@inproceedings{10.1145/3641555.3705225,
author = {Brilliantova, Angelina and Vitko, Asya and Bez\'{a}kov\'{a}, Ivona and Butler, Zack},
title = {Pencil Puzzles as a Context in Upper-level Core Computing Courses at Multiple Institutions},
year = {2025},
isbn = {9798400705328},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641555.3705225},
doi = {10.1145/3641555.3705225},
abstract = {Context-based assignments have been shown as effective and popular for introductory-level computing courses. We study the use of one such context, pencil puzzles (puzzles typically found in newspapers), in upper-level core computing courses. These puzzles are designed to inspire computational thinking, making them a great choice for introductory-level computing assignments, but their fit for upper-level courses is less clear. We collaborated with several instructors of upper-level courses at four institutions, who delivered a pencil-puzzle-based assignment in their course and allowed us to survey their students about their experience. Overall, the students indicated positive perceptions of the assignments. The most varied answers related to implementation aspects of the assignments. To analyze correlations between students' sentiments and their demographic and experiential background, we used mixed-effects regression modeling to analyze this heterogeneous data set. The survey responses were characterized by two dimensions, one roughly corresponding to students' sentiment about the assignment and the other to their technical assessment of the assignment. For the first dimension, we found that the students' self-reported level of preparedness from earlier courses positively correlated with their enjoyment of and satisfaction with the pencil puzzle assignment. The second dimension was correlated with both the level of preparedness as well as the students' self-reported problem solving type: Clarifier, Implementor, Ideator, and Developer. Somewhat surprisingly, the analysis indicated Ideator as being the most positively correlated with the technical aspects of the assignment. Notably, the analysis did not indicate any correlation with students' race or gender in either dimension.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1399–1400},
numpages = {2},
keywords = {context-based assignments, multi-institutional study, statistical model choice, upper-level core computing courses},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@inproceedings{10.1145/3175536.3175542,
author = {Kim, Jeong Ah and Kim, Hee Jin},
title = {Flipped Learning of Scratch Programming with code.org},
year = {2017},
isbn = {9781450354356},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3175536.3175542},
doi = {10.1145/3175536.3175542},
abstract = {In this paper, we describe the effect of code.org as pre-class resources for flipped learning of Scratch programming education. Pre-class resources are very important for increase the outcome of the flipped learning. These days, there are so many open courseware about coding available for pre-class. The objectives of programming might be to increase the computational thinking for problem solving. In this research, we suggest that flipped learning is very good way to increase the computational thinking for problem solving and code.org is good resource for pre-class.},
booktitle = {Proceedings of the 9th International Conference on Education Technology and Computers},
pages = {68–72},
numpages = {5},
keywords = {Flipped learning, Scratch programming, computational thinking, course design, open courseware},
location = {Barcelona, Spain},
series = {ICETC '17}
}

@inproceedings{10.1145/3372782.3407116,
author = {Salac, Jean},
title = {Diagramming as a Strategy for Primary/Elementary-Age Program Comprehension},
year = {2020},
isbn = {9781450370929},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3372782.3407116},
doi = {10.1145/3372782.3407116},
abstract = {Worldwide, many countries are implementing Computer Science (CS) and Computational Thinking (CT) instruction at the primary and secondary school level. This push for CS/CT instruction in younger ages increases the need for pedagogical practices, such as learning strategies, that are effective for a wide array of learners. However, research into strategies for young learners is relatively sparse, especially compared with strategies at the university level. This study aims to investigate a commonly used practice at the university level, diagramming, as a potential strategy for students in grades 4-8 (ages 10-15). Our hope is that diagramming can be added to a suite of strategies to support program comprehension in younger learners.},
booktitle = {Proceedings of the 2020 ACM Conference on International Computing Education Research},
pages = {322–323},
numpages = {2},
keywords = {computational thinking, diagrams, learning strategy, primary/elementary education, program comprehension},
location = {Virtual Event, New Zealand},
series = {ICER '20}
}

@inproceedings{10.1145/3614321.3614383,
author = {Okuno, Helder Yukio},
title = {Ginasio Experimental Tecnologico (GET): promoting pedagogical innovation and the development of student protagonism integrated into the municipal education network of Rio de Janeiro},
year = {2023},
isbn = {9798400707421},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3614321.3614383},
doi = {10.1145/3614321.3614383},
abstract = {The Municipal Secretary of Education of Rio de Janeiro (SME-Rio), seeking to combat difficulties in the literacy process, school dropout, and learning gap, sought to re-signify the school curriculum of students in the Municipal Education Network with innovative approaches in the process like the maker culture, STEAM, and Education 5.0. In this way, SME-Rio developed the Gin\'{a}sio Experimental Tecnol\'{o}gico (GET) program, where students carry out hands-on activities in the Colaborat\'{o}rio of GET’s program and develop skills, competencies, and curricular components of Integral Education, articulated with the three pillars of the program: Digital Information and Communication Technologies (DICT), Digital Culture, and Computational Thinking. In 2023, a total of 70 school units are expected, and for 2024 a total of 200 schools are projected.},
booktitle = {Proceedings of the 16th International Conference on Theory and Practice of Electronic Governance},
pages = {424–426},
numpages = {3},
keywords = {Gin\'{a}sio Experimental Tecnol\'{o}gico, Innovation in Education, Public Education Network, Smart Education},
location = {Belo Horizonte, Brazil},
series = {ICEGOV '23}
}

@inproceedings{10.1145/3502718.3524817,
author = {Oldham, Elizabeth},
title = {Computing in the Irish School Curriculum: What Can We Learn from a Fifty-Year Adventure?},
year = {2022},
isbn = {9781450392013},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3502718.3524817},
doi = {10.1145/3502718.3524817},
abstract = {This presentation examines the development of computing courses in the Irish school curriculum over a period of some fifty years. It aims to highlight three aspects: the varying rationales (for example, educational or economic) driving the work at different times; the types of course that were proposed and (in some cases) implemented; and the successes and failures experienced along the way. The third aspect, in particular, may offer lessons for other countries seeking to implement computing courses in schools. To frame the analysis, a brief chronological outline is provided here. In the 1970s, the state Department of Education initially offered some programming courses for teachers; a voluntary body, the Computers in Education Society of Ireland, advocated for the introduction of "Computer Studies" as a school subject [1]. Official provision came in the 1980s, with the introduction first of a Computer Studies option in the Mathematics courses for the senior cycle of post-primary education (US grades 11-12), and then of a free-standing subject in the junior cycle [1,2]. However, the increasing availability of educational software, applications packages, and internet access led to a switch in the focus of official policy in the 1990s - from computing to computer applications and the use of IT in teaching and learning - and the computing courses faded out [2]. Following the (re)-emergence of interest in computing / computational thinking in several countries in this century [2,3,4,5], advocacy for suitable courses again grew and the policy thrust changed. Provision is now made at primary and post-primary level, notably with a free-standing Computer Science course figuring in the senior cycle curriculum [2,5]. The author has been involved in advocacy and support for computing in schools throughout the fifty-year period. Thus, she offers a participant's analysis of the motivations, the successes and failures, and the lessons that can be learnt from the Irish story.},
booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 1},
pages = {1},
numpages = {1},
keywords = {computational thinking, computing education policy, curriculum},
location = {Dublin, Ireland},
series = {ITiCSE '22}
}

@inproceedings{10.1145/3631802.3631807,
author = {Jeuring, Johan and Groot, Roel and Keuning, Hieke},
title = {What Skills Do You Need When Developing Software Using ChatGPT? (Discussion Paper)},
year = {2024},
isbn = {9798400716539},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3631802.3631807},
doi = {10.1145/3631802.3631807},
abstract = {Since the release of LLM-based tools such as GitHub Copilot and ChatGPT the media and popular scientific literature, but also journals such as the Communications of the ACM, have been flooded with opinions how these tools will change programming. The opinions range from “machines will program themselves”, to “AI does not help programmers”. Of course, these statements are meant to to stir up a discussion, and should be taken with a grain of salt, but we argue that such unfounded statements are potentially harmful. Instead, we propose to investigate which skills are required to develop software using LLM-based tools. In this paper we report on an experiment in which we explore if Computational Thinking (CT) skills predict the ability to develop software using LLM-based tools. Our results show that the ability to develop software using LLM-based tools can indeed be predicted by the score on a CT assessment. There are many limitations to our experiment, and this paper is also a call to discuss how to approach, preferably experimentally, the question of which skills are required to develop software using LLM-based tools. We propose to rephrase this question to include by what kind of people/programmers, to develop what kind of software using what kind of LLM-based tools.},
booktitle = {Proceedings of the 23rd Koli Calling International Conference on Computing Education Research},
articleno = {38},
numpages = {6},
keywords = {ChatGPT, Computational thinking skills, LLM-based tools, Software development skills},
location = {Koli, Finland},
series = {Koli Calling '23}
}

@inproceedings{10.1145/3613904.3642492,
author = {Newman, Michele and Sun, Kaiwen and Dalla Gasperina, Ilena B and Shin, Grace Y. and Pedraja, Matthew Kyle and Kanchi, Ritesh and Song, Maia B. and Li, Rannie and Lee, Jin Ha and Yip, Jason},
title = {"I want it to talk like Darth Vader": Helping Children Construct Creative Self-Efficacy with Generative AI},
year = {2024},
isbn = {9798400703300},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3613904.3642492},
doi = {10.1145/3613904.3642492},
abstract = {The emergence of generative artificial intelligence (GenAI) has ignited discussions surrounding its potential to enhance creative pursuits. However, distinctions between children’s and adult’s creative needs exist, which is important when considering the possibility of GenAI for children’s creative usage. Building upon work in Human-Computer Interaction (HCI), fostering children’s computational thinking skills, this study explores interactions between children (aged 7-13) and GenAI tools through methods of participatory design. We seek to answer two questions: (1) How do children in co-design workshops perceive GenAI tools and their usage for creative works? and (2) How do children navigate the creative process while using GenAI tools? How might these interactions support their confidence in their ability to create? Our findings contribute a model that describes the potential contexts underpinning child-GenAI creative interactions and explores implications of this model for theories of creativity, design, and use of GenAI as a constructionist tool for creative self-efficacy.},
booktitle = {Proceedings of the 2024 CHI Conference on Human Factors in Computing Systems},
articleno = {117},
numpages = {18},
keywords = {Artificial Intelligence, Children, Co-Design, Constructionism, Creativity, Participatory Design},
location = {Honolulu, HI, USA},
series = {CHI '24}
}

@inproceedings{10.1145/3699538.3699573,
author = {Mathias Str\o{}mnes Nordvoll, Sindre},
title = {The Role of Programming in Lower Secondary Math Education in Probability},
year = {2024},
isbn = {9798400710384},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3699538.3699573},
doi = {10.1145/3699538.3699573},
abstract = {Enhancing school mathematics with Computational Thinking (CT) and programming might be beneficial to student learning in both the fields of computing and mathematics. This doctoral research project aims to explore and enhance the integration of programming and CT within K-12 mathematics education. Through a two-month intervention study in a Norwegian lower secondary school, a highly modified PRIMM (Predict, Run, Investigate, Modify, and Make) framework was employed to teach programming within a lower secondary mathematics course.},
booktitle = {Proceedings of the 24th Koli Calling International Conference on Computing Education Research},
articleno = {39},
numpages = {2},
keywords = {computer science education, instructional practices, worked examples, K-12, programming education in mathematics, PRIMM},
location = {
},
series = {Koli Calling '24}
}

@inproceedings{10.1145/3287324.3287333,
author = {Kafai, Yasmin B. and DeLiema, David and Fields, Deborah A. and Lewandowski, Gary and Lewis, Colleen},
title = {Rethinking Debugging as Productive Failure for CS Education},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3287333},
doi = {10.1145/3287324.3287333},
abstract = {Computational thinking has become the calling card for re-introducing coding into schools. While much attention has focused on how students engage in designing systems, applications, and other computational artifacts as a measure of success for computational thinking, far fewer efforts have focused on what goes into remediating problems in designing systems and interactions because learners invariably make mistakes that need fixing-or debugging. In this panel, we examine the often overlooked practice of debugging that presents significant learning challenges (and opportunities) to students in completing assignments and instructional challenges to teachers in helping students to succeed in their classrooms. The panel participants will review what we know and don't know about debugging, discuss ways to conceptualize and study debugging, and present instructional approaches for helping teachers and students to engage productively in debugging situations.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {169–170},
numpages = {2},
keywords = {computational thinking, computing education, debugging},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3372782.3407105,
author = {Floyd, Lisa Anne},
title = {The Integration of Coding in Teacher Education Programs: Course Experiences and the Teaching and Learning of Mathematics},
year = {2020},
isbn = {9781450370929},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3372782.3407105},
doi = {10.1145/3372782.3407105},
abstract = {As a result of the rapidly changing digital landscape, there is momentum to bring coding to K-12 classrooms in jurisdictions all around the world. A barrier to student learning and success with coding, however, is that many teachers have little or no prior coding experience. Using constructivist grounded theory, this study will seek to understand what experiences in the teacher education course, Computational Thinking in Mathematics and Science Education, affect how preservice teachers perceive coding in teaching and learning about mathematics. Experiences in the course include hands-on activities, readings, tutorials, opportunities for reflection, assignments that require preservice teachers to teach coding to intermediate or senior students, and participation in online discussions. Research questions include 1) What course experiences or other factors affect how preservice teachers come to view coding in teaching and learning mathematics? and 2) How are these views, related to coding in teaching and learning mathematics, translated into their practice teaching?},
booktitle = {Proceedings of the 2020 ACM Conference on International Computing Education Research},
pages = {350–351},
numpages = {2},
keywords = {coding, computational thinking, computer science, k-12 education, pedagogy, teacher educatio},
location = {Virtual Event, New Zealand},
series = {ICER '20}
}

@inproceedings{10.1145/3613905.3644056,
author = {Rode, Jennifer Ann and Barkhuus, Louise and Ioannou, Andri},
title = {Exploring Gender, Computational Making and E-Textiles using the BBC Micro:bit},
year = {2024},
isbn = {9798400703317},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3613905.3644056},
doi = {10.1145/3613905.3644056},
abstract = {We present a qualitative study of a Cypriot summer school where we used the BBC micro:bit to examine gender inclusivity in e-textiles. We employed the Computational Making framework to analyze ethnographic data teaching 24 middle school students, aged 10-15. The study contrasts the challenges faced by students using the micro:bit with those from our team’s previous similar e-textile studies using the LilyPad Arduino. We pinpoint the BBC micro:bit’s limitations from an inclusive design perspective, underscoring the absence of gender-sensitive considerations in its hardware design. The paper presents a critique how upwards of £75 Million were spent deploying the micro:bit without proper user studies of gender equity and e-textiles. We propose design recommendations for future BBC micro:bit versions, advocating for integrating a gender-sensitive participatory design approach to enhance the usability and engagement of computational and creative making with e-textiles for children of all genders.},
booktitle = {Extended Abstracts of the CHI Conference on Human Factors in Computing Systems},
articleno = {554},
numpages = {9},
keywords = {BBC micro:bit, Children, Computational Making, Computational Thinking, E-textiles},
location = {Honolulu, HI, USA},
series = {CHI EA '24}
}

@inproceedings{10.1145/3322276.3322358,
author = {Vacca, Ralph},
title = {Exploring the Intersection of Emotional Literacy and Computational Modeling Using Scratch},
year = {2019},
isbn = {9781450358507},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3322276.3322358},
doi = {10.1145/3322276.3322358},
abstract = {Computational thinking learning tools such as Scratch support forms of expressive making that can aid in reflection and understanding complex scientific concepts and systems. However, little research has explored how such computational tools might support forms of emotional literacy such as developing an understanding of emotions. Through an exploratory design with 11 participants, Scratch was used to create models representing participants' emotion knowledge. The overarching research question focused on how might computational tools aid in supporting reflection on emotion knowledge. Analysis of artifacts generated through sketching and Scratch, as well as transcribed design discussions were used as points of data analysis. Drawing on theories of computational thinking and emotional literacy, we present an analysis that highlights the potential for such tools to support certain reflective practices around emotion knowledge.},
booktitle = {Proceedings of the 2019 on Designing Interactive Systems Conference},
pages = {849–858},
numpages = {10},
keywords = {computational modeling, emotion knowledge, emotion understanding, emotional literacy, mental health, scratch, self-reflection, systems modeling},
location = {San Diego, CA, USA},
series = {DIS '19}
}

@inproceedings{10.1145/3641554.3701920,
author = {Bernstein, Debra and Hochberg, Eric and Gasca, Santiago and Berson, Michael and Franklin, Kristen and Shank, Perry},
title = {Bridging Disciplines: Integrating Computer Science and Social Studies in Rural Middle Schools},
year = {2025},
isbn = {9798400705311},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641554.3701920},
doi = {10.1145/3641554.3701920},
abstract = {Computer Science (CS) education is becoming increasingly important in K-12 schooling, with some U.S. states now requiring educators to integrate CS into various disciplinary courses. The CS for Social Studies project supports the integration of CS into Social Studies (SS) classes in rural middle schools. Twenty-five teachers, working mostly in pairs (one SS teacher and one CS or instructional technology teacher), participated in professional learning workshops and received coaching support to design and implement integrated lessons that address both SS and CS learning standards. The current analysis examines the corpus of year-end, project-based integrated CS-SS lessons (n=8), to illuminate how integrated CS-SS lessons can address learning goals across both disciplines. Data sources included teacher-created lesson materials, classroom observations/video, implementation logs, teacher interviews, and student work. Utilizing a framework created to characterize integrated CS-SS lessons, analysis of lessons (as designed and enacted) focuses on three dimensions: (1) depth of CS concepts, (2) integration of CS-SS, and (3) alignment of instructional tools/resources with integration objectives. All lessons addressed standards-aligned CS concepts such as variables, conditionals, branching, and computational thinking skills (e.g., decomposition), and a variety of SS topics including the Civil War, the Great Migration, and personal finance. However, lessons varied in the extent to which they leveraged students' CS knowledge to explicitly enhance SS learning (or vice versa). This analysis suggests there are multiple approaches to using CS concepts to support disciplinary learning, including creating new learning experiences to explore SS content.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 1},
pages = {109–115},
numpages = {7},
keywords = {curricular integration, grades 5-8/middle school, professional development},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@inproceedings{10.1145/3361721.3361730,
author = {Leifheit, Luzia and Tsarava, Katerina and Moeller, Korbinian and Ostermann, Klaus and Golle, Jessika and Trautwein, Ulrich and Ninaus, Manuel},
title = {Development of a Questionnaire on Self-concept, Motivational Beliefs, and Attitude Towards Programming},
year = {2019},
isbn = {9781450377041},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3361721.3361730},
doi = {10.1145/3361721.3361730},
abstract = {Academic self-concept, motivational beliefs, and attitudes towards a school subject are relevant for learning and educational achievement. A positive self-concept in science and mathematics is argued to motivate students to persist and advance in studying these subjects. In particular, self-concept, motivational beliefs, and attitudes towards STEM domains were found to be predictive of educational achievement. Recently, programming was suggested to be a key competence in education.To assess self-concept, motivational beliefs, and attitudes towards programming, we developed a new questionnaire based on existing scales for mathematics. The new questionnaire assesses the same aspects for programming on seven subscales, such as self-concept, belief about usefulness, and self-reported persistence when working on programming tasks.We conducted a pilot study in which we used this questionnaire to measure self-concept, motivational beliefs, and attitudes towards programming. The study was set in the context of an extracurricular course on computational thinking (CT) for elementary school students between the ages of seven and ten years. Before the start of the course, we assessed all 31 participating students' self-concept, motivational beliefs, and attitudes towards programming using the developed questionnaire and their CT skills using the Computational Thinking test (CTt).Our results confirmed the expected associations between the aspects assessed by our questionnaire. However, we did not find significant associations of questionnaire results and CT skills. Consequently, future research involving a larger sample is needed to better understand the association between children's actual performance and their self-concept, motivational beliefs, and attitudes towards programming.},
booktitle = {Proceedings of the 14th Workshop in Primary and Secondary Computing Education},
articleno = {26},
numpages = {9},
keywords = {computational thinking, computer science education, computing education, computing literacy},
location = {Glasgow, Scotland, Uk},
series = {WiPSCE '19}
}

@inproceedings{10.1145/3565287.3617623,
author = {Hunter, Holly and Payton, Jamie and Julien, Christine},
title = {Expanding Elementary School Computer Science Education with an Introduction to Machine Learning Through Rhythmic Studies},
year = {2023},
isbn = {9781450399265},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3565287.3617623},
doi = {10.1145/3565287.3617623},
abstract = {Introducing elementary students to computer science and computational thinking (CS/CT) can enhance their problem solving skills and enhance their confidence and sense of belonging in computing. Project moveSMART aims to introduce learning activities into elementary classrooms that address computer science concepts in a way that integrates with core curriculum requirements and promotes physical activity. In this paper, we explore an extension to an initial set of Project moveSMART computer science learning activities to introduce elementary students to machine learning concepts in a way that is integrated with required learning objectives covered in a Physical Education course. Specifically, students use the BBC micro:bit and its on board sensors to capture rhythmic movement data, explore and analyze patterns in the data, and use a learned "dance move recognition" application that uses their data in order to learn about machine learning in an age appropriate way. To demonstrate feasibility of supporting dance move recognition on the resource-constrained device, we developed a prototype, which is able to detect 5 different dance moves with a 96.6\% accuracy.},
booktitle = {Proceedings of the Twenty-Fourth International Symposium on Theory, Algorithmic Foundations, and Protocol Design for Mobile Networks and Mobile Computing},
pages = {463–467},
numpages = {5},
keywords = {wearable computing, activity recognition, smart health and well-being, computer science education, broadening participation in computing},
location = {Washington, DC, USA},
series = {MobiHoc '23}
}

@inproceedings{10.1145/3626253.3635589,
author = {Nutwell, Emily and Badger, Kelsey and Kulp, Jessica T.},
title = {Data for Healthy Communities: A Public Interest Pilot Course Designed to Develop K-12 Data Literacy},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635589},
doi = {10.1145/3626253.3635589},
abstract = {Data analytics skills are in high demand in a wide variety of professions and data is increasingly present in our everyday lives. Considering this, educators should be equipped to prepare future data scientists, but also data literate citizens. This project engages high school students in the real-world practice of data analytics to promote the public interest. The research team is partnering with a local public STEM high school to design, evaluate, and publicly share an enrichment course that introduces students to data analytics in the context of public health. Integrating data science education and public health will enable students to engage in meaningful data-driven problem solving while promoting civic engagement. A key challenge in introducing data skills in K-12 is addressing barriers to access. To cope with these barriers, the course design incorporates the use of spreadsheets to engage students in computational thinking. This poster will present preliminary assessment results from the 3-week enrichment course conducted in January 2024. This project contributes to the ongoing discussion of K-12 data science education by demonstrating the value of contextualizing data science as a key competency for 21st century public service.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1764–1765},
numpages = {2},
keywords = {civic engagement, data science, public health, public interest technology, spreadsheets},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

