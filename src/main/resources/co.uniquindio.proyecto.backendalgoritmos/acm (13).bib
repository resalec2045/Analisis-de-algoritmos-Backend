@inproceedings{10.1145/3349266.3351410,
author = {Fronza, Ilenia and Corral, Luis and Pahl, Claus},
title = {Combining Block-Based Programming and Hardware Prototyping to Foster Computational Thinking},
year = {2019},
isbn = {9781450369213},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3349266.3351410},
doi = {10.1145/3349266.3351410},
abstract = {The promotion of Computational Thinking principles at different levels of education enables the development of practical competencies for software development. Several off-the-shelf technologies exist to promote computational abilities with the support of block-based programming and working hardware. However, in some contexts, a significant limitation is the complexity and costs that carry the acquisition and implementation of working hardware such as Educational Robots. In this paper, we discuss a strategy to reinforce the learning of Computational Thinking (CT) skills by providing an analogous method to Educational Robots. We offer an affordable solution to assist high school students to build a CT-based software/hardware integrated solution. We executed this strategy in a coding bootcamp where students were required to design and implement an algorithm, and illustrate its execution in software and hardware. The proposed exercise delivered the expected results engaging students to ideate the solution of a problem, implement an algorithm, and create a physical demonstration of it.},
booktitle = {Proceedings of the 20th Annual SIG Conference on Information Technology Education},
pages = {55–60},
numpages = {6},
keywords = {prototyping, education, computational thinking},
location = {Tacoma, WA, USA},
series = {SIGITE '19}
}

@article{10.1145/2949401,
author = {CACM Staff},
title = {Rethinking computational thinking},
year = {2016},
issue_date = {July 2016},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {59},
number = {7},
issn = {0001-0782},
url = {https://doi.org/10.1145/2949401},
doi = {10.1145/2949401},
journal = {Commun. ACM},
month = jun,
pages = {8},
numpages = {1}
}

@inproceedings{10.1145/3448139.3448175,
author = {Lall\'{e}, S\'{e}bastien and Yal\c{c}\i{}n, \"{O}zge Nilay and Conati, Cristina},
title = {Combining Data-Driven Models and Expert Knowledge for Personalized Support to Foster Computational Thinking Skills},
year = {2021},
isbn = {9781450389358},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3448139.3448175},
doi = {10.1145/3448139.3448175},
abstract = {Game-Design (GD) environments show promise in fostering Computational Thinking (CT) skills at a young age. However, such environments can be challenging to some students due to their highly open-ended nature. We propose to alleviate this difficulty by learning interpretable student models from data that can drive personalization of a real-world GD learning environment to the student’s needs. We apply our approach on a dataset collected in ecological settings and evaluate the ability of the generated student models at predicting ineffective learning behaviors over the course of the interaction. We then discuss how these behaviors can be used to define personalized support in GD learning activities, by conducting extensive interviews with experienced instructors.},
booktitle = {LAK21: 11th International Learning Analytics and Knowledge Conference},
pages = {375–385},
numpages = {11},
keywords = {Student Modeling, Open-Ended Learning Environments, Game Design, Educational Data Mining, Computational Thinking},
location = {Irvine, CA, USA},
series = {LAK21}
}

@inproceedings{10.1145/3012430.3012496,
author = {Rom\'{a}n-Gonz\'{a}lez, Marcos and P\'{e}rez-Gonz\'{a}lez, Juan-Carlos and Moreno-Le\'{o}n, Jes\'{u}s and Robles, Gregorio},
title = {Does computational thinking correlate with personality? the non-cognitive side of computational thinking},
year = {2016},
isbn = {9781450347471},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3012430.3012496},
doi = {10.1145/3012430.3012496},
abstract = {Computational thinking (CT) is being considered as a key set of problem-solving skills to be acquired by the new generations of digital citizens and workers in order to thrive in a computer-based world. However, from a psychometric point of view, CT is still a poorly defined psychological construct: there is no full consensus on a formal definition of CT or how to measure it; and its correlations with other psychological constructs, whether cognitive or non-cognitive, have not been completely established. In response to the latter, this paper aims to study specifically the correlations between CT and the several dimensions from the 'Big Five' model of human personality: Conscientiousness, Openness to Experience, Extraversion, Agreeableness, and Neuroticism. To do so, the Computational Thinking Test (CTt) and the Big Five Questionnaire-Children version (BFQ-C) are administered on a sample (n = 99) of Spanish students from 5th to 10th grade. Results show statistically significant correlations between CT and: Openness to Experience (r = 0.41), Extraversion (r = 0.30), and Conscientiousness (r = 0.27). These results are partially consistent with the literature about the links between cognitive and personality variables, and corroborate the existence of a non-cognitive side of CT. Hence, educational interventions aimed at fostering CT should take into account these non-cognitive issues in order to be comprehensive and successful.},
booktitle = {Proceedings of the Fourth International Conference on Technological Ecosystems for Enhancing Multiculturality},
pages = {51–58},
numpages = {8},
keywords = {personality, educational psychology, computational thinking test, computational thinking, big five model, assessment},
location = {Salamanca, Spain},
series = {TEEM '16}
}

@inproceedings{10.1145/3313831.3376755,
author = {Troiano, Giovanni Maria and Chen, Qinyu and Alba, \'{A}ngela Vargas and Robles, Gregorio and Smith, Gillian and Cassidy, Michael and Tucker-Raymond, Eli and Puttick, Gillian and Harteveld, Casper},
title = {Exploring How Game Genre in Student-Designed Games Influences Computational Thinking Development},
year = {2020},
isbn = {9781450367080},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3313831.3376755},
doi = {10.1145/3313831.3376755},
abstract = {Game design is increasingly used in modern education to foster Computational Thinking (CT). Yet, it is unclear how and if the game genre of student-designed games impact CT and programming. We explore how game genre impacts CT development and programming routines in Scratch games designed by 8th-grade students using a metrics-based approach (i.e., Dr. Scratch). Our findings show that designing particular games (e.g., action, storytelling) impact CT and programming development. We observe, for instance, that CT skills develop and consolidate fast, after which students can focus on aspects more specific to game design. Based on the results, we suggest that researchers and educators in constructionist learning consider the impact of game genre when designing game-based curricula for the learning of programming and CT.},
booktitle = {Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems},
pages = {1–17},
numpages = {17},
keywords = {Dr. Scratch, computational thinking, constructionist learning, game design, game-based learning, scratch, video games},
location = {Honolulu, HI, USA},
series = {CHI '20}
}

@inproceedings{10.1145/3287324.3293833,
author = {Scheppegrell, Lindsey and Hiatt, Elyse and Okerlund, Johanna and Wilson, David},
title = {Computational Thinking in the Making: Lessons for Second Graders in a STEM Computer Science Immersion School},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3293833},
doi = {10.1145/3287324.3293833},
abstract = {Recently, there has been significant interest in integrating Maker-related experiences into formal education. A challenge is reconciling open-ended making and non-deterministic learning goals with standards that drive traditional education. In the context of our CS-focused STEM magnet school, we designed two 2nd grade lessons that not only align with grade-level standards and our school's computer science-oriented pedagogy, but also incorporate 3D printing and the philosophy of Makerspaces. The integrated Maker experience serves to scaffold computational thinking practices such as abstraction, modeling, and decomposition, which are essential for long-term success in STEM learning. To bring these aspects together, we created a rubric based on existing evaluation tools. Using this rubric, we evaluated the two lessons with a small sample of participants. Our pilot study shows promise of mastery in standard-related content, evidence of a making mindset, engagement in the activity, innovation in design, and solidarity in working with peers. Aligning state standards with open-ended Maker activities has potential for fostering student growth and engagement in the classroom. An additional component of our research was reflecting on our experience as teachers with no Makerspace experience who were newly submerged in the digital fabrication world. We present the two 3D printing-based lessons, one addressing extreme weather standards, the other incorporating understanding of urban, suburban, and rural communities. We also present the rubric we designed, the literature that guided this work, and reflections and recommendations from our experience of learning digital fabrication for the first time and integrating it into curriculum.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {1276},
numpages = {1},
keywords = {stem learning, makerspace, maker movement, evaluation tools, digital fabrication, digital education, computational thinking, active learning},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3459990.3465180,
author = {Fuhrmann, Tamar and Ahmed, Deeana Ijaz and Arikson, Len and Wirth, Mike and Miller, Mark L and Li, Ethan and Lam, Amy and Blikstein, Paulo and Riedel-Kruse, Ingmar},
title = {Scientific Inquiry in Middle Schools by combining Computational Thinking, Wet Lab Experiments, and Liquid Handling Robots},
year = {2021},
isbn = {9781450384520},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3459990.3465180},
doi = {10.1145/3459990.3465180},
abstract = {Computational thinking (CT) is necessary for Science, Technology, Engineering, and Mathematics (STEM) literacy, but it can be difficult for many students to develop and it is challenging to integrate into science curricula. Here, we present a five-session curriculum where sixth-grade students programmed a Liquid Handling Robot (LHR) to conduct a science experiment while engaging in CT. We used a mixed-methods approach to assess how the curricular integration of robotics and science experimentation advances students’ CT skills and perceptions of computation in science. We identified growth in CT skills, specifically regarding Algorithmic Thinking. Students identified as key advantages of this approach the increased precision in experimental procedures, time-efficiency, and easier debugging. This course provides a proof of concept curriculum on how the implications for teaching and learning of CT can be assessed, and how CT and robotics can be brought to science classrooms, especially for chemistry and biology.},
booktitle = {Proceedings of the 20th Annual ACM Interaction Design and Children Conference},
pages = {444–449},
numpages = {6},
keywords = {science labs, robotics, hands-on experimentation, computational literacy, Computational thinking},
location = {Athens, Greece},
series = {IDC '21}
}

@inproceedings{10.1145/3102071.3106352,
author = {Rowe, Elizabeth and Asbell-Clarke, Jodi and Gasca, Santiago and Cunningham, Kathryn},
title = {Assessing implicit computational thinking in zoombinis gameplay},
year = {2017},
isbn = {9781450353199},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3102071.3106352},
doi = {10.1145/3102071.3106352},
abstract = {In this study we examine how playing Zoombinis can help upper elementary and middle school learners build implicit computational thinking (CT) skills. Building on prior methods used with the digital science learning games, Impulse and Quantum Spectre, we are combining video analysis and educational data mining to identify implicit computational thinking that emerges through gameplay [1]. This paper reports on the first phase of this process: developing a human labeling system for evidence of specific CT skills (e.g., problem decomposition, pattern recognition, algorithmic thinking, abstraction) in three Zoombinis puzzle by analyzing video data from a sample of elementary learners, middle school learners, game experts, and computer scientists. Future work will combine these human-labeled video data with game log data from these 70+ learners and computer scientists to create automated assessments of implicit computational thinking skills from gameplay behaviors in large player audiences. This poster with video examples will share results of this work-in-progress.},
booktitle = {Proceedings of the 12th International Conference on the Foundations of Digital Games},
articleno = {45},
numpages = {4},
keywords = {video analysis, learning games, implicit learning, computational thinking},
location = {Hyannis, Massachusetts},
series = {FDG '17}
}

@inproceedings{10.1145/3468691.3468712,
author = {Li, Xin-Zhu and Chen, Chun-Ching and Kang, Xin},
title = {Design of Social Story Teaching Aid for Autistic Children Based on Computational Thinking and Its Case Study},
year = {2021},
isbn = {9781450389693},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3468691.3468712},
doi = {10.1145/3468691.3468712},
abstract = {Computational thinking is an emerging teaching strategy as well as an ability necessary for all people in the future. In this study, social stories are used to teach autistic children social skills. Combining sequential computational thinking as a learning strategy and applying Conductive Copper Foil Tape and Makey Makey, a social story teaching aid is made. With the help of it, children can learn the content from social stories, learn social stories through computational thinking and arrange corresponding sequence structure. Three autistic children from Grade 1 took part in six teaching experiments and were observed their change of social skills. The results showed that scientific teaching aid could improve autistic children's social ability, speaking skills, attention, and learning interests, making them observe the storytelling more carefully and easily, understand the story development, and learn social skills from it. Besides, this teaching aid could improve autistic children's social reciprocity and provide theoretical references for relevant fields.},
booktitle = {Proceedings of the 2021 2nd International Conference on Computing, Networks and Internet of Things},
articleno = {21},
numpages = {6},
keywords = {Social stories, Computer-aided instruction, Computational thinking, Autism},
location = {Beijing, China},
series = {CNIOT '21}
}

@inproceedings{10.1145/3328778.3372631,
author = {Liu, Ruohan and Luo, Feiya and Israel, Maya},
title = {Video Analysis of Student Challenges and Interactions in Computational Thinking-integrated Botany},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3372631},
doi = {10.1145/3328778.3372631},
abstract = {This study aimed to understand elementary students' challenges and interactions in computational thinking-integrated botany through robotics activities. Data was collected from screen-casting videos and analyzed using Collaborative Computing Observation Instrument (CCOI), a web-based analysis instrument with nodes and paths that classify and specify students' computing experience. The results revealed that all participants engaged in independent work for most of the time, with short interactions on 1) general computer technology issues; 2) software navigating issues; 3) questions about academic content; 4) computing discussion with the instructor; 5) informing the instructor about task accomplishment. The findings of this study will provide important insights to CS researchers, educators, and elementary teachers regarding CT-integration research and practice.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1299},
numpages = {1},
keywords = {k-8 computer science education, computational thinking},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@article{10.1145/3210553,
author = {Heintz, Fredrik and Mannila, Linda},
title = {Computational thinking for all: an experience report on scaling up teaching computational thinking to all students in a major city in Sweden},
year = {2018},
issue_date = {June 2018},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {9},
number = {2},
issn = {2153-2184},
url = {https://doi.org/10.1145/3210553},
doi = {10.1145/3210553},
abstract = {The Swedish government has recently introduced digital competence including programming in the Swedish K-9 curriculum starting no later than fall 2018. This means that 100 000 teachers need to learn programming and digital competence in less than a year. In this paper we report on our experience working with professional teacher training in Sweden's fifth largest city. The city has about 150 000 inhabitants and about 50 schools with about 14 000 students in primary education. The project has been carried out in close cooperation with the municipality.},
journal = {ACM Inroads},
month = apr,
pages = {65–71},
numpages = {7}
}

@article{10.1145/3214354,
author = {Ya\c{s}ar, Osman},
title = {A new perspective on computational thinking},
year = {2018},
issue_date = {July 2018},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {61},
number = {7},
issn = {0001-0782},
url = {https://doi.org/10.1145/3214354},
doi = {10.1145/3214354},
abstract = {Addressing its cognitive essence, universal value, and curricular practices.},
journal = {Commun. ACM},
month = jun,
pages = {33–39},
numpages = {7}
}

@inproceedings{10.1145/3408877.3432542,
author = {Simmonds, Jocelyn and Gutierrez, Francisco J. and Meza, Federico and Torrent, Catalina and Villalobos, Jaime},
title = {Changing Teacher Perceptions about Computational Thinking in Grades 1-6, through a National Training Program},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432542},
doi = {10.1145/3408877.3432542},
abstract = {Chile is a medium-sized developing country, with approximately 3,500,000 school-aged children. Computational thinking (CT) has been recognized as a tool for developing XXI century skills, but Chile has a large population of in-service teachers that do not know what CT is, limiting its application in classrooms. In response, the government has enacted a training program for in-service primary school teachers, focusing on changing their perceptions about CT, and showing them how it can be used in classroom. This training program was designed for grades 1-6 and piloted in the capital region during 2018. The program initially focused on coding activities, but was then redesigned to show how CT can be used to help meet the learning objectives of different subjects in the curriculum. The program was then scaled up nationwide. In this experience report, we discuss the outcomes of this program. The training program scaled as intended and we identified positive changes in teacher perceptions about CT, especially among female participants. We conclude with the lessons we learned from this experience.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {260–266},
numpages = {7},
keywords = {teacher training programs, gender, computational thinking},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@article{10.5555/3205191.3205198,
author = {Harrison, W. Scott and Hanebutte, Nadine},
title = {Embracing coding mistakes to teach computational thinking},
year = {2018},
issue_date = {June 2018},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {33},
number = {6},
issn = {1937-4771},
abstract = {In this paper, we argue for a pedagogical approach of embracing "mistakes" as an effective teaching tool for coding. This technique of teaching uses mistakes as a learning tool to teach computational thinking. Instead of simply showing and explaining correct solutions, code with logical errors is presented to the class. After verifying the code does not work, the class as a whole, becomes engaged in trying to correct the logical errors in code presented to the class. In this paper, we reference the Student Query Directed Learning approach which we map into our techniques. We present a transcript of a lecture one of the authors has given using this technique to illustrate motivations, how to steer the conversation where we want it to go, and student/instructor interactions. Finally, we suggest some "ground rules" to ensure this environment is all-encompassing and one which is conducive to learning.},
journal = {J. Comput. Sci. Coll.},
month = jun,
pages = {52–62},
numpages = {11}
}

@inproceedings{10.1145/3373165.3373173,
author = {Zhang, LeChen and Nouri, Jalal and Rolandsson, Lennart},
title = {Progression Of Computational Thinking Skills In Swedish Compulsory Schools With Block-based Programming},
year = {2020},
isbn = {9781450376860},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3373165.3373173},
doi = {10.1145/3373165.3373173},
abstract = {Although Computational Thinking and Programming have become obligatory in many national curricula, the majority of teachers in practice are currently in dire need of support from both the research and teaching community. A national research and teacher development project was initiated in Sweden to address this issue. To develop their pedagogical competence in these new subjects, 31 in-service teachers from the project performed lesson studies at their schools. This study collected and analyzed the documentation of 12 lesson studies regarding how computational thinking skills are taught and assessed in K--9, with block-based programming. The study applies a validated CT framework to identify the involved computational thinking skills. The result presents a progression stage scheme for these skills in compulsory schools. The paper also discusses the problems and challenges in the assessment of computational thinking skills.},
booktitle = {Proceedings of the Twenty-Second Australasian Computing Education Conference},
pages = {66–75},
numpages = {10},
keywords = {Progression, Programming, Computational thinking, Compulsory education, Block-based programming, Assessment},
location = {Melbourne, VIC, Australia},
series = {ACE'20}
}

@inproceedings{10.1145/2999541.2999542,
author = {Tedre, Matti and Denning, Peter J.},
title = {The long quest for computational thinking},
year = {2016},
isbn = {9781450347709},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2999541.2999542},
doi = {10.1145/2999541.2999542},
abstract = {Computational thinking (CT) is a popular phrase that refers to a collection of computational ideas and habits of mind that people in computing disciplines acquire through their work in designing programs, software, simulations, and computations performed by machinery. Recently a computational thinking for K-12 movement has spawned initiatives across the education sector, and educational reforms are under way in many countries. However, modern CT initiatives should be well aware of the broad and deep history of computational thinking, or risk repeating already refuted claims, past mistakes, and already solved problems, or losing some of the richest and most ambitious ideas in CT. This paper presents an overview of three important historical currents from which CT has developed: evolution of computing's disciplinary ways of thinking and practicing, educational research and efforts in computing, and emergence of computational science and digitalization of society. The paper examines a number of threats to CT initiatives: lack of ambition, dogmatism, knowing versus doing, exaggerated claims, narrow views of computing, overemphasis on formulation, and lost sight of computational models.},
booktitle = {Proceedings of the 16th Koli Calling International Conference on Computing Education Research},
pages = {120–129},
numpages = {10},
keywords = {history of computational thinking, disciplinary ways of thinking and practicing, computer science education, computational thinking, computational ideas, CSER},
location = {Koli, Finland},
series = {Koli Calling '16}
}

@article{10.1145/2998438,
author = {Denning, Peter J.},
title = {Remaining trouble spots with computational thinking},
year = {2017},
issue_date = {June 2017},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {60},
number = {6},
issn = {0001-0782},
url = {https://doi.org/10.1145/2998438},
doi = {10.1145/2998438},
abstract = {Addressing unresolved questions concerning computational thinking.},
journal = {Commun. ACM},
month = may,
pages = {33–39},
numpages = {7}
}

@article{10.5555/3015220.3015255,
author = {Hoskey, Arthur and Zhang, Sen},
title = {Computational thinking: what does it really mean for the K-16 computer science education community},
year = {2017},
issue_date = {January 2017},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {32},
number = {3},
issn = {1937-4771},
abstract = {It is commonly agreed that being able to think computationally will make it easier for students to master computing disciplines as well as apply these thinking skills to subjects beyond computing. In this work, we attempt to bridge the gap between the overarching high-level ideas initially proposed by Jeanette Wing and K-16 computer science education. We propose a first step towards refining, summarizing and concretizing what computational thinking is within the K-16 computer science education scope. Our focus is on identifying and defining aspects (subtopics) of computational thinking that directly relate to computer science in terms of K-16 teaching and learning of computer science.},
journal = {J. Comput. Sci. Coll.},
month = jan,
pages = {129–135},
numpages = {7}
}

@inproceedings{10.1145/3144826.3145351,
author = {Figueiredo, Jos\'{e} and Garc\'{\i}a-Pe\~{n}alvo, Francisco J.},
title = {Improving Computational Thinking Using Follow and Give Instructions},
year = {2017},
isbn = {9781450353861},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3144826.3145351},
doi = {10.1145/3144826.3145351},
abstract = {Computational Thinking can be defined as a set of skills for problem solving based on Computer Science. Computational Thinking skills are not only limited to the field of computing but also extensible to all areas of knowledge. Young people grow up surrounded by technology but many of them go for university without any prior knowledge in computer science. Several initiatives have been created to promote Computational Thinking abilities in students all over the world. Teaching computational thinking must necessarily involve problem-solving, and can be applied to various types of problems that do not directly involve coding tasks. However, it is recognized to everyone that programming is a good way to improve Computational Thinking. In this article, we have done a survey on the existing tools that use the codification as main means of development of the abilities of computational thinking or not. It was also a concern to mention those that provide a wide variety of resources for teachers. This paper is an attempt to demonstrate the importance of computational thinking in the first beginning of learning programming, and what activities best contribute to increase the abilities of each computer engineering student in computational thinking according to the characteristics of those who attend the Polytechnic of Guarda, Portugal. Most of our students have never had the opportunity to learn computational thinking.},
booktitle = {Proceedings of the 5th International Conference on Technological Ecosystems for Enhancing Multiculturality},
articleno = {3},
numpages = {7},
keywords = {teaching programming, learning programming, Programming, Computational thinking, CS1, CS0},
location = {C\'{a}diz, Spain},
series = {TEEM 2017}
}

@inproceedings{10.1145/3291279.3339430,
author = {Musaeus, Line Have},
title = {Developing Student's Computational Thinking through Agent-Based Modeling in Secondary Education},
year = {2019},
isbn = {9781450361859},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3291279.3339430},
doi = {10.1145/3291279.3339430},
abstract = {Computational thinking (CT) is emerging as an important theme in computer science and high school education. However, research is needed to develop pedagogies for introducing students to CT. This research study examines the possible synergistic effect of implementing CT into a STEM subject, e.g. biotechnology. The study uses three interventions in which students work with predesigned computer models. Quantitative and qualitative methods are being used to gather data for analyzing students' gain in both content knowledge and CT.},
booktitle = {Proceedings of the 2019 ACM Conference on International Computing Education Research},
pages = {345–346},
numpages = {2},
keywords = {teacher professional development, k-12 education, educational intervention, computer models, computational thinking},
location = {Toronto ON, Canada},
series = {ICER '19}
}

