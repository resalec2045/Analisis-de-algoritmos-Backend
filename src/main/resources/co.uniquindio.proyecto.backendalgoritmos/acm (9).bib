@inproceedings{10.1145/3441636.3442311,
author = {Munasinghe, Bhagya and Bell, Tim and Robins, Anthony},
title = {Teachers’ understanding of technical terms in a Computational Thinking curriculum},
year = {2021},
isbn = {9781450389761},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3441636.3442311},
doi = {10.1145/3441636.3442311},
abstract = {Teachers new to computing who are not familiar with technical “jargon” can feel like they have landed in a foreign world, making them reluctant to take on the subject, and potentially leading to misconceptions and misunderstandings in the classroom. The diversity of technical words, metaphors, and phrases in different contexts can make their meanings confusing, ambiguous or misunderstood for the diverse user groups in computing education. Therefore, understanding the nature of the commonly claimed difficulties and confusion caused by computer jargon among teachers becomes important for finding ways to address this issue. This paper presents the findings of an empirical study conducted to understand the nature of teachers’ understanding of computational terms (jargon) related to Computational Thinking concepts, and how a relevant professional development intervention can help to resolve issues related to them. The results indicate that the nature of the teachers’ understanding of computational terms can be either that the computational meaning is not known, that the computational context is unclear, or their applicability is unclear. Concerns about teachers finding computer jargon difficult to understand can be because the computational context in which they are applied makes them difficult for teachers to understand, rather than not knowing their meanings in the first place. Moreover, appropriate support can enable teachers to learn the techniques and skills that the terminology refers to.},
booktitle = {Proceedings of the 23rd Australasian Computing Education Conference},
pages = {106–114},
numpages = {9},
keywords = {jargon, Teachers, Professional development, K-12, Computational thinking},
location = {Virtual, SA, Australia},
series = {ACE '21}
}

@article{10.5555/3512489.3512490,
author = {Flinn, Michael B. and McGee, Kristine and Barnes, Katelyn and Morton, Haylee},
title = {Integrating computational thinking into K-12 teacher preparation: a collaborative partnership between the department of computer science and the college of education: panel discussion},
year = {2021},
issue_date = {October 2021},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {37},
number = {3},
issn = {1937-4771},
abstract = {Computer science education is more important than ever. The COVID-19 pandemic has highlighted our society's reliance on computing and its power to help businesses innovate and adapt, yet at the same time has surfaced greater disparities for students studying computer science. Computing is the number one source of all new wages in our economy, and there are currently 400,000 open computing jobs across the United States. However, unequal access to computer science instruction and opportunities to engage in computational thinking and practices remain prevalent (Google \&amp; Gallup, 2015). In the 2018-19 school year, only 15 percent of Maryland graduates took at least one computing related course, and there were significant gaps in the course taking patterns by gender and race (Maryland Center for Computing Education, 2021). To grow students' competencies with computational thinking and computer science, it is essential to build the capacity of teachers to integrate computational thinking competencies and standards into their practice. The Frostburg State University College of Education's Maryland Accelerates (MA) Program provides aspiring teachers the opportunity to earn an accelerated Master of Arts in Teaching (Elementary or Secondary track) degree along with an innovative yearlong teacher residency in partnership with Frederick and Garrett County Public Schools. One of the primary goals of the program is to integrate mathematical problem solving and computational thinking to promote scientific inquiry in partnering elementary and secondary schools. To this end, Frostburg State University has developed an exciting opportunity for Master of Arts in Teaching (MAT) students to earn a microcredential in Computational Thinking that is aligned to the ISTE Educator Standards, the High Leverage Practice Standards from TeachingWorks, and the Interstate Teacher Assessment and Support Consortium InTASC Model as part of their teacher preparation program. In this panel, faculty from the Computer Science Department and the College of Education at Frostburg State University will discuss their partnership to develop a microcredential for Computational Thinking for pre-service teachers, how and why the credential was developed, and what competencies aspiring teachers develop. Two recent graduates of the Maryland Accelerates MAT Teacher Residency program will discuss their experience using these skills and knowledge during their residency and how they plan to apply and integrate computational thinking into their practice as new teachers.},
journal = {J. Comput. Sci. Coll.},
month = oct,
pages = {15–17},
numpages = {3}
}

@inproceedings{10.1145/3408877.3439621,
author = {Bao, Yeting and Hosseini, Hadi},
title = {Computational Thinking, Perception, and Confidence in Distance Learning},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3439621},
doi = {10.1145/3408877.3439621},
abstract = {One of the key factors for measuring success in distance learning is student interaction with learning materials. Remote instruction has gained substantial traction with the advent of online education, and this attention has increased in the presence of global pandemics. The asynchronous nature of remote learning has deteriorated the quality of education for learners, which calls for the design of novel interactive techniques to promote student engagement. We study the impact of traditional learning tools such as textbooks and videos in contrast with interactive learning media in computational and algorithmic thinking, and investigate students' perception of learning and actual learning comprehension in higher education.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {1253},
numpages = {1},
keywords = {visualization, computational problem solving, algorithms},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3308561.3354608,
author = {India, Gesu and Ramakrishna, Geetha and Bisht, Jyoti and Swaminathan, Manohar},
title = {Computational Thinking as Play: Experiences of Children who are Blind or Low Vision in India},
year = {2019},
isbn = {9781450366762},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3308561.3354608},
doi = {10.1145/3308561.3354608},
abstract = {Torino is a tangible programming environment designed for teaching the computational thinking curriculum in the UK to children who are blind or low vision (henceforth, just children) in an inclusive setting. In this paper we describe the experience of children in Bangalore, India, when Torino was introduced to them as a toy for creating and sharing stories, songs and music. We conducted 12 play sessions with 12 children (4 girls and 8 boys) with diverse backgrounds belonging to three different schools for the blind. We briefly present the reasons for play being central to our effort of bringing computational thinking to children who are blind and low vision in India, and share some experiences of the children and some insights that we have gathered so far: Children not only enjoyed every session, they rapidly moved from playing with pre-created examples, to making changes, to demanding that their favorite stories be told. In observing such play, we could infer that they have grasped the basic concepts of computational thinking? flow of control, variables, loops? though not articulated in that vocabulary.},
booktitle = {Proceedings of the 21st International ACM SIGACCESS Conference on Computers and Accessibility},
pages = {519–522},
numpages = {4},
keywords = {digital skills, pedagogy, primary school},
location = {Pittsburgh, PA, USA},
series = {ASSETS '19}
}

@inproceedings{10.1145/3287324.3293763,
author = {Grover, Shuchi},
title = {Thinking about Computational Thinking: Lessons from Education Research},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3293763},
doi = {10.1145/3287324.3293763},
abstract = {Computational thinking (CT) is a means to help learners engage in authentic disciplinary and problem-solving practices of computer science (CS). For CS classrooms, CT is considered "thinking like a computer scientist". CT is believed to be an important learning goal of introductory CS in addition to CS concepts and programming. Despite the growing attention on CT in K-12 CS education, there is lingering confusion on the what and how of CT, and CT's relationship to coding and CS. Education research on disciplinary thinking skills in science and mathematics education can provide guidance for teaching and learning of CT. For example, (a) The shift in emphasis on disciplinary thinking helps focus on deeper conceptual understanding rather than rote learning of knowledge and facts. Hence thinking like a scientist, or mathematician, historian or computer scientist, draws attention to authentic practices of those disciplines. (b) Thinking skills are best taught in context. Therefore, CT should be taught in CS classrooms or integrated into learning of other subjects rather than taught as a separate skill or subject. (c) Even if there is no transfer beyond the context in which they are taught, a focus on thinking skills helps in deeper conceptual learning; (d) Like critical or creative thinking, CT should be integrated into other subjects to enrich learning. Research on meaningful technology integration across subjects provides useful frameworks to inform CT integration efforts. This talk aims to productively move the discourse on CT toward concrete ideas for K-12 educators, researchers, and curricular designers.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {1283},
numpages = {1},
keywords = {problem solving, k-12 computer science, disciplinary thinking skills, computational thinking},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@article{10.5555/3606388.3606393,
author = {Azhar, Mohammad Q. and Powers, Jillian and Musgrove, Ann},
title = {Examining the Computational Thinking and Robotics Knowledge and Interest of Undergraduate Students in Two Teacher Education Courses},
year = {2023},
issue_date = {April 2023},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {38},
number = {6},
issn = {1937-4771},
abstract = {This research examines the impact of online instructional modules that integrated computational thinking (CT) and robotics in two teacher education courses on students' knowledge and interest in CT and robotics. Ninety-three (93) students from a lower-division instructional technology course and Fifty-nine (59) students from an upper-division instructional technology course participated in the study. One-sample paired t-tests were conducted to determine whether significant differences existed in participants' self-reported CT and robotics knowledge and interest from before and after the instruction. The results of the analysis found some statistically significant differences in mean CT and robotics knowledge and interest from pre-test to post-test in both courses suggesting this form of instruction can increase students' knowledge and interest in these concepts.},
journal = {J. Comput. Sci. Coll.},
month = apr,
pages = {40–50},
numpages = {11}
}

@inproceedings{10.1145/3501712.3529745,
author = {Bakala, Ewelina and Gerosa, Anaclara and Hourcade, Juan Pablo and Pascale, Maria and Hergatacorzian, Camila and Tejera, Gonzalo},
title = {Design Factors Affecting the Social Use of Programmable Robots to Learn Computational Thinking in Kindergarten},
year = {2022},
isbn = {9781450391979},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3501712.3529745},
doi = {10.1145/3501712.3529745},
abstract = {Programmable robots designed for preliterate children are one of the options being explored and put into practice for teaching computational thinking skills to children in preschool and kindergarten. Classroom use of these robots may involve use by groups of children due to cost, logistical, and pedagogical reasons. To understand design factors affecting the social use of these robots, we explored the use of three programmable robots with distinctive design characteristics in a kindergarten classroom. Our findings suggest that programmable robot designs that may work well for use by individual children may cause difficulties when shared by groups of children if not all children in the group are able to easily perceive the input (program), output (robot actions), or program state. Based on these design factors we provide recommendations for the design of programmable robots, their evaluation for social use, and for addressing design limitations with support by adult facilitators.},
booktitle = {Proceedings of the 21st Annual ACM Interaction Design and Children Conference},
pages = {422–429},
numpages = {8},
keywords = {social use, programmable robot, perception, kindergarten children, computational thinking},
location = {Braga, Portugal},
series = {IDC '22}
}

@inproceedings{10.1145/3501709.3544285,
author = {Ritter, Frauke and Standl, Bernhard},
title = {Promoting Computational Thinking in Teacher Education - Combining Semantic Waves and Algorithmic Thinking},
year = {2022},
isbn = {9781450391955},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3501709.3544285},
doi = {10.1145/3501709.3544285},
abstract = {Teaching algorithmic thinking and programming is an important competency for future informatics teachers to acquire. To encourage this, we are investigating the development of a teaching-learning structure that combines the concept of semantic waves and algorithmic thinking with integrating block-based languages. In our teaching-learning laboratory for informatics (TLL), pre-service informatics teachers develop workshops based our concept, evaluate them with school classes and reflect on their didactic learning. Our concept is evaluated by students’ algorithmic thinking and their perception of the semantic wave using mixed methods. This poster presents one workshop based on our teaching-learning structure and its research procedures.},
booktitle = {Proceedings of the 2022 ACM Conference on International Computing Education Research - Volume 2},
pages = {48–49},
numpages = {2},
keywords = {semantic wave, block-based programming, Algorithmic Thinking},
location = {Lugano and Virtual Event, Switzerland},
series = {ICER '22}
}

@inproceedings{10.1145/3514262.3514311,
author = {Wang, Juan and Bai, Xinye and Xiang, Qianchen and An, Langsha and Cai, Minghan and He, Chunlin},
title = {Research on the Improvement of Teachers' Computational Thinking Teaching Ability Based on STEM86 Platform},
year = {2022},
isbn = {9781450387187},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3514262.3514311},
doi = {10.1145/3514262.3514311},
abstract = {At present, there is a certain lag in the teaching ability of computational thinking in our country. This article is based on STEM86 platform, ISTE published by the author "Educator standards: Under the guidance of computational Thinking ability, a standard system for evaluating teachers' computational thinking teaching ability was constructed, and a test scale for evaluating teachers' computational thinking teaching ability was designed. The reliability and validity test and difficulty differentiation test proved that the designed test scale had good scientificity and reliability. On this basis, using this scale, through the empirical way, from three dimensions of computer discipline knowledge and skills, teaching design ability, evaluation and reflection ability to evaluate teachers before and after using STEM86 platform computational thinking teaching ability changes. The results show that STEM86 platform not only solves teachers' programming teaching resource needs, but also effectively improves teachers' computational thinking teaching ability, and provides more references and ideas for teachers' computational thinking teaching ability improvement research.},
booktitle = {Proceedings of the 2022 13th International Conference on E-Education, E-Business, E-Management, and E-Learning},
pages = {173–177},
numpages = {5},
keywords = {STEM86 platform, Computational thinking teaching ability},
location = {Tokyo, Japan},
series = {IC4E '22}
}

@inproceedings{10.1145/3488042.3489964,
author = {Zhidkikh, Denis and Fagerlund, Janne and Peltonen, Marika and Vesisenaho, Mikko},
title = {”CodeInnova”: A Unified Framework for Teaching Programming and Computational Thinking In Primary Schools},
year = {2021},
isbn = {9781450384889},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3488042.3489964},
doi = {10.1145/3488042.3489964},
abstract = {Teaching programming and computational thinking (CT) in primary schools have become more common in the last decade. However, there has been little international consensus on what teaching the topics encompass. We present CodeInnova, a framework developed jointly between four partnering countries for teaching programming and CT in K–9. In this paper, we present the curriculum for teaching CT and the accompanying teaching materials developed in CodeInnova. We also discuss preliminary results of testing the developed resources in classrooms.},
booktitle = {Proceedings of the 21st Koli Calling International Conference on Computing Education Research},
articleno = {35},
numpages = {3},
keywords = {programming, primary education, computational thinking},
location = {Joensuu, Finland},
series = {Koli Calling '21}
}

@article{10.5555/3447080.3447107,
author = {Jamieson, Alan C. and Jamieson, Lindsay H.},
title = {Computational thinking for computer science majors: an introduction to CS education career pathways},
year = {2020},
issue_date = {October 2020},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {36},
number = {3},
issn = {1937-4771},
abstract = {In general, computer science majors do not consider K-12 education as a career pathway. A potential reason is a lack of introduction to the career path during their undergraduate careers. In this project, supported through a grant from the Maryland Center for Computing Education (cs4md.org), we developed a pilot computational thinking course blending computer science majors and pre-service teachers. The course focused on describing and integrating computational thinking in a way that would translate to K-12 classrooms while utilizing non-programming based computational tools to demonstrate these ideas. Participants were able to put these ideas into practice in K-8 classrooms during the course and reflect on how the lessons were received. We discuss the implementation of the course, field placement, motivations, and our initial analysis of survey data, including impacts on attitudes on education as a career choice for computer science majors.},
journal = {J. Comput. Sci. Coll.},
month = oct,
pages = {171},
numpages = {1}
}

@inproceedings{10.1145/3545945.3569856,
author = {Garcia, Leiny Y. and Parker, Miranda C. and Ojeda-Ramirez, Santiago and Warschauer, Mark},
title = {Confidence is the Key: Unlocking Predictive Factors of Latinx Elementary Students on a Computational Thinking Measure},
year = {2023},
isbn = {9781450394314},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545945.3569856},
doi = {10.1145/3545945.3569856},
abstract = {As computing education begins to grow in K-12 classrooms, it is increasingly important to understand the relationships between a student's coding attitudes and computing outcomes. While work has been done at the undergraduate and high school level, less is known about elementary students, and even less about Latinx students. We sought to explore the connections between Latinx elementary students' coding attitudes and computational thinking (CT) skills after participating in a year-long, remote computing curriculum in a public school district in Southern California. We collected validated measures on coding attitudes and CT skills for 164 fourth-grade students. We used structural equation modeling to analyze the relationship between the coding attitude constructs (i.e., confidence, utility, perception of coders, social influences, and interest) and scores on a CT assessment while controlling for demographic factors (i.e., gender, English language fluency, free or reduced lunch status, reading and math standardized test scores). In a model demonstrating acceptable fit, only math scores were a significant predictor of CT scores and coding confidence. Confidence was found to be significantly associated with the other attitude constructs except for perception of coders. Our results indicate that confidence plays a prominent role in student computing learning, especially at a young age. Efforts to better support Latinx students in computer science should include strategies that address students' coding confidence, such as developing positive perceptions of a student's learning process (e.g., failures as learning opportunities) in specific coding skills and practices (e.g., tinkering, debugging).},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
pages = {326–332},
numpages = {7},
keywords = {confidence, early coding attitudes, elementary school, latinx},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3551708.3556217,
author = {Shen, Wenyao and Zhan, Zehui and Li, Chen and Chen, Han and Shen, Ranhao},
title = {Constructing Behavioral Representation of Computational Thinking based on Event Graph: A new approach for learning analytics},
year = {2022},
isbn = {9781450396455},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3551708.3556217},
doi = {10.1145/3551708.3556217},
abstract = {At present, the mainstream means of measuring and assessing computational thinking are test papers and scales, which enable us to measure the level of students' computational thinking as a whole, but fail to represent the inner laws and thinking processes, thus cause difficulty on providing appropriate guidance. In this study, data embedding technology was adopted to collect data on students' operational behavior in answering questions, and learning analytic techniques (i.e., semantic analysis, lagged sequence analysis, etc.) were used to evaluate computational thinking. Students with higher- and lower-level of computational thinking were compared on their behavioral patterns in a seriel events in the computational thinking training process. An event graph was constructed to represent the computational thinking behaviors based on logical event relationships. This study provides insights on a novel approach of analyzing computational thinking from the procedural perspective, which could be helpful for understanding how the thinking path is structured during problem-solving process.},
booktitle = {Proceedings of the 6th International Conference on Education and Multimedia Technology},
pages = {45–52},
numpages = {8},
location = {Guangzhou, China},
series = {ICEMT '22}
}

@inproceedings{10.1145/3555009.3555030,
author = {Lehtim\"{a}ki, Taina and Hamm, James and Mooney, Aidan and Casey, Kevin and Monahan, Rosemary and Naughton, Thomas J.},
title = {A computational thinking module for secondary students and pre-service teachers using Bebras-style tasks},
year = {2022},
isbn = {9781450397421},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3555009.3555030},
doi = {10.1145/3555009.3555030},
abstract = {We have developed a Transition Year (TY) computational thinking module (for 15-16 year olds) based on Bebras tasks that was delivered online by teachers at 240 schools in Ireland during 2021-2022. To serve primary and secondary pre-service teachers, we have started developing a 24-hour module based on this TY module. We are co-creating the module with education experts and CS academics working collaboratively. The education experts consist of academics and pre-service teachers from both primary and secondary teaching departments at our institution.},
booktitle = {Proceedings of the 2022 Conference on United Kingdom \&amp; Ireland Computing Education Research},
articleno = {19},
numpages = {1},
location = {Dublin, Ireland},
series = {UKICER '22}
}

@inproceedings{10.1145/3408877.3432366,
author = {Salac, Jean and Thomas, Cathy and Butler, Chloe and Franklin, Diana},
title = {Supporting Diverse Learners in K-8 Computational Thinking with TIPP&amp;SEE},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432366},
doi = {10.1145/3408877.3432366},
abstract = {With the growth of Computer Science (CS) and Computational Thinking (CT) instruction in the primary/elementary domain, it is important that such instruction supports diverse learners. Four categories of students -- students in poverty, multi-lingual students, students with disabilities, and students who have below-grade-level proficiency in reading and math, may face academic challenges that can hinder their learning in CS/CT curricula. However, little is known about how to support these students in CS/CT instruction, especially at this young age. TIPP&amp;SEE, a meta-cognitive strategy that scaffolds learning by proceduralizing engagement through example code, may offer some support. A quasi-experimental study revealed that the gaps between students with and without academic challenges narrowed when using the TIPP&amp;SEE strategy, indicating its promise in providing equitable learning opportunities in CS/CT.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {246–252},
numpages = {7},
keywords = {scratch, learning strategy, elementary/primary education, computational thinking},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3446871.3469746,
author = {Salac, Jean and Thomas, Cathy and Butler, Chloe and Franklin, Diana},
title = {Investigating the Role of Cognitive Abilities in Computational Thinking for Young Learners},
year = {2021},
isbn = {9781450383264},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3446871.3469746},
doi = {10.1145/3446871.3469746},
abstract = {With the global movement to incorporate computer science instruction into elementary education, learners are being introduced to computer science and computational thinking (CS/CT) ideas at increasingly younger ages. At these early ages, young learners are developing cognitive abilities foundational to their education. While other discipline-based education fields, such as math, science, and reading, have long studied the role of cognitive abilities, such as short-term working memory and long-term retrieval, in their respective fields, similar research in computer science education is relatively sparse. In this exploratory study, we examined the relationship between cognitive abilities and CS/CT performance of fourth-grade students (ages 9-10) who underwent either an introductory CT curriculum based on Use–&gt;Modify–&gt;Create or the same curriculum with additional scaffolding from the TIPP&amp;SEE metacognitive learning strategy. Our analysis revealed performance on CT assessments to be weakly correlated with working memory and long-term retrieval, with correlations increasing as the CT concepts grew more complex. This suggests that scaffolding beyond TIPP&amp;SEE may be needed with more complex CT concepts. We also found that when using TIPP&amp;SEE, students scoring below average on cognitive ability tests performed as well as students in the control condition with average cognitive ability scores. These results indicate TIPP&amp;SEE’s potential in creating more equitable computing instruction. We hope that results from this initial exploration can help encourage further study into the role of cognitive abilities in CS/CT education for young learners.},
booktitle = {Proceedings of the 17th ACM Conference on International Computing Education Research},
pages = {2–17},
numpages = {16},
keywords = {memory, elementary education, computational thinking, cognitive abilities},
location = {Virtual Event, USA},
series = {ICER 2021}
}

@inproceedings{10.1145/3502718.3524804,
author = {Lehtim\"{a}ki, Taina and Monahan, Rosemary and Mooney, Aidan and Casey, Kevin and Naughton, Thomas J.},
title = {Bebras-inspired Computational Thinking Primary School Resources Co-created by Computer Science Academics and Teachers},
year = {2022},
isbn = {9781450392013},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3502718.3524804},
doi = {10.1145/3502718.3524804},
abstract = {This paper describes our process of creating computational thinking (CT) resources for primary school teachers in Ireland. The National Council for Curriculum and Assessment has proposed a revised primary mathematics curriculum with an emphasis on CT skills and problem solving, and some teachers would like to introduce it already on an informal basis. However, CT is not yet part of teacher training. Our motivating question has been: how can teachers without a computer science background deliver CT at primary level in Ireland? Our process involves third-level computer science academics co-creating resources with in-service and pre-service teachers during workshops. The resources comprise a workbook and lesson plans. Our resources are based on tasks from the International Bebras Challenge, a well-known large-scale international CT contest with a reasonably gender-neutral profile of school-age participants. The workbook consists of ten Bebras tasks, each followed by a page of original activities on the theme of the task. A set of ten lesson plans accompanies the workbook. Each lesson plan has information about how to use the corresponding workbook activities in the classroom, where the activity might fit into the existing curriculum, categorisation of the task in terms of eight CT topics, differentiation, and extension activities. This paper explains our process of workshop planning, workbook creation, and lesson plan co-creation. Preliminary evaluation of our process uses teacher feedback.},
booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 1},
pages = {207–213},
numpages = {7},
keywords = {workbook, primary school, partnership, lesson plans, computational thinking, co-creation, bebras tasks},
location = {Dublin, Ireland},
series = {ITiCSE '22}
}

@inproceedings{10.1145/3670013.3670026,
author = {Yang, Hairu and Dong, Jiamin and Li, Qiuhong and Shao, Yanru and Liu, Yuqi and Xu, Fei},
title = {Current status and enhancement strategies for developing computational thinking of high school students in blended learning --Take the high school information technology curriculum as an example},
year = {2024},
isbn = {9798400717062},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3670013.3670026},
doi = {10.1145/3670013.3670026},
abstract = {In the information age, computational thinking has become a basic quality necessary for learners. How to effectively improve the teaching effect and cultivate students' computational thinking ability has become the focus of most scholars. With the extensive development of "Internet+", the traditional face-to-face offline teaching mode has been unable to meet the diversified and personalized learning needs of students, and blended learning has become a brand-new teaching mode, and studies have shown that blended learning can effectively improve the computational thinking ability of learners. Therefore, this study analyzes and discusses the current situation of high school students' computational thinking ability in blended learning, which helps us to deeply understand the current situation of high school students' blended learning, think about how to promote high school students' blended learning, and improve high school students' computational thinking ability, so as to promote the quality of education and teaching. In this study, the literature research method, interview analysis method and questionnaire survey method were used to investigate the current situation of blended teaching activities on the cultivation of computational thinking with 138 freshmen, sophomores and juniors in a high school in western China. The results found that the overall situation of computational thinking level in blended learning of students in a high school in western China was moderate. This was characterized by better levels of cooperative and critical thinking skills, and poorer levels of creativity, algorithmic thinking and problem solving skills. By describing the current situation, it can be seen that there are some problems in the level of computational thinking ability of high school students in blended learning, based on this, this study, based on the specific research data, combined with the results of the interviews, puts forward some suggestions for improving the cultivation of high school students' computational thinking ability in blended learning in a high school in western China in three aspects.},
booktitle = {Proceedings of the 2024 15th International Conference on E-Education, E-Business, E-Management and E-Learning},
pages = {70–77},
numpages = {8},
location = {Fukuoka-shi, Japan},
series = {IC4E '24}
}

@inproceedings{10.1145/3369255.3369303,
author = {Sondakh, Debby E. and Osman, Kamisah and Zainudin, Suhaila},
title = {Holistic Assessment of Computational Thinking for Undergraduate: Reliability and Convergent Validity},
year = {2020},
isbn = {9781450372541},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3369255.3369303},
doi = {10.1145/3369255.3369303},
abstract = {This paper reports a pilot test to a scale called 'Holistic Assessment of Computational Thinking (Hi-ACT. Hi-ACT is seven-point Likert type scale comprises 155 items, resulting form a consensus study completed earlier, which aimed at measure undergraduate students computational thinking skill. The questionnaire was piloted among fourth-year undergraduate students recruited from five faculties in two universities (N=548) in Indonesia. Structural equation modeling with partial least squares technique was followed to establish the factor structure of the scale. The internal consistency reliability was assessed using composite reliability. The convergent validity was evaluated based on two criteria, the outer loadings and the average variance extracted. Accordingly, 44 items that did not load properly on a particular construct were excluded, and the refined scale has confirmed its reliability and validity to the acceptable requirements.},
booktitle = {Proceedings of the 11th International Conference on Education Technology and Computers},
pages = {241–245},
numpages = {5},
keywords = {Undergraduate, Computational Thinking, Assessment},
location = {Amsterdam, Netherlands},
series = {ICETC '19}
}

@inproceedings{10.1145/3430665.3456355,
author = {Saito-Stehberger, Dana and Garcia, Leiny and Warschauer, Mark},
title = {Modifying Curriculum for Novice Computational Thinking Elementary Teachers and English Language Learners},
year = {2021},
isbn = {9781450382144},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3430665.3456355},
doi = {10.1145/3430665.3456355},
abstract = {The demand for computational thinking (CT) problem solving abilities surge as every aspect of life becomes more dependent on complex digital technologies. Just as in math and language, a strong CT foundation needs to be established in early education in order for students to develop an instinctive CT perspective of the world. The urgent demand for CT instruction in elementary school quickly draws attention to the shortage of elementary school-level teachers qualified and interested in CT. Additionally, with a commitment to equity in the United States education system and knowledge of the high percentage of English language learning (ELL) students in schools, the obligation to create curricula that will provide access to CT knowledge, skills, and practices for elementary-level ELL students is loudly apparent. In response to these two needs, our team has adapted existing Scratch-based CT curriculum to support classroom teachers with minimal CT experience and to be more accessible to English language learners. The purpose of this paper is to share the framework that guided the curriculum adaptations, to describe the specific changes that were made, and to discuss discoveries made during the process. This journey may be helpful to anyone who is tasked with modifying a curriculum to meet the needs of novice content teachers and ELL students.},
booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
pages = {136–142},
numpages = {7},
keywords = {elementary education, curriculum design, computational thinking, English language learners},
location = {Virtual Event, Germany},
series = {ITiCSE '21}
}

